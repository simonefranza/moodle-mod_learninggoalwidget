{"version":3,"file":"form_settings.min.js","sources":["../src/form_settings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @copyright  University of Technology Graz\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* eslint \"require-jsdoc\": [\"error\", {\n    \"require\": {\n        \"FunctionDeclaration\": false,\n        \"MethodDefinition\": false,\n        \"ClassDeclaration\": false,\n        \"ArrowFunctionExpression\": false,\n        \"FunctionExpression\": false\n    }\n}] */\n\n/**\n * Javascript to initialise the Learning Goals Widget.\n *\n * @copyright  University of Technology Graz\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n    [\n        'jquery',\n        \"mod_learninggoalwidget/controller\",\n        \"core/templates\",\n        'core/modal_factory',\n        'core/modal_events'\n    ],\n    function (\n        $,\n        Controller,\n        Templates,\n        ModalFactory,\n        ModalEvents\n    ) {\n\n        var TEMPLATES = {\n            GOAL_MODAL_VIEW: \"mod_learninggoalwidget/editor/goalmodalview\",\n            TOPIC_MODAL_VIEW: \"mod_learninggoalwidget/editor/topicmodalview\",\n            TOPIC: \"mod_learninggoalwidget/editor/topic\",\n            GOAL: \"mod_learninggoalwidget/editor/goal\",\n            NOTOPICS: \"mod_learninggoalwidget/editor/notopics\",\n        };\n\n        var MODAL_ITEM_SELECTORS = {\n            ITEM_TITLE_FIELD: '[data-action=\"itemtitle\"]',\n            ITEM_SHORTNAME_FIELD: '[data-action=\"itemshortname\"]',\n            ITEM_URL_FIELD: '[data-action=\"itemurl\"]',\n        };\n\n        var course = null;\n        var coursemodule = null;\n        var instance = null;\n        var taxonomy = null;\n        var selectedTopic = null;\n        var selectedTopicElement = null;\n\n        /**\n         * Initialise all of the modules for the Learning Goals Widget.\n         * @param {string} paramCourse The course ID\n         * @param {string} paramCoursemodule The course module ID\n         * @param {string} paramInstance The course module instance ID\n         * @param {string} paramTaxonomy The learning goal taxonomy as string\n         */\n        var init = function (paramCourse, paramCoursemodule, paramInstance, paramTaxonomy) {\n\n            course = paramCourse;\n            coursemodule = paramCoursemodule;\n            instance = paramInstance;\n            taxonomy = JSON.parse(paramTaxonomy);\n\n            //console.log(\"course: \" + course);\n            //console.log(\"coursemodule: \" + coursemodule);\n            //console.log(\"instance: \" + instance);\n            //console.log(\"taxonomy: \" + JSON.stringify(taxonomy));\n\n            LoadTopics(taxonomy);\n\n            $(\"#newtopic\").click(ClickedNewTopic);\n            $(\"#newgoal\").click(ClickedNewGoal);\n        };\n\n        /**\n         * Render the topics of the learning goal taxonomy\n         * @param {*} taxonomy The learning goal taxonomy\n         */\n        var LoadTopics = function (taxonomy) {\n            if (taxonomy.children.length > 0) {\n                taxonomy.children.forEach(function (topic) {\n\n                    var topicContext = {\n                        topicname: topic[2],\n                        topicid: topic[1]\n                    };\n                    Templates.render(TEMPLATES.TOPIC, topicContext).then(function (html) {\n                        $(\"#notopics\").addClass(\"d-none\");\n                        $(\"#goalsfortopic\").removeClass(\"d-none\");\n                        $(\"#goalsfortopicstatusmessage\")\n                            .html(\"Klicken Sie auf einen Themenbereich, um die Lernziele hier anzuzeigen\");\n                        $(\"#topics-list\").append(html);\n                        var topicId = topicContext['topicid'];\n                        $(\"#topic-item-\" + topicId).click(ClickedTopicName);\n                        $(\"#\" + topicId + \"-action-edit\").click(ClickedEditTopic);\n                        $(\"#\" + topicId + \"-action-delete\").click(ClickedDeleteTopic);\n                        $(\"#\" + topicId + \"-action-moveup\").click(ClickedMoveupTopic);\n                        $(\"#\" + topicId + \"-action-movedown\").click(ClickedMovedownTopic);\n                        return html;\n                    });\n                });\n            } else {\n                $(\"#notopics\").removeClass(\"d-none\");\n            }\n        };\n\n        /**\n         * Render the goals of the learning goal taxonomy\n         * @param {*} topicId The topic ID\n         * @param {*} taxonomy The learning goal taxonomy\n         */\n        var LoadGoals = function (topicId, taxonomy) {\n            //console.log(topicId);\n            //console.log(taxonomy);\n            if (taxonomy.length > 0) {\n                $(\"#goalsfortopic\").addClass(\"d-none\");\n                taxonomy.forEach(function (goal) {\n\n                    var goalContext = {\n                        topicid: topicId,\n                        goalid: goal[1],\n                        learninggoaltitle: goal[2]\n                    };\n\n                    Templates.render(TEMPLATES.GOAL, goalContext).then(function (html) {\n\n                        $('#learninggoals-list').append(html);\n                        var goalId = goalContext['goalid'];\n                        $(\"#\" + topicId + \"-goal-\" + goalId + \"-action-edit\").click(ClickedEditGoal);\n                        $(\"#\" + topicId + \"-goal-\" + goalId + \"-action-delete\").click(ClickedDeleteGoal);\n                        $(\"#\" + topicId + \"-goal-\" + goalId + \"-action-moveup\").click(ClickedMoveupGoal);\n                        $(\"#\" + topicId + \"-goal-\" + goalId + \"-action-movedown\").click(ClickedMovedownGoal);\n                    });\n                });\n            } else {\n                $(\"#goalsfortopic\").removeClass(\"d-none\");\n                $(\"#goalsfortopicstatusmessage\").html(\"Für den gewählten Themenbereich sind keine Lernziele vorhanden\");\n            }\n        };\n\n        /**\n         * Handle topic name click event; load learning goals\n         * @param {event} e click event\n         */\n        var ClickedTopicName = function (e) {\n            e.preventDefault();\n\n            //console.log(\"clicked topic name\");\n            var topicId = $(e.currentTarget).data('topicid');\n\n            taxonomy.children.forEach(function (topic) {\n                if (topic[1] === topicId) {\n\n                    $('#learninggoals-list').children().remove();\n                    // console.log(\"load goals ...\");\n                    LoadGoals(topicId, topic[5]);\n\n                }\n            });\n\n            selectedTopic = topicId;\n            if (selectedTopicElement !== null) {\n                selectedTopicElement.css('background-color', 'white');\n            }\n            selectedTopicElement = $(e.currentTarget);\n            selectedTopicElement.css('background-color', 'gainsboro');\n        };\n\n        /**\n         * Show 'New Topic' Modal\n         */\n        var ClickedNewTopic = function () {\n            var context = {\n                title: \"Themenbereich\",\n                shortname: \"Kurzbezeichnung\",\n                weburl: \"Web Adresse\",\n            };\n\n            ShowModal(\n                context,\n                \"Neuen Themenbereich hinzufügen\",\n                TEMPLATES.TOPIC_MODAL_VIEW,\n                \"Speichern\",\n                function (modal, topicName, topicShortname, topicUrl) {\n                    // make insert topic call\n                    Controller.insertTopic({\n                        course: course,\n                        coursemodule: coursemodule,\n                        instance: instance,\n                        topicname: topicName,\n                        topicshortname: topicShortname,\n                        topicurl: topicUrl,\n                    })\n                        .then(function (jsonTaxonomy) {\n                            modal.hide();\n                            // console.log(\"neuer themenbereich gespeichert jetzt\");\n                            // console.log(jsonTaxonomy);\n                            $(\"#topics-list\").children().remove();\n                            taxonomy = JSON.parse(jsonTaxonomy);\n                            LoadTopics(taxonomy);\n                        })\n                        .catch(function () {\n                            //console.log(\"exception happened here\");\n                            //console.log(e);\n                        });\n                });\n        };\n\n\n        /**\n         * Handle edit topic click event\n         * @param {event} e Clicked event\n         */\n        var ClickedEditTopic = function (e) {\n            e.preventDefault();\n\n            //console.log(\"start updating\");\n\n            var topicId = $(e.currentTarget).data('topicid');\n\n            var topicTitle;\n            var topicShortname;\n            var topicUrl;\n            taxonomy.children.forEach(function (topic) {\n                if (topic[1] === topicId) {\n                    topicTitle = topic[2];\n                    topicShortname = topic[3];\n                    topicUrl = topic[4];\n                }\n            });\n\n            var context = {\n                title: \"Themenbereich\",\n                shortname: \"Kurzbezeichnung\",\n                weburl: \"Web Adresse\",\n                topictitle: topicTitle,\n                topicshortname: topicShortname,\n                topicurl: topicUrl,\n            };\n\n            //console.log(\"show modal\");\n\n            ShowModal(\n                context,\n                \"Themenbereich editieren\",\n                TEMPLATES.TOPIC_MODAL_VIEW,\n                \"Speichern\",\n                function (modal, topicName, topicShortname, topicUrl) {\n                    //console.log(\"callback speichern\");\n                    // make update topic call\n                    Controller.updateTopic({\n                        course: course,\n                        coursemodule: coursemodule,\n                        instance: instance,\n                        topicid: topicId,\n                        topicname: topicName,\n                        topicshortname: topicShortname,\n                        topicurl: topicUrl,\n                    })\n                        .then(function (jsonTaxonomy) {\n                            modal.hide();\n                            //console.log(\"themenbereich aktualisiert jetzt\");\n                            $(\"#topics-list\").children().remove();\n                            taxonomy = JSON.parse(jsonTaxonomy);\n                            LoadTopics(taxonomy);\n                        })\n                        .catch(function () {\n                            //console.log(\"exception happened here\");\n                            //console.log(e);\n                        });\n                }\n            );\n\n        };\n\n        /**\n         * Handle delete topic event\n         * @param {event} e click event\n         */\n        var ClickedDeleteTopic = function (e) {\n            e.preventDefault();\n\n            var topicId = $(e.currentTarget).data('topicid');\n\n            ShowMessage(\n                'Themenbereich löschen',\n                \"Möchten Sie den Themenbereich wirklich löschen?\",\n                'Löschen',\n                function (modal) {\n                    // make delete topic call\n                    Controller.deleteTopic({\n                        course: course,\n                        coursemodule: coursemodule,\n                        instance: instance,\n                        topicid: topicId\n                    })\n                        .then(function (jsonTaxonomy) {\n                            modal.hide();\n                            //console.log(\"themenbereich gelöscht jetzt\");\n                            $(\"#topics-list\").children().remove();\n                            taxonomy = JSON.parse(jsonTaxonomy);\n                            LoadTopics(taxonomy);\n                        })\n                        .catch(function () {\n                            //console.log(\"exception happened here\");\n                            //console.log(e);\n                        });\n                });\n        };\n\n        /**\n         * Handle topic move up event\n         * @param {event} e click event\n         */\n        var ClickedMoveupTopic = function (e) {\n            e.preventDefault();\n\n            var topicId = $(e.currentTarget).data('topicid');\n\n            // make move up topic call\n            Controller.moveUpTopic({\n                course: course,\n                coursemodule: coursemodule,\n                instance: instance,\n                topicid: topicId\n            })\n                .then(function (jsonTaxonomy) {\n                    //console.log(\"themenbereich raufgeschoben jetzt\");\n                    $(\"#topics-list\").children().remove();\n                    taxonomy = JSON.parse(jsonTaxonomy);\n                    LoadTopics(taxonomy);\n                })\n                .catch(function () {\n                    //console.log(\"exception happened here\");\n                    //console.log(e);\n                });\n        };\n\n        /**\n         * Handle topic move down event\n         * @param {event} e click event\n         */\n        var ClickedMovedownTopic = function (e) {\n            e.preventDefault();\n\n            var topicId = $(e.currentTarget).data('topicid');\n\n            // make move up topic call\n            Controller.moveDownTopic({\n                course: course,\n                coursemodule: coursemodule,\n                instance: instance,\n                topicid: topicId\n            })\n                .then(function (jsonTaxonomy) {\n                    //console.log(\"themenbereich runtergeschoben jetzt\");\n                    $(\"#topics-list\").children().remove();\n                    taxonomy = JSON.parse(jsonTaxonomy);\n                    LoadTopics(taxonomy);\n                })\n                .catch(function () {\n                    //console.log(\"exception happened here\");\n                    //console.log(e);\n                });\n        };\n\n        /**\n         * Show 'New Goal' Modal\n         */\n        var ClickedNewGoal = function () {\n            //console.log(\"ClickedNewGoal> click event handler\");\n\n            if (selectedTopic === null) {\n                return;\n            }\n\n            var topicTitle = \"\";\n\n            taxonomy.children.forEach(function (topic) {\n                if (topic[1] === selectedTopic) {\n                    topicTitle = topic[2];\n                }\n            });\n\n            var context = {\n                topiclabel: \"Themenbereich\",\n                topictitle: topicTitle,\n                title: 'Lernziel',\n                shortname: 'Kurzbezeichnung',\n                weburl: 'Web Adresse',\n            };\n\n            //console.log(\"selected topic id: \" + selectedTopic);\n\n            ShowModal(\n                context,\n                \"Neues Lernziel hinzufügen\",\n                TEMPLATES.GOAL_MODAL_VIEW,\n                \"Speichern\",\n                function (modal, goalName, goalShortname, goalUrl) {\n                    // make insert goal call\n                    Controller.insertGoal({\n                        course: course,\n                        coursemodule: coursemodule,\n                        instance: instance,\n                        topicid: selectedTopic,\n                        goalname: goalName,\n                        goalshortname: goalShortname,\n                        goalurl: goalUrl,\n                    })\n                        .then(function (jsonTaxonomy) {\n\n                            modal.hide();\n\n                            taxonomy = JSON.parse(jsonTaxonomy);\n                            $('#learninggoals-list').children().remove();\n                            taxonomy.children.forEach(function (topic) {\n                                if (topic[1] === selectedTopic) {\n                                    LoadGoals(selectedTopic, topic[5]);\n                                }\n                            });\n\n                        })\n                        .catch(function () {\n                            //console.log(\"exception happened here\");\n                            //console.log(e);\n                        });\n                });\n        };\n\n        /**\n         * Handle edit goal click event\n         * @param {event} e Clicked event\n         */\n        var ClickedEditGoal = function (e) {\n            e.preventDefault();\n\n            var topicId = $(e.currentTarget).data('topicid');\n            var goalId = $(e.currentTarget).data('goalid');\n\n            var topicTitle;\n            var goalTitle;\n            var goalShortname;\n            var goalUrl;\n            taxonomy.children.forEach(function (topic) {\n                if (topic[1] === topicId) {\n                    topicTitle = topic[2];\n                    topic[5].forEach(function (goal) {\n                        if (goal[1] === goalId) {\n                            goalTitle = goal[2];\n                            goalShortname = goal[3];\n                            goalUrl = goal[4];\n                        }\n                    });\n                }\n            });\n\n            var context = {\n                topiclabel: \"Themenbereich\",\n                topictitle: topicTitle,\n                title: 'Lernziel',\n                shortname: 'Kurzbezeichnung',\n                weburl: 'Web Adresse',\n                goaltitle: goalTitle,\n                goalshortname: goalShortname,\n                goalurl: goalUrl,\n            };\n\n            ShowModal(\n                context,\n                \"Lernziel editieren\",\n                TEMPLATES.GOAL_MODAL_VIEW,\n                \"Speichern\",\n                function (modal, goalName, goalShortname, goalUrl) {\n                    // make insert goal call\n                    Controller.updateGoal({\n                        course: course,\n                        coursemodule: coursemodule,\n                        instance: instance,\n                        topicid: topicId,\n                        goalid: goalId,\n                        goalname: goalName,\n                        goalshortname: goalShortname,\n                        goalurl: goalUrl,\n                    })\n                        .then(function (jsonTaxonomy) {\n                            modal.hide();\n                            //console.log(\"lernziel aktualisiert jetzt\");\n                            taxonomy = JSON.parse(jsonTaxonomy);\n\n                            $('#learninggoals-list').children().remove();\n                            taxonomy.children.forEach(function (topic) {\n                                if (topic[1] === topicId) {\n                                    LoadGoals(topicId, topic[5]);\n                                }\n                            });\n\n                        })\n                        .catch(function () {\n                            //console.log(\"exception happened here\");\n                            //console.log(e);\n                        });\n                });\n\n        };\n\n        /**\n         * Handle delete goal event\n         * @param {event} e click event\n         */\n        var ClickedDeleteGoal = function (e) {\n            e.preventDefault();\n\n            var topicId = $(e.currentTarget).data('topicid');\n            var goalId = $(e.currentTarget).data('goalid');\n\n            ShowMessage(\n                'Lernziel löschen',\n                \"Möchten Sie das Lernziel wirklich löschen?\",\n                'Löschen',\n                function (modal) {\n                    // make delete topic call\n                    Controller.deleteGoal({\n                        course: course,\n                        coursemodule: coursemodule,\n                        instance: instance,\n                        topicid: topicId,\n                        goalid: goalId\n                    })\n                        .then(function (jsonTaxonomy) {\n                            modal.hide();\n                            //console.log(\"lernziel gelöscht jetzt\");\n\n                            taxonomy = JSON.parse(jsonTaxonomy);\n\n                            $('#learninggoals-list').children().remove();\n                            taxonomy.children.forEach(function (topic) {\n                                if (topic[1] === topicId) {\n                                    LoadGoals(topicId, topic[5]);\n                                }\n                            });\n                        })\n                        .catch(function () {\n                            //console.log(\"exception happened here\");\n                            //console.log(e);\n                        });\n                });\n        };\n\n        /**\n         * Handle goal move up event\n         * @param {event} e click event\n         */\n        var ClickedMoveupGoal = function (e) {\n            e.preventDefault();\n\n            var topicId = $(e.currentTarget).data('topicid');\n            var goalId = $(e.currentTarget).data('goalid');\n\n            // make move up goal call\n            Controller.moveUpGoal({\n                course: course,\n                coursemodule: coursemodule,\n                instance: instance,\n                topicid: topicId,\n                goalid: goalId\n            })\n                .then(function (jsonTaxonomy) {\n                    //console.log(\"lernziel raufgeschoben jetzt\");\n\n                    taxonomy = JSON.parse(jsonTaxonomy);\n\n                    $('#learninggoals-list').children().remove();\n                    taxonomy.children.forEach(function (topic) {\n                        if (topic[1] === topicId) {\n                            LoadGoals(topicId, topic[5]);\n                        }\n                    });\n                })\n                .catch(function () {\n                    //console.log(\"exception happened here\");\n                    //console.log(e);\n                });\n        };\n\n        /**\n         * Handle goal move down event\n         * @param {event} e click event\n         */\n        var ClickedMovedownGoal = function (e) {\n            e.preventDefault();\n\n            var topicId = $(e.currentTarget).data('topicid');\n            var goalId = $(e.currentTarget).data('goalid');\n\n            // make move down goal call\n            Controller.moveDownGoal({\n                course: course,\n                coursemodule: coursemodule,\n                instance: instance,\n                topicid: topicId,\n                goalid: goalId\n            })\n                .then(function (jsonTaxonomy) {\n                    //console.log(\"themenbereich runtergeschoben jetzt\");\n\n                    taxonomy = JSON.parse(jsonTaxonomy);\n\n                    $('#learninggoals-list').children().remove();\n                    taxonomy.children.forEach(function (topic) {\n                        if (topic[1] === topicId) {\n                            LoadGoals(topicId, topic[5]);\n                        }\n                    });\n                })\n                .catch(function () {\n                    //console.log(\"exception happened here\");\n                    //console.log(e);\n                });\n        };\n\n\n        /**\n         *\n         * @param {arry} context Template context for\n         * @param {string} title The title bar of the modal\n         * @param {string} templateName The template name to render\n         * @param {string} btnSaveText The SAVE button text\n         * @param {function} onSaveCallback Function callback when user clicks save\n         */\n        var ShowModal = function (context, title, templateName, btnSaveText, onSaveCallback) {\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: title,\n                body: Templates.render(templateName, context)\n            })\n                .done(function (modal) {\n                    modal.setSaveButtonText(btnSaveText);\n                    modal.getRoot().on(ModalEvents.save, function (event) {\n\n                        var titleInputfield = modal.getRoot().find(MODAL_ITEM_SELECTORS.ITEM_TITLE_FIELD);\n                        var shortnameInputfield = modal.getRoot().find(MODAL_ITEM_SELECTORS.ITEM_SHORTNAME_FIELD);\n                        var urlInputfield = modal.getRoot().find(MODAL_ITEM_SELECTORS.ITEM_URL_FIELD);\n\n                        let titleValid = false;\n                        let urlValid = false;\n                        if (titleInputfield[0].value !== undefined && titleInputfield[0].value !== \"\") {\n                            titleValid = true;\n                        }\n                        if (isValidUrl(urlInputfield[0].value)) {\n                            urlValid = true;\n                        }\n                        if (titleValid && urlValid) {\n                            onSaveCallback(\n                                modal,\n                                titleInputfield[0].value,\n                                shortnameInputfield[0].value,\n                                urlInputfield[0].value\n                            );\n                        } else {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            if (titleValid === false) {\n                                modal.getRoot().find('[data-action=\"titlefeedback\"]')\n                                    .text(\"Der Titel ist verpflichtend einzugeben\");\n                                modal.getRoot().find('[data-action=\"titlefeedback\"]')\n                                    .css(\"display\", \"inline\");\n                            }\n                            if (urlValid === false) {\n                                modal.getRoot().find('[data-action=\"urlfeedback\"]')\n                                    .text(\"Der Wert für die URL ist ungültig\");\n                                modal.getRoot().find('[data-action=\"urlfeedback\"]')\n                                    .css(\"display\", \"inline\");\n                            }\n                        }\n                    });\n                    modal.show();\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function () {\n                        // Destroy when hidden.\n                        // console.log(\"destroy because its hidden now\");\n                        modal.destroy();\n                    });\n\n                    return modal;\n                });\n        };\n\n        /**\n         *\n         * @param {*} title The title bar of the modal\n         * @param {*} text The message text\n         * @param {*} btnSaveText The SAVE button text\n         * @param {*} onSaveCallback Function callback when user clicks save\n         */\n        var ShowMessage = function (title, text, btnSaveText, onSaveCallback) {\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: title,\n                body: text\n            })\n                .done(function (modal) {\n                    modal.setSaveButtonText(btnSaveText);\n                    modal.getRoot().on(ModalEvents.save, function () {\n                        onSaveCallback(modal);\n                    });\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function () {\n                        // Destroy when hidden.\n                        // console.log(\"message modal> destroy because its hidden now\");\n                        modal.destroy();\n                    });\n                    modal.show();\n                    return modal;\n                });\n        };\n\n        /**\n         *\n         * @param {string} urlString The string containing a URL; needs checking\n         * @returns True if the string is a valid URL otherwise false\n         */\n        var isValidUrl = function (urlString) {\n            if (urlString === null || urlString == \"\") {\n                return true;\n            }\n            var isValid = false;\n            var exp = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\n            var regex = new RegExp(exp);\n\n            if (urlString.match(regex)) {\n                isValid = true;\n            }\n            return isValid;\n        };\n\n        return {\n            init: init\n        };\n    });\n"],"names":["define","$","Controller","Templates","ModalFactory","ModalEvents","TEMPLATES","MODAL_ITEM_SELECTORS","course","coursemodule","instance","taxonomy","selectedTopic","selectedTopicElement","LoadTopics","children","length","forEach","topic","topicContext","topicname","topicid","render","then","html","addClass","removeClass","append","topicId","click","ClickedTopicName","ClickedEditTopic","ClickedDeleteTopic","ClickedMoveupTopic","ClickedMovedownTopic","LoadGoals","goal","goalContext","goalid","learninggoaltitle","goalId","ClickedEditGoal","ClickedDeleteGoal","ClickedMoveupGoal","ClickedMovedownGoal","e","preventDefault","currentTarget","data","remove","css","ClickedNewTopic","ShowModal","title","shortname","weburl","modal","topicName","topicShortname","topicUrl","insertTopic","topicshortname","topicurl","jsonTaxonomy","hide","JSON","parse","catch","topicTitle","topictitle","updateTopic","ShowMessage","deleteTopic","moveUpTopic","moveDownTopic","ClickedNewGoal","topiclabel","goalName","goalShortname","goalUrl","insertGoal","goalname","goalshortname","goalurl","goalTitle","goaltitle","updateGoal","deleteGoal","moveUpGoal","moveDownGoal","context","templateName","btnSaveText","onSaveCallback","create","type","types","SAVE_CANCEL","body","done","setSaveButtonText","getRoot","on","save","event","titleInputfield","find","shortnameInputfield","urlInputfield","titleValid","urlValid","undefined","value","isValidUrl","stopPropagation","text","show","hidden","destroy","urlString","isValid","regex","RegExp","match","init","paramCourse","paramCoursemodule","paramInstance","paramTaxonomy"],"mappings":"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"}