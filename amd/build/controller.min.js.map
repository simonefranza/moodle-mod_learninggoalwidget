{"version":3,"file":"controller.min.js","sources":["../src/controller.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @copyright University of Technology Graz\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* eslint \"require-jsdoc\": [\"error\", {\n    \"require\": {\n        \"FunctionDeclaration\": false,\n        \"MethodDefinition\": false,\n        \"ClassDeclaration\": false,\n        \"ArrowFunctionExpression\": false,\n        \"FunctionExpression\": false\n    }\n}] */\n\ndefine(\n    ['core/ajax'], function (Ajax) {\n\n\n        /**\n         * Insert a new topic.\n         *\n         * Valid args are:\n         * int courseid             id of course this taxonomy belongs\n         *\n         * @method insertTopic\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var insertTopic = function (args) {\n            // console.log(\"Controller> insertTopic call\");\n            // console.log(\"args: \");\n            // console.log(args);\n            var request = {\n                methodname: 'mod_learninggoalwidget_insert_topic',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n\n        /**\n         * Update a topic\n         *\n         * @method updateTopic\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var updateTopic = function (args) {\n            var request = {\n                methodname: 'mod_learninggoalwidget_update_topic',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n\n        /**\n         * Delete a topic\n         *\n         * @method deleteTopic\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var deleteTopic = function (args) {\n            var request = {\n                methodname: 'mod_learninggoalwidget_delete_topic',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n        /**\n         * move up topic\n         *\n         * @method moveUpTopic\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var moveUpTopic = function (args) {\n            var request = {\n                methodname: 'mod_learninggoalwidget_moveup_topic',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n        /**\n         * move down topic\n         *\n         * @method moveDownTopic\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var moveDownTopic = function (args) {\n            var request = {\n                methodname: 'mod_learninggoalwidget_movedown_topic',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n\n        /**\n         * Insert a new learning goal\n         *\n         * @method insertGoal\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var insertGoal = function (args) {\n            var request = {\n                methodname: 'mod_learninggoalwidget_insert_goal',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n\n        /**\n         * Update a goal\n         *\n         * @method updateGoal\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var updateGoal = function (args) {\n            var request = {\n                methodname: 'mod_learninggoalwidget_update_goal',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n\n        /**\n         * Delete a goal\n         *\n         * @method deleteGoal\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var deleteGoal = function (args) {\n            var request = {\n                methodname: 'mod_learninggoalwidget_delete_goal',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n        /**\n         * move up goal\n         *\n         * @method moveUpGoal\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var moveUpGoal = function (args) {\n            var request = {\n                methodname: 'mod_learninggoalwidget_moveup_goal',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n        /**\n         * move down goal\n         *\n         * @method moveDownGoal\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var moveDownGoal = function (args) {\n            var request = {\n                methodname: 'mod_learninggoalwidget_movedown_goal',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n        /**\n         * get taxonomy with user's progress\n         *\n         * @method getLearningGoals\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var getLearningGoals = function (args) {\n            // console.log(\"Controller> getLearningGoals call\");\n            // console.log(\"args: \");\n            // console.log(args);\n\n            var request = {\n                methodname: 'mod_learninggoalwidget_get_taxonomy_for_user',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n        /**\n         * update learning progress for a goal and user\n         *\n         * @method updateUserProgress\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var updateUserProgress = function (args) {\n            // console.log(\"Controller> updateUserProgress call\");\n            // console.log(\"args: \");\n            // console.log(args);\n\n            var request = {\n                methodname: 'mod_learninggoalwidget_update_user_progress',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n        /**\n         * log user interaction event\n         *\n         * @method logEvent\n         * @param  {object} args The request arguments\n         * @return {promise}\n         */\n        var logEvent = function (args) {\n            var request = {\n                methodname: 'mod_learninggoalwidget_log_event',\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n            return promise;\n        };\n\n        return {\n            insertTopic: insertTopic,\n            updateTopic: updateTopic,\n            deleteTopic: deleteTopic,\n            moveUpTopic: moveUpTopic,\n            moveDownTopic: moveDownTopic,\n            insertGoal: insertGoal,\n            updateGoal: updateGoal,\n            deleteGoal: deleteGoal,\n            moveUpGoal: moveUpGoal,\n            moveDownGoal: moveDownGoal,\n            getLearningGoals: getLearningGoals,\n            updateUserProgress: updateUserProgress,\n            logEvent: logEvent,\n        };\n\n    }\n);"],"names":["define","Ajax","insertTopic","args","request","methodname","call","updateTopic","deleteTopic","moveUpTopic","moveDownTopic","insertGoal","updateGoal","deleteGoal","moveUpGoal","moveDownGoal","getLearningGoals","updateUserProgress","logEvent"],"mappings":";;;;AA8BAA,2CACI,CAAC,cAAc,SAAUC,YAsOd,CACHC,YA1Nc,SAAUC,UAIpBC,QAAU,CACVC,WAAY,sCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAmNnCG,YAvMc,SAAUJ,UACpBC,QAAU,CACVC,WAAY,sCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAmMnCI,YAvLc,SAAUL,UACpBC,QAAU,CACVC,WAAY,sCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAmLnCK,YAxKc,SAAUN,UACpBC,QAAU,CACVC,WAAY,sCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAoKnCM,cAzJgB,SAAUP,UACtBC,QAAU,CACVC,WAAY,wCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAqJnCO,WAzIa,SAAUR,UACnBC,QAAU,CACVC,WAAY,qCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAqInCQ,WAzHa,SAAUT,UACnBC,QAAU,CACVC,WAAY,qCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAqHnCS,WAzGa,SAAUV,UACnBC,QAAU,CACVC,WAAY,qCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAqGnCU,WA1Fa,SAAUX,UACnBC,QAAU,CACVC,WAAY,qCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAsFnCW,aA3Ee,SAAUZ,UACrBC,QAAU,CACVC,WAAY,uCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAuEnCY,iBA5DmB,SAAUb,UAKzBC,QAAU,CACVC,WAAY,+CACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAoDnCa,mBAzCqB,SAAUd,UAK3BC,QAAU,CACVC,WAAY,8CACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU,IAiCnCc,SAtBW,SAAUf,UACjBC,QAAU,CACVC,WAAY,mCACZF,KAAMA,aAEIF,KAAKK,KAAK,CAACF,UAAU"}