{"version":3,"file":"sunburst.min.js","sources":["../src/sunburst.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @copyright University of Technology Graz\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* eslint no-eval: 0 */\n/* eslint no-bitwise: 0 */\n/* eslint \"require-jsdoc\": [\"error\", {\n    \"require\": {\n        \"FunctionDeclaration\": false,\n        \"MethodDefinition\": false,\n        \"ClassDeclaration\": false,\n        \"ArrowFunctionExpression\": false,\n        \"FunctionExpression\": false\n    }\n}] */\n\ndefine(\n    [\n        \"jquery\",\n        \"mod_learninggoalwidget/controller\",\n        \"mod_learninggoalwidget/selectors\",\n        \"core/config\",\n        \"core/notification\",\n        \"core/templates\",\n        \"core/modal_factory\",\n        \"core/modal_events\"\n    ], function (\n        $,\n        Controller,\n        Selectors,\n        Configuration,\n        Notification,\n        Templates,\n        ModalFactory,\n        ModalEvents\n    ) {\n\n    var progress_modals_dict = {};\n\n    var TEMPLATES = {\n        EDIT_PROGRESS_VALUES: \"mod_learninggoalwidget/widget/sunburst-edit-progress-view\"\n    };\n\n    /**\n     * Intialise the sunburst widget.\n     * @param {*} sunburstId The sunburst widget instance ID\n     * @param {*} userId The user ID\n     * @param {*} courseId The course ID\n     * @param {*} courseModuleId The course module ID\n     * @param {*} instanceId The course module instance ID\n     * @param {*} progressLegendLabel The legend string\n     */\n    var renderSunburst = function (sunburstId, userId, courseId, courseModuleId, instanceId, progressLegendLabel) {\n\n        // console.log(\"mod_learninggoalwidget.sunburst> *********** Render Sunburst ******************\");\n\n        require.config({\n            paths: {\n                d3v4: Configuration.wwwroot + \"/mod/learninggoalwidget/js/d3.v4.min\"\n            }\n        });\n\n        // request learning goals taxonomy\n        Controller.getLearningGoals({ courseid: courseId, userid: userId, coursemoduleid: courseModuleId, instanceid: instanceId })\n            .then(\n                function (jsonLearningGoals) {\n\n                    // console.log(\"mod_learninggoalwidget.sunburst> taxonomy loaded\");\n                    // console.log(jsonLearningGoals);\n\n                    var loadedTaxonomy = JSON.parse(jsonLearningGoals);\n\n                    // console.log(\"mod_learninggoalwidget.sunburst> loaded taxonomy\");\n                    // console.log(\"mod_learninggoalwidget.sunburst> render widget for widget id: \");\n                    // console.log(sunburstId);\n                    // console.log(loadedTaxonomy);\n\n                    if (loadedTaxonomy.children.length > 0) {\n                        renderSunburstView(loadedTaxonomy, sunburstId);\n                        renderSunburstWithProgressView(loadedTaxonomy, sunburstId, progressLegendLabel);\n                        renderTextualBulletPointList(loadedTaxonomy, sunburstId);\n                    }\n\n                }\n            )\n            .catch(function () {\n                //console.log(\"exception happened here\");\n                //console.log(e);\n            });\n\n        // adding functionality to the elements\n        document.getElementById(sunburstId + \"-ClickedOverview\").onclick = function () {\n\n            var sunburstId = getSunburstId(this);\n            var courseId = getCourseId(this);\n            var courseModuleId = getCourseModuleId(this);\n            var instanceId = getInstanceId(this);\n            var userId = getUserId(this);\n\n            ChangeView(\"Overview\", sunburstId);\n\n            // log overview click event\n            var learningGoalEvent = CreateLearningGoalEvent(\"clickedOverview\", courseId, courseModuleId, instanceId, userId);\n            LogLearningGoalEvent(courseId, courseModuleId, instanceId, userId, learningGoalEvent);\n        };\n\n        document.getElementById(sunburstId + \"-ClickedPreparation\").onclick = function () {\n\n            var sunburstId = getSunburstId(this);\n            var courseId = getCourseId(this);\n            var courseModuleId = getCourseModuleId(this);\n            var instanceId = getInstanceId(this);\n            var userId = getUserId(this);\n\n            ChangeView(\"Preparation\", sunburstId);\n\n            // log preparation click event\n            var learningGoalEvent = CreateLearningGoalEvent(\"clickedPreparation\", courseId, courseModuleId, instanceId, userId);\n            LogLearningGoalEvent(courseId, courseModuleId, instanceId, userId, learningGoalEvent);\n        };\n\n        // setting the visualisation container to fit nicely ;)\n        document.querySelector(\"div[data-region='\" + sunburstId + \"-content-view']\").style.width = \"33%\";\n        document.querySelector(\"div[data-region='\" + sunburstId + \"-content-view']\").style.height = \"33%\";\n        document.querySelector(\"div[data-region='\" + sunburstId + \"-exam-view']\").style.width = \"33%\";\n        document.querySelector(\"div[data-region='\" + sunburstId + \"-exam-view']\").style.height = \"33%%\";\n\n        // hiding the second chart by default\n        $(document.querySelector(\"div[data-region='\" + sunburstId + \"-content-view']\")).removeClass(\"d-none\");\n        $(document.querySelector(\"div[data-region='\" + sunburstId + \"-exam-view']\")).addClass(\"d-none\");\n\n    };\n\n    /**\n     * Toggle between views with and without coloring the user progress in the sunburst\n     * @param {*} element The button HTML element\n     * @param {*} sunburstId The sunburst instance ID\n     */\n    var ChangeView = function (element, sunburstId) {\n        if (element == \"Overview\") {\n            $(document.querySelector(\"div[data-region='\" + sunburstId + \"-content-view']\")).removeClass(\"d-none\");\n            $(document.querySelector(\"div[data-region='\" + sunburstId + \"-exam-view']\")).addClass(\"d-none\");\n        } else {\n            $(document.querySelector(\"div[data-region='\" + sunburstId + \"-content-view']\")).addClass(\"d-none\");\n            $(document.querySelector(\"div[data-region='\" + sunburstId + \"-exam-view']\")).removeClass(\"d-none\");\n        }\n    };\n\n    /**\n     * Render the learning goal taxonomy as a bullet point list of topics and intended goals\n     * @param {*} courseTaxonomy The learning goal taxonomy\n     * @param {*} sunburstId The sunburst instance ID\n     */\n    var renderTextualBulletPointList = function (courseTaxonomy, sunburstId) {\n        // console.log(\"renderTextualBulletPointList call\");\n\n        var rootElement = document.getElementById(sunburstId + \"-listing-view\");\n\n        AddChildren(rootElement, courseTaxonomy.children, sunburstId);\n\n    };\n\n    /**\n     * Adding a new level of topics or goals to the root element\n     * @param {*} element The root element\n     * @param {*} children The child elements\n     * @param {*} sunburstId The sunburst instance ID\n     */\n    var AddChildren = function (element, children, sunburstId) {\n        // console.log(\"add children\");\n        // console.log(children);\n        var unordered_list_node = document.createElement(\"ul\");\n        unordered_list_node.style = \"list-style: none\";\n        children.forEach(\n            function (child) {\n                if (child.type == \"topic\") {\n                    // //console.log(\"AddChildren> AppendTopic\");\n                    AppendTopic(sunburstId, $(\"#\" + sunburstId + \"-listing-view\"), child);\n                }\n                if (child.type == \"goal\") {\n                    // //console.log(\"AddChildren> AppendGoal\");\n                    AppendGoal(sunburstId, unordered_list_node, child);\n                }\n                if (child.children) {\n                    // //console.log(\"AddChildren> AddChildren\");\n                    AddChildren($(\"#\" + sunburstId + \"-listing-view\"), child.children, sunburstId);\n                }\n            }\n        );\n        $(\"#\" + sunburstId + \"-listing-view\").append(unordered_list_node);\n    };\n\n    /**\n     * Adding a new topic to the root element\n     * @param {*} sunburstId The sunburst instance ID\n     * @param {*} element The root element\n     * @param {*} topic The topic element\n     */\n    var AppendTopic = function (sunburstId, element, topic) {\n        var paragraph_node = document.createElement(\"p\");\n\n        paragraph_node.setAttribute(\"id\", sunburstId + \"-topic-\" + topic.topicid);\n\n        var span_node = document.createElement(\"span\");\n        var topicText = \"\";\n        if (topic.keyword != \"\") {\n            topicText = topic.keyword + \" - \" + topic.name;\n        } else {\n            topicText = topic.name;\n        }\n        if (topic.link) {\n            var link_node = document.createElement(\"a\");\n            link_node.setAttribute(\"href\", topic.link);\n            link_node.setAttribute(\"target\", \"_blank\");\n            link_node.textContent = topicText;\n            span_node.appendChild(link_node);\n        }\n        else {\n            span_node.textContent = topicText;\n        }\n        paragraph_node.appendChild(span_node);\n        element.append(paragraph_node);\n    };\n\n    /**\n     * Adding a new goal to the root element\n     * @param {*} sunburstId The sunburst instance ID\n     * @param {*} element The root element\n     * @param {*} goal The goal element\n     */\n    var AppendGoal = function (sunburstId, element, goal) {\n\n        // console.log(\"****************** AppendGoal ****************\");\n\n        // console.log(\"id\", sunburstId + \"-\" + goal.goalid);\n        // console.log(goal);\n\n        var listitem_node = document.createElement(\"li\");\n\n        listitem_node.setAttribute(\"id\", sunburstId + \"-goal-\" + goal.goalid);\n\n        var bulletPoint = document.createElement('span');\n        bulletPoint.className = \"bulletPoint\";\n        listitem_node.appendChild(bulletPoint);\n\n        var goalText = \"\";\n\n        if (goal.keyword != \"\") {\n            goalText = goal.keyword + \" - \" + goal.name;\n        } else {\n            goalText = goal.name;\n        }\n\n        if (goal.link) {\n            var link_node = document.createElement(\"a\");\n            link_node.setAttribute(\"href\", goal.link);\n            link_node.setAttribute(\"target\", \"_blank\");\n            link_node.textContent = goalText;\n            listitem_node.appendChild(link_node);\n        } else {\n            var span_node = document.createElement(\"span\");\n            span_node.textContent = goalText;\n            listitem_node.appendChild(span_node);\n        }\n\n        element.append(listitem_node);\n    };\n\n    /**\n     * Highlight the topic / goal in the textual represenation of the chart\n     * @param {*} sunburstId The sunburst instance ID\n     * @param {*} item The HTML element to update\n     * @param {*} color The background color\n     * @param {*} highlight True if element should get highlighted otherwise false\n     */\n    var UpdateItemInTextualHierachy = function (sunburstId, item, color, highlight) {\n\n        // console.log(\"UpdateItemInTextualHierachy(\" + sunburstId + \", \" + item + \", \" + color + \", \" + highlight);\n\n        if (item.data.type === \"goal\") {\n            var element = $(\"#\" + sunburstId + \"-goal-\" + item.data.goalid);\n        }\n        if (item.data.type === \"topic\") {\n            var element = $(\"#\" + sunburstId + \"-topic-\" + item.data.topicid);\n        }\n\n        if (element) {\n            if (highlight) {\n                element.addClass(\"taxItemHighlighted\");\n                var bulletPointElement = element[0].querySelector('.bulletPoint');\n                if (bulletPointElement && color) {\n                    bulletPointElement.style.background = color;\n                }\n                if (item.children) {\n                    ChildrenHighlight(sunburstId, item.children, true);\n                }\n                ScrollToTopic(sunburstId, item);\n            } else {\n                element.removeClass(\"taxItemHighlighted\");\n                var bulletPointElement = element[0].querySelector('.bulletPoint');\n                if (bulletPointElement) {\n                    bulletPointElement.style.background = 'black';\n                }\n                if (item.children) {\n                    ChildrenHighlight(sunburstId, item.children, false);\n                }\n            }\n        }\n    };\n\n    /**\n     * Automatically scroll to an topic or goal in the bullet point list\n     * @param {*} sunburstId The sunburst instance ID\n     * @param {*} item The HTML element\n     */\n    var ScrollToTopic = function (sunburstId, item) {\n        if (item.parent && item.parent.parent === null) {\n            if (item.data.type === \"goal\") {\n                var element = $(\"#\" + sunburstId + \"-goal-\" + item.data.goalid);\n            }\n            if (item.data.type === \"topic\") {\n                var element = $(\"#\" + sunburstId + \"-topic-\" + item.data.topicid);\n            }\n            if (element) {\n                $('#' + sunburstId + '-listing-view-container').animate({ scrollTop: element[0].offsetTop - 8, duration: 'fast' });\n            }\n        } else {\n            ScrollToTopic(sunburstId, item.parent);\n        }\n    };\n\n    /**\n     * Highlight or unhighlight all the children at once\n     * @param {*} sunburstId The sunburst instance ID\n     * @param {*} children The list of children\n     * @param {*} highlight True if childs should get highlighted otherwise false\n     */\n    var ChildrenHighlight = function (sunburstId, children, highlight) {\n        children.forEach(\n            function (child) {\n                if (child.data.type === \"goal\") {\n                    var element = $(\"#\" + sunburstId + \"-goal-\" + child.data.goalid);\n                }\n                if (child.data.type === \"topic\") {\n                    var element = $(\"#\" + sunburstId + \"-topic-\" + child.data.topicid);\n                }\n                if (element) {\n                    if (highlight) {\n                        element.addClass(\"taxItemHighlighted\");\n                        var bulletPointElement = element[0].querySelector('.bulletPoint');\n                        var color = GetColor(percentage(child));\n                        if (bulletPointElement && color) {\n                            bulletPointElement.style.background = color;\n                        }\n                    } else {\n                        element.removeClass(\"taxItemHighlighted\");\n                        var bulletPointElement = element[0].querySelector('.bulletPoint');\n                        if (bulletPointElement) {\n                            bulletPointElement.style.background = 'black';\n                        }\n                    }\n                }\n                if (child.children) {\n                    ChildrenHighlight(sunburstId, child.children, highlight);\n                }\n            }\n        );\n    };\n\n    /**\n     * Render the sunburst view\n     * @param {*} courseTaxonomy The learning goal taxonomy\n     * @param {*} sunburstId The sunburst instance ID\n     */\n    var renderSunburstView = function (courseTaxonomy, sunburstId) {\n        //console.log(\"Widget> renderSunburstView\");\n        require([\"d3v4\"], function (d3) {\n            // console.log(\"*************** D3 loaded now *****************\");\n\n            //Reading the header name of the json data and pasting it before chart container\n            d3.select(\"#\" + sunburstId + \"-taxonomy\")\n                .append(\"p\")\n                .attr(\"class\", \"skipLine\");\n\n            //  window for the tooltip\n            var div = d3\n                .select(\"body\")\n                .append(\"div\")\n                .attr(\"id\", sunburstId + \"-taxonomy-fullgoal\")\n                .style(\"opacity\", 0)\n                .style(\"position\", \"absolute\")\n                .style(\"vertical-align\", \"center\")\n                .style(\"text-align\", \"center\")\n                .style(\"width\", \"12vw\")\n                .style(\"min-height\", \"4vh\")\n                .style(\"font\", \"sans-serif\")\n                .style(\"background\", \"lightgrey\")\n                .style(\"border\", \"1px solid darkgrey\")\n                .style(\"border-radius\", \"10%/20%\")\n                .style(\"pointer-events\", \"none\");\n\n            // Dimensions\n            var width = 360,\n                height = 360,\n                radius = Math.min(width, height) / 2;\n            //Setting up the svg container\n            var g = d3\n                .select(\"#\" + sunburstId + \"-taxonomy\")\n                .append(\"svg\")\n                .attr(\"class\", \"svgChart\")\n                .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n                .attr(\"class\", \"mainG\");\n\n            //svg container for text path\n            d3.select(\"#\" + sunburstId + \"-text-path-storage\")\n                .append(\"svg\")\n                .attr(\"id\", sunburstId + \"-PathBlock\")\n                .attr(\"height\", \"0%\")\n                .attr(\"width\", \"0%\")\n                .style(\"display\", \"none\");\n\n            //Data structure\n            var partition = d3.partition().size([2 * Math.PI, radius]);\n            // var maxdepth = 0;\n\n            var root = d3.hierarchy(courseTaxonomy).eachBefore(\n                function (d) {\n                    var sum = 1;\n                    if (d.depth > 0) {\n                        for (var i = 0; i < d.depth; i++) {\n                            sum *= eval(\"d.\" + \"parent.\".repeat(i + 1) + \"children.length\");\n                        }\n                    }\n                    d.value = 1 / sum;\n                    d.data[\"size\"] = d.value;\n                }\n            );\n\n            //Retrieving sizes of the arcs\n            partition(root);\n\n            var arc = d3\n                .arc()\n                .startAngle(\n                    function (d) {\n                        return d.x0;\n                    }\n                )\n                .endAngle(\n                    function (d) {\n                        return d.x1;\n                    }\n                )\n                .innerRadius(\n                    function (d) {\n                        return d.y0;\n                    }\n                )\n                .outerRadius(\n                    function (d) {\n                        return d.y1;\n                    }\n                );\n\n            /**\n             * Recieving the path for text placed on the arcs\n             * @param {*} d Data model\n             * @param {*} arc Svg arc\n             * @returns Text path\n             */\n            function GetTextPath(d, arc) {\n                if ((d.depth == 1 && d.parent.children.length == 1)\n                    || (d.depth == 2\n                        && d.parent.children.length == 1\n                        && d.parent.parent.children.length == 1)\n                ) {\n                    var newArc = arc.replace(/,/g, \" \");\n                    var loc = /^([^A]*A[^A]*)/;\n                    newArc = loc.exec(newArc)[1];\n                    return newArc;\n                } else {\n                    var firstArcSection = /(^.+?)L/;\n                    var newArc = firstArcSection.exec(arc)[1];\n                    newArc = newArc.replace(/,/g, \" \");\n                    var angle = ((d.x0 + d.x1) / Math.PI) * 90;\n                    if (angle > 90 && angle < 270) {\n                        var startLoc = /M(.*?)A/;\n                        var middleLoc = /A(.*?)0 0 1/;\n                        var endLoc = /0 0 1 (.*?)$/;\n                        var newStart = endLoc.exec(newArc)[1];\n                        var newEnd = startLoc.exec(newArc)[1];\n                        var middleSec = middleLoc.exec(newArc)[1];\n                        newArc = \"M\" + newStart + \"A\" + middleSec + \"0 0 0 \" + newEnd;\n                        return newArc;\n                    }\n                    return newArc;\n                }\n            }\n\n            //Building the chart\n            g.selectAll(\"g\")\n                .data(root.descendants())\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", \"node\")\n                .append(\"path\")\n                .attr(\n                    \"class\", function (d) {\n                        return d.data.name;\n                    }\n                )\n                .attr(\n                    \"display\", function (d) {\n                        return d.depth ? null : \"none\";\n                    }\n                )\n                .style(\"stroke\", \"#fff\")\n                .attr(\"stroke-width\", \"3\")\n                .style(\"fill\", \"#e5e5e5\")\n                .style(\n                    \"cursor\", function (d) {\n                        if (d.data.link) {\n                            return \"pointer\";\n                        } else {\n                            return \"default\";\n                        }\n                    }\n                )\n                .attr(\"d\", arc)\n                .on(\n                    \"mouseover\", function (d) {\n                        div\n                            .transition()\n                            .duration(200)\n                            .style(\"opacity\", 0.8);\n                        div\n                            .html(d.data.name)\n                            .style(\"left\", \"\" + d3.event.pageX + \"px\")\n                            .style(\"top\", \"\" + (d3.event.pageY - height / 10) + \"px\");\n\n                        // highlight the topic / goal in the textual represenation of the chart\n                        UpdateItemInTextualHierachy(sunburstId, d, GetColor(percentage(d)), true);\n                    }\n                )\n                .on(\n                    \"mouseout\", function (d) {\n                        div\n                            .transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n\n                        // highlight the topic / goal in the textual represenation of the chart\n                        UpdateItemInTextualHierachy(sunburstId, d, GetColor(percentage(d)), false);\n                    }\n                )\n                .on(\n                    \"click\", function (d) {\n                        if (d.depth >= 1) {\n                            if (d.data.link) {\n                                window.open(d.data.link);\n                                // log url click event\n                                var courseId = getCourseId(this);\n                                var courseModuleId = getCourseModuleId(this);\n                                var instanceId = getInstanceId(this);\n                                var userId = getUserId(this);\n\n                                var learningGoalEvent = CreateLearningGoalEvent(\"overviewOpenLink\",\n                                    courseId, courseModuleId, instanceId, userId);\n                                var eventLinkParam = new Object();\n                                eventLinkParam.name = \"url\";\n                                eventLinkParam.value = d.data.link;\n                                learningGoalEvent.push(eventLinkParam);\n                                LogLearningGoalEvent(courseId, courseModuleId, instanceId, userId, learningGoalEvent);\n                            }\n\n                            // console.log(\"mod_learninggoalwidget> click event\");\n                            const sunburstClickEvent = new CustomEvent('sunburstclick', {\n                                bubbles: true,\n                                detail: {\n                                    data: () => d.data\n                                }\n                            });\n\n                            // console.log(\"mod_learninggoalwidget> trigger sunburstclick event\");\n                            $('#' + sunburstId + '-taxonomy')[0].dispatchEvent(sunburstClickEvent);\n                            // console.log(\"mod_learninggoalwidget> done\");\n\n                        }\n                    }\n                )\n                .each(\n                    function (d, i) {\n                        if (d.depth > 0) {\n                            var arc = d3.select(this).attr(\"d\");\n                            var newArc = GetTextPath(d, arc);\n                            d3.select(\"#\" + sunburstId + \"-PathBlock\")\n                                .append(\"path\")\n                                .attr(\"id\", sunburstId + \"skillArc_\" + i)\n                                .attr(\"d\", newArc)\n                                .style(\"fill\", \"none\");\n                        }\n                    }\n                );\n\n            //Making the text rotation based on the angle\n            var Rotate = function (d) {\n                var angle = ((d.x0 + d.x1) / Math.PI) * 90;\n                if (angle <= 90 && angle >= 0) {\n                    return angle - 90;\n                } else if (angle > 90 && angle < 180) {\n                    return (90 - angle) * -1;\n                } else if (angle >= 180) {\n                    return angle - 270;\n                } else {\n                    // console.error(\"error while finding fitting angle\");\n                    return 0;\n                }\n            };\n\n            //calc the depth of the json\n            var getDepth = function (nodes) {\n                var depth = 0;\n                if (nodes.children) {\n                    nodes.children.forEach(\n                        function (d) {\n                            var cur = getDepth(d);\n                            if (cur > depth) {\n                                depth = cur;\n                            }\n                        }\n                    );\n                }\n                return 1 + depth;\n            };\n            var VerNum = 18 / getDepth(root) - 1;\n            g.selectAll(\".node\")\n                .data(root.descendants())\n                .append(\"text\")\n                .text(\n                    function (d) {\n                        if (d.depth > 0 && d.data.size <= 0.1) {\n                            var title = d.data.name.toString();\n                            if (d.data.keyword.length > 0) {\n                                title = d.data.keyword;\n                            }\n                            if (title.length > VerNum) {\n                                return title.substring(0, VerNum) + \"...\";\n                            } else {\n                                return title;\n                            }\n                        }\n                    }\n                )\n                .attr(\n                    \"transform\", function (d) {\n                        if (d.depth > 0 && d.data.size <= 0.1) {\n                            return \"translate(\" + arc.centroid(d) + \")rotate(\" + Rotate(d) + \")\";\n                        }\n                    }\n                )\n                .style(\"font-size\", 12)\n                .attr(\"dx\", \"-20\")\n                .attr(\"dy\", \".5em\");\n\n            //labeling goals and topic inside the arcs\n            //circle is 360', so 90 chars will give 1 char per 4'\n            var maxLetters = 90;\n            if (courseTaxonomy.children.length > 1) {\n                maxLetters = maxLetters - 2 * courseTaxonomy.children.length;\n            }\n            g.selectAll(\".node\")\n                .data(root.descendants())\n                .append(\"text\")\n                .attr(\n                    \"dy\", function (d) {\n                        if ((d.depth == 1 && d.parent.children.length == 1)\n                            || (d.depth == 2\n                                && d.parent.children.length == 1\n                                && d.parent.parent.children.length == 1)\n                        ) {\n                            return 30;\n                        } else {\n                            var angle = ((d.x0 + d.x1) / Math.PI) * 90;\n                            if (angle > 90 && angle < 270) {\n                                return -25;\n                            } else {\n                                return 30;\n                            }\n                        }\n                    }\n                )\n                .append(\"textPath\")\n                .attr(\n                    \"xlink:href\", function (d, i) {\n                        return \"#\" + sunburstId + \"skillArc_\" + i;\n                    }\n                )\n                .style(\"text-anchor\", \"middle\") //place the text halfway on the arc\n                .attr(\"startOffset\", \"50%\")\n                .style(\"font-size\", 12)\n                .attr(\"letter-spacing\", 2.75)\n                .text(\n                    function (d) {\n                        if (d.depth > 0 && d.data.size > 0.1) {\n                            var CharNum = Math.round(d.data.size * maxLetters);\n                            var title = d.data.name;\n                            if (d.data.keyword.length > 0) {\n                                title = d.data.keyword;\n                            }\n                            if (title.length > CharNum) {\n                                return title.substring(0, CharNum - 3) + \"...\";\n                            }\n                            return title;\n                        }\n                    }\n                );\n        });\n    };\n\n    /**\n     * Render the sunburst view coloring the arcs with the users progress\n     * @param {*} courseTaxonomy The learning goal taxonomy\n     * @param {*} sunburstId The sunburst instance ID\n     * @param {*} progressLegendLabel The legend string\n     */\n    var renderSunburstWithProgressView = function (courseTaxonomy, sunburstId, progressLegendLabel) {\n        // console.log(\"Widget> renderSunburstWithProgressView\");\n        require([\"d3v4\"], function (d3) {\n            // console.log(\"*************** D3 loaded now *****************\");\n\n            //Reading the header name of the json data and pasting it before chart container\n            d3.select(\"#\" + sunburstId + \"-taxonomy-userprogress-chart\")\n                .append(\"p\")\n                .attr(\"class\", \"skipLine\");\n\n            var div = d3\n                .select(\"body\")\n                .append(\"div\")\n                .attr(\"id\", sunburstId + \"-taxonomy-userprogress-chart-fullgoal\")\n                .style(\"opacity\", 0)\n                .style(\"position\", \"absolute\")\n                .style(\"vertical-align\", \"center\")\n                .style(\"text-align\", \"center\")\n                .style(\"width\", \"12vw\")\n                .style(\"min-height\", \"4vh\")\n                .style(\"font\", \"sans-serif\")\n                .style(\"background\", \"lightgrey\")\n                .style(\"border\", \"1px solid darkgrey\")\n                .style(\"border-radius\", \"10%/20%\")\n                .style(\"pointer-events\", \"none\");\n\n            // Dimensions\n            var width = 360,\n                height = 360,\n                radius = Math.min(width, height) / 2;\n            //Setting up the svg container\n            var g = d3\n                .select(\"#\" + sunburstId + \"-taxonomy-userprogress-chart\")\n                .append(\"svg\")\n                .attr(\"class\", \"svgChart\")\n                .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n                .attr(\"class\", \"mainG\");\n\n            //Data structure\n            var partition = d3.partition().size([2 * Math.PI, radius]);\n\n            var root = d3.hierarchy(courseTaxonomy).eachBefore(\n                function (d) {\n                    var sum = 1;\n                    if (d.depth > 0) {\n                        for (var i = 0; i < d.depth; i++) {\n                            sum *= eval(\"d.\" + \"parent.\".repeat(i + 1) + \"children.length\");\n                        }\n                    }\n                    d.value = 1 / sum;\n                    d.data[\"size\"] = d.value;\n                }\n            );\n\n            //Retrieving sizes of the arcs\n            partition(root);\n            //console.log(root);\n            var arc = d3\n                .arc()\n                .startAngle(\n                    function (d) {\n                        return d.x0;\n                    }\n                )\n                .endAngle(\n                    function (d) {\n                        return d.x1;\n                    }\n                )\n                .innerRadius(\n                    function (d) {\n                        return d.y0;\n                    }\n                )\n                .outerRadius(\n                    function (d) {\n                        return d.y1;\n                    }\n                );\n\n            //Building the chart\n            g.selectAll(\"g\")\n                .data(root.descendants())\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", \"node\")\n                .append(\"path\")\n                .attr(\n                    \"class\", function (d) {\n                        return d.data.name;\n                    }\n                )\n                .attr(\n                    \"display\", function (d) {\n                        return d.depth ? null : \"none\";\n                    }\n                )\n                .style(\"stroke\", \"#fff\")\n                .attr(\"stroke-width\", \"3\")\n                .style(\n                    \"fill\", function (d) {\n                        var per = percentage(d);\n                        if (per !== null && per !== undefined) {\n                            if (per.toString().length > 0) {\n                                return GetColor(per);\n                            }\n                        } else {\n                            return GetColor(0);\n                        }\n                    }\n                )\n                .style(\n                    \"cursor\", function (d) {\n                        if (!d.children) {\n                            return \"pointer\";\n                        }\n                    }\n                )\n                .attr(\n                    \"id\", function (d, i) {\n                        if (d.depth == 1) {\n                            return \"ArcNum\" + i;\n                        }\n                    }\n                )\n                .attr(\"d\", arc)\n                .on(\n                    \"mouseover\", function (d) {\n                        div\n                            .transition()\n                            .duration(200)\n                            .style(\"opacity\", 0.8);\n                        div\n                            .html(d.data.name)\n                            .style(\"left\", d3.event.pageX + \"px\")\n                            .style(\"top\", d3.event.pageY - height / 10 + \"px\");\n\n                        // highlight the topic / goal in the textual represenation of the chart\n                        UpdateItemInTextualHierachy(sunburstId, d, GetColor(percentage(d)), true);\n                    }\n                )\n                .on(\n                    \"mouseout\", function (d) {\n                        div\n                            .transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n\n                        // highlight the topic / goal in the textual represenation of the chart\n                        UpdateItemInTextualHierachy(sunburstId, d, GetColor(percentage(d)), false);\n                    }\n                )\n                .on(\n                    \"click\", function (d) {\n                        if (!d.children) {\n\n                            var courseId = getCourseId(this);\n                            var courseModuleId = getCourseModuleId(this);\n                            var instanceId = getInstanceId(this);\n                            var sunburstId = getSunburstId(this);\n                            var userId = getUserId(this);\n                            var goalName = d.data.name;\n                            var goalId = d.data.goalid;\n                            var goalProgressValue = 0;\n                            var topicId = d.parent.data.topicid;\n                            var modalId = new Date().getTime();\n                            var context = {\n                                progressValue: d.data.pro,\n                                modalId: modalId\n                            };\n\n                            var modal_progress = progress_modals_dict[d.data.name];\n                            if (modal_progress) {\n                                modal_progress.show();\n                            } else {\n                                ModalFactory.create(\n                                    {\n                                        type: ModalFactory.types.SAVE_CANCEL,\n                                        title:\n                                            \"Mein Lernfortschritt für das Lernziel '\" + d.data.name + \"':\",\n                                        body: Templates.render(TEMPLATES.EDIT_PROGRESS_VALUES, context)\n                                    }\n                                ).done(\n                                    function (modal) {\n                                        progress_modals_dict[d.data.name] = modal;\n                                        modal.getRoot().on(\n                                            ModalEvents.save, function (e) {\n                                                e.preventDefault();\n                                                goalProgressValue = document.getElementById(\"progressvalue-\" + modalId).value;\n                                                SaveProgress(sunburstId, courseId, courseModuleId, instanceId,\n                                                    userId, topicId, goalId, goalName, goalProgressValue);\n                                                modal.hide();\n                                            }\n                                        );\n\n                                        modal.getRoot().find(\"progressvalue-\" + modalId);\n\n                                        $(modal.getRoot()).on('input', '#progressvalue-' + modalId, function () {\n                                            UpdateLearningProgress(modalId);\n                                        });\n\n\n                                        modal.show();\n                                    }\n                                );\n                            }\n                        }\n                    }\n                );\n\n            //Making the text rotation based on the angle\n            var Rotate = function (d) {\n                var angle = ((d.x0 + d.x1) / Math.PI) * 90;\n                if (angle <= 90 && angle >= 0) {\n                    return angle - 90;\n                } else if (angle > 90 && angle < 180) {\n                    return (90 - angle) * -1;\n                } else if (angle >= 180) {\n                    return angle - 270;\n                } else {\n                    // console.error(\"error while finding fitting angle\");\n                    return 0;\n                }\n            };\n\n            //calc the depth of the json\n            var getDepth = function (nodes) {\n                var depth = 0;\n                if (nodes.children) {\n                    nodes.children.forEach(\n                        function (d) {\n                            var cur = getDepth(d);\n                            if (cur > depth) {\n                                depth = cur;\n                            }\n                        }\n                    );\n                }\n                return 1 + depth;\n            };\n            var VerNum = 18 / getDepth(root) - 1;\n\n            g.selectAll(\".node\")\n                .data(root.descendants())\n                .append(\"text\")\n                .text(\n                    function (d) {\n                        if (d.depth > 0 && d.data.size <= 0.1) {\n                            var title = d.data.name.toString();\n                            var per = percentage(d);\n                            if (per !== null) {\n                                if (per.toString().length > 0) {\n                                    if (d.data.keyword.length > 0) {\n                                        title = per + \"% \" + d.data.keyword;\n                                    } else {\n                                        title = per + \"% \" + title;\n                                    }\n                                }\n                            }\n                            if (d.depth > 1) {\n                                VerNum = 28 / getDepth(root) - 1;\n                            }\n                            if (title.length > VerNum) {\n                                return title.substring(0, VerNum) + \"...\";\n                            } else {\n                                return title;\n                            }\n                        }\n                    }\n                )\n                .attr(\n                    \"transform\", function (d) {\n                        if (d.depth > 0 && d.data.size <= 0.1) {\n                            return \"translate(\" + arc.centroid(d) + \")rotate(\" + Rotate(d) + \")\";\n                        }\n                    }\n                )\n                .style(\n                    \"font-size\", function (d) {\n                        if (d.depth > 1) {\n                            //console.log(\"size = 10\");\n                            return 10;\n                        }\n                        //console.log(\"size = 12\");\n                        return 12;\n                    }\n                )\n                .attr(\"dx\", \"-20\")\n                .attr(\"dy\", \".5em\");\n\n            //labeling goals and topic inside the arcs\n            //circle is 360', so 90 chars will give 1 char per 4'\n            var maxLetters = 90;\n            if (courseTaxonomy.children.length > 1) {\n                maxLetters = maxLetters - 2 * courseTaxonomy.children.length;\n            }\n\n            g.selectAll(\".node\")\n                .data(root.descendants())\n                .append(\"text\")\n                .attr(\n                    \"dy\", function (d) {\n                        if ((d.depth == 1 && d.parent.children.length == 1)\n                            || (d.depth == 2\n                                && d.parent.children.length == 1\n                                && d.parent.parent.children.length == 1)\n                        ) {\n                            return 30;\n                        } else {\n                            var angle = ((d.x0 + d.x1) / Math.PI) * 90;\n                            if (angle > 90 && angle < 270) {\n                                return -25;\n                            } else {\n                                return 30;\n                            }\n                        }\n                    }\n                )\n                .append(\"textPath\")\n                .attr(\n                    \"xlink:href\", function (d, i) {\n                        return \"#\" + sunburstId + \"skillArc_\" + i;\n                    }\n                )\n                .style(\"text-anchor\", \"middle\") //place the text halfway on the arc\n                .attr(\"startOffset\", \"50%\")\n                .style(\n                    \"font-size\", function (d) {\n                        if (d.depth > 1) {\n                            //console.log(\"size = 10\");\n                            return 10;\n                        }\n                        //console.log(\"size = 12\");\n                        return 12;\n                    }\n                )\n                .attr(\"letter-spacing\", 2.75)\n                .text(\n                    function (d) {\n                        if (d.depth > 0 && d.data.size > 0.1) {\n                            var CharNum = Math.round(d.data.size * maxLetters);\n                            var title = d.data.name;\n                            if (d.data.keyword.length > 0) {\n                                title = d.data.keyword;\n                            }\n                            if (title.length > CharNum) {\n                                return title.substring(0, CharNum - 3) + \"...\";\n                            }\n                            return title;\n                        }\n                    }\n                );\n\n            g.selectAll(\".node\")\n                .data(root.descendants())\n                .append(\"text\")\n                .attr(\n                    \"dy\", function (d) {\n                        if ((d.depth == 1 && d.parent.children.length == 1)\n                            || (d.depth == 2\n                                && d.parent.children.length == 1\n                                && d.parent.parent.children.length == 1)\n                        ) {\n                            return 40;\n                        } else {\n                            var angle = ((d.x0 + d.x1) / Math.PI) * 90;\n                            if (angle > 90 && angle < 270) {\n                                return -10;\n                            } else {\n                                return 50;\n                            }\n                        }\n                    }\n                )\n                .append(\"textPath\")\n                .attr(\n                    \"xlink:href\", function (d, i) {\n                        return \"#\" + sunburstId + \"skillArc_\" + i;\n                    }\n                )\n                .style(\"text-anchor\", \"middle\") //place the text halfway on the arc\n                .attr(\"startOffset\", \"50%\")\n                .style(\n                    \"font-size\", function (d) {\n                        if (d.depth > 1) {\n                            //console.log(\"size = 10\");\n                            return 10;\n                        }\n                        //console.log(\"size = 12\");\n                        return 12;\n                    }\n                )\n                .attr(\"letter-spacing\", 2.75)\n                .text(\n                    function (d) {\n                        if (d.depth > 0 && d.data.size > 0.1) {\n                            var per = percentage(d);\n                            if (per !== null) {\n                                if (per.toString().length > 0) {\n                                    return per + \"%\";\n                                } else {\n                                    // console.error(\"no data for:\");\n                                    //console.log(d);\n                                }\n                            }\n                        }\n                    }\n                );\n\n            //generating legend gradient\n            var legendWidth = width / 2;\n            let legendSvg = d3.select(\"#\" + sunburstId + \"-taxonomy-userprogress-legend\")\n                .append(\"svg\")\n                .attr(\"class\", \"svgLegend\")\n                .attr(\"viewBox\", \"0 0 \" + width + \" \" + height / 8);\n            legendSvg\n                .append(\"defs\")\n                .append(\"linearGradient\")\n                .attr(\"id\", \"legendGradientMulti\")\n                .attr(\"x1\", \"0%\")\n                .attr(\"y1\", \"0%\")\n                .attr(\"x2\", \"100%\")\n                .attr(\"y2\", \"0%\")\n                .selectAll(\"stop\")\n                .data(\n                    [\n                        { offset: \"0%\", color: getColorForPercentage(0) },\n                        { offset: \"12.5%\", color: getColorForPercentage(0.125) },\n                        { offset: \"25%\", color: getColorForPercentage(0.25) },\n                        { offset: \"37.5%\", color: getColorForPercentage(0.375) },\n                        { offset: \"50%\", color: getColorForPercentage(0.5) },\n                        { offset: \"62.5%\", color: getColorForPercentage(0.625) },\n                        { offset: \"75%\", color: getColorForPercentage(0.75) },\n                        { offset: \"87.5%\", color: getColorForPercentage(0.875) },\n                        { offset: \"100%\", color: getColorForPercentage(1.0) }\n                    ]\n                )\n                .enter()\n                .append(\"stop\")\n                .attr(\n                    \"offset\", function (d) {\n                        return d.offset;\n                    }\n                )\n                .attr(\n                    \"stop-color\", function (d) {\n                        return d.color;\n                    }\n                );\n\n            var legendsvgWrapper = legendSvg\n                .append(\"g\")\n                .attr(\"class\", \"legendWrapper\")\n                .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 18 + \")\");\n\n            //Draw the Rectangle\n            legendsvgWrapper\n                .append(\"rect\")\n                .attr(\"class\", \"legendRect\")\n                .attr(\"x\", -legendWidth / 2)\n                .attr(\"y\", 0)\n                .attr(\"rx\", 8 / 2)\n                .attr(\"width\", legendWidth)\n                .attr(\"height\", 8)\n                .style(\"fill\", \"url(#legendGradientMulti)\");\n\n            //Append title\n            legendsvgWrapper\n                .append(\"text\")\n                .attr(\"class\", \"legendTitle\")\n                .attr(\"x\", 0)\n                .attr(\"y\", -8)\n                .style(\"text-anchor\", \"middle\")\n                .text(progressLegendLabel);\n\n            //Set scale for x-axis\n            var scale = d3\n                .scaleLinear()\n                .range([-legendWidth / 2, legendWidth / 2])\n                .domain([0, 100]);\n\n            //Define x-axis\n            var x_axis = d3\n                .axisBottom()\n                .ticks(5)\n                .tickFormat(\n                    function (d) {\n                        return d + \"%\";\n                    }\n                )\n                .scale(scale);\n\n            //Set up X axis\n            legendsvgWrapper\n                .append(\"g\")\n                .attr(\"class\", \"axis\")\n                .attr(\"transform\", \"translate(0,\" + 8 + \")\")\n                .call(x_axis);\n        });\n    };\n\n    //\n    var percentColors = [\n        { pct: 0.0, color: { r: 0xcc, g: 0x00, b: 0x00 } },\n        { pct: 0.5, color: { r: 0xff, g: 0xff, b: 0x00 } },\n        { pct: 1.0, color: { r: 0x00, g: 0x66, b: 0x00 } }\n    ];\n\n    /**\n     * Color function: converting the progress into color\n     * @param {*} pct The progress as percentage betweet 0 and 1\n     * @returns The color hex code\n     */\n    var getColorForPercentage = function (pct) {\n        for (var i = 1; i < percentColors.length - 1; i++) {\n            if (pct < percentColors[i].pct) {\n                break;\n            }\n        }\n        var lower = percentColors[i - 1],\n            upper = percentColors[i],\n            range = upper.pct - lower.pct,\n            rangePct = (pct - lower.pct) / range,\n            pctLower = 1 - rangePct,\n            pctUpper = rangePct;\n        var color = {\n            r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\n            g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\n            b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)\n        };\n        return (\n            \"#\" +\n            ((1 << 24) + (color.r << 16) + (color.g << 8) + color.b)\n                .toString(16)\n                .slice(1)\n        );\n    };\n\n    /**\n     * Converting user progress into a color code\n     * @param {*} value The user progress as a value between 0 and 100\n     * @returns The color hex code\n     */\n    var GetColor = function (value) {\n        switch (true) {\n            case value <= 0:\n                return \"#e5e5e5\";\n            case value <= 12.5:\n                return getColorForPercentage(0.125);\n            case value <= 25:\n                return getColorForPercentage(0.25);\n            case value <= 37.5:\n                return getColorForPercentage(0.375);\n            case value <= 50:\n                return getColorForPercentage(0.5);\n            case value <= 62.5:\n                return getColorForPercentage(0.5);\n            case value <= 75:\n                return getColorForPercentage(0.75);\n            case value <= 87.5:\n                return getColorForPercentage(0.875);\n            case value <= 100:\n                return getColorForPercentage(0.875);\n            case value > 100:\n                throw new Error(\n                    \"Cant get the coloring, the progress value is over 100% !\"\n                );\n        }\n    };\n\n    /**\n     * Calculates the user progress of a topic or goal\n     * @param {*} d The topic or goal node inside the D3 hierarchy\n     * @returns The progress value\n     */\n    var percentage = function (d) {\n        if (d.children) {\n            var sum = 0;\n            for (var i = 0; i < d.children.length; i++) {\n                sum += percentage(d.children[i]);\n            }\n            sum = Math.round(sum / d.children.length);\n            return typeof sum === \"undefined\" || isNaN(sum) ? \"\" : sum;\n        } else {\n            return d.data.pro;\n        }\n    };\n\n    /**\n     * Update the users progress.\n     * @param {*} sunburstId The sunburst instance ID\n     * @param {*} courseId The course ID\n     * @param {*} courseModuleId The course module ID\n     * @param {*} instanceId The course module instance ID\n     * @param {*} userId The user ID\n     * @param {*} topicId The topic ID\n     * @param {*} goalId The goal ID\n     * @param {*} goalName The name of the goal\n     * @param {*} goalProgressValue The user progress\n     */\n    var SaveProgress = function (sunburstId,\n        courseId, courseModuleId, instanceId, userId, topicId,\n        goalId,\n        goalName, goalProgressValue) {\n\n        // learninggoals webservice: save the learning goal progress for a learning goal\n        Controller.updateUserProgress(\n            {\n                courseid: courseId,\n                coursemoduleid: courseModuleId,\n                instanceid: instanceId,\n                userid: userId,\n                topicid: topicId,\n                goalid: goalId,\n                progress: goalProgressValue\n            }\n        )\n            .then(\n                function (taxonomy) {\n                    //console.log(\"Widget> progress saved successfully\");\n                    var loadedTaxonomy = JSON.parse(taxonomy);\n                    if (loadedTaxonomy.children.length > 0) {\n                        $(\"div#\" + sunburstId + \"-taxonomy-userprogress-chart-fullgoal\").remove();\n                        $(\"#\" + sunburstId + \"-taxonomy-userprogress-chart\").empty();\n                        $(\"#\" + sunburstId + \"-taxonomy-userprogress-legend\").empty();\n                        renderSunburstWithProgressView(loadedTaxonomy, sunburstId);\n\n                        // console.log(\"mod_learninggoalwidget.sunburst> send update progress event\");\n                        const updateLearningGoalProgressEvent = new CustomEvent('update_learning_goal_progress', {\n                            bubbles: true,\n                            detail: {\n                                sender: \"sunburst\",\n                                taxonomy: loadedTaxonomy,\n                                sunburstId: sunburstId\n                            }\n                        });\n\n                        // console.log(\"mod_learninggoalwidget.sunburst> trigger update Learning Goal Progress event\");\n                        $('#' + sunburstId + '-taxonomy')[0].dispatchEvent(updateLearningGoalProgressEvent);\n                        // console.log(\"mod_learninggoalwidget.sunburst> event triggered\");\n                    }\n                }\n            )\n            .catch(Notification.exception);\n\n        // log save progress event\n        var learningGoalEvent = CreateLearningGoalEvent(\"preparationSaveProgress\", courseId, courseModuleId, instanceId, userId);\n        var eventGoalParam = new Object();\n        eventGoalParam.name = \"goalname\";\n        eventGoalParam.value = goalName;\n        var eventGoalProgressParam = new Object();\n        eventGoalProgressParam.name = \"goalprogress\";\n        eventGoalProgressParam.value = goalProgressValue;\n        learningGoalEvent.push(eventGoalParam);\n        learningGoalEvent.push(eventGoalProgressParam);\n        LogLearningGoalEvent(courseId, courseModuleId, instanceId, userId, learningGoalEvent);\n    };\n\n    /**\n     * Logs learning goal events into moodles standard log store\n     * @param {*} courseId The course ID\n     * @param {*} courseModuleId The course module ID\n     * @param {*} instanceId The course module instance ID\n     * @param {*} userId The user ID\n     * @param {*} eventParams The learning goal event parameters\n     */\n    var LogLearningGoalEvent = function (courseId, courseModuleId, instanceId, userId, eventParams) {\n        Controller.logEvent(\n            {\n                courseid: courseId,\n                coursemoduleid: courseModuleId,\n                instanceid: instanceId,\n                userid: userId,\n                eventparams: eventParams\n            }\n        )\n            .then(\n                function () {\n                    //console.log(\"Widget> event logged\");\n                }\n            )\n            .catch(Notification.exception);\n    };\n\n    /**\n     * Create learning goal event parameters\n     * @param {*} eventName The name of the event for example preparationSaveProgress\n     * @param {*} courseId The course ID\n     * @param {*} courseModuleId The course module ID\n     * @param {*} instanceId The course module instance ID\n     * @param {*} userId The user ID\n     * @returns The array of learning goal event parameters\n     */\n    var CreateLearningGoalEvent = function (eventName, courseId, courseModuleId, instanceId, userId) {\n\n        var eventParam = new Object();\n        eventParam.name = \"eventname\";\n        eventParam.value = eventName;\n\n        var eventCourseParam = new Object();\n        eventCourseParam.name = \"courseid\";\n        eventCourseParam.value = courseId;\n\n        var eventCourseModuleParam = new Object();\n        eventCourseModuleParam.name = \"coursemoduleid\";\n        eventCourseModuleParam.value = courseModuleId;\n\n        var eventInstanceParam = new Object();\n        eventInstanceParam.name = \"instanceid\";\n        eventInstanceParam.value = instanceId;\n\n        var eventUserParam = new Object();\n        eventUserParam.name = \"userid\";\n        eventUserParam.value = userId;\n\n        var timestampParam = new Object();\n        timestampParam.name = \"timestamp\";\n        timestampParam.value = Math.trunc(new Date().getTime() / 1000);\n\n        return [eventParam, eventCourseParam, eventCourseModuleParam, eventInstanceParam, eventUserParam, timestampParam];\n    };\n\n    /**\n     * Update the visualised learing goal progress\n     * @param {*} modalId The modal ID\n     */\n    var UpdateLearningProgress = function (modalId) {\n        var progressvalue = document.getElementById(\"progressvalue-\" + modalId);\n        var progressvaluelabel = document.getElementById(\"progressvaluelabel-\" + modalId);\n        if (progressvalue && progressvaluelabel) {\n            progressvaluelabel.innerHTML = progressvalue.value + \"%\";\n        }\n    };\n\n    /**\n     *\n     * @param {*} element The learning goal widget element\n     * @returns The sunburst instance ID\n     */\n    var getSunburstId = function (element) {\n        var learningGoalWidgetElement = $(element).closest('div.telm-learninggoals-widget');\n        return $(learningGoalWidgetElement).data(\"sunburst-id\");\n    };\n\n    /**\n     *\n     * @param {*} element The learning goal widget element\n     * @returns The course ID\n     */\n    var getCourseId = function (element) {\n        var learningGoalWidgetElement = $(element).closest('div.telm-learninggoals-widget');\n        return $(learningGoalWidgetElement).data(\"course-id\");\n    };\n\n    /**\n     *\n     * @param {*} element The learning goal widget element\n     * @returns The course module ID\n     */\n    var getCourseModuleId = function (element) {\n        var learningGoalWidgetElement = $(element).closest('div.telm-learninggoals-widget');\n        return $(learningGoalWidgetElement).data(\"coursemodule-id\");\n    };\n\n    /**\n     *\n     * @param {*} element The learning goal widget element\n     * @returns The course module instance ID\n     */\n    var getInstanceId = function (element) {\n        var learningGoalWidgetElement = $(element).closest('div.telm-learninggoals-widget');\n        return $(learningGoalWidgetElement).data(\"instance-id\");\n    };\n\n    /**\n     *\n     * @param {*} element The learning goal widget element\n     * @returns The user id\n     */\n    var getUserId = function (element) {\n        var learningGoalWidgetElement = $(element).closest('div.telm-learninggoals-widget');\n        return $(learningGoalWidgetElement).data(\"user-id\");\n    };\n\n    return {\n        renderSunburst: renderSunburst,\n        renderSunburstWithProgressView: renderSunburstWithProgressView,\n        UpdateLearningProgress: UpdateLearningProgress\n    };\n}\n);\n"],"names":["define","$","Controller","Selectors","Configuration","Notification","Templates","ModalFactory","ModalEvents","progress_modals_dict","TEMPLATES","EDIT_PROGRESS_VALUES","renderSunburst","sunburstId","userId","courseId","courseModuleId","instanceId","progressLegendLabel","require","config","paths","d3v4","wwwroot","getLearningGoals","courseid","userid","coursemoduleid","instanceid","then","jsonLearningGoals","loadedTaxonomy","JSON","parse","children","length","renderSunburstView","renderSunburstWithProgressView","renderTextualBulletPointList","catch","document","getElementById","onclick","getSunburstId","this","getCourseId","getCourseModuleId","getInstanceId","getUserId","ChangeView","learningGoalEvent","CreateLearningGoalEvent","LogLearningGoalEvent","querySelector","style","width","height","removeClass","addClass","element","courseTaxonomy","rootElement","AddChildren","unordered_list_node","createElement","forEach","child","type","AppendTopic","AppendGoal","append","topic","paragraph_node","setAttribute","topicid","span_node","topicText","keyword","name","link","link_node","textContent","appendChild","goal","listitem_node","goalid","bulletPoint","className","goalText","UpdateItemInTextualHierachy","item","color","highlight","data","bulletPointElement","background","ChildrenHighlight","ScrollToTopic","parent","animate","scrollTop","offsetTop","duration","GetColor","percentage","d3","select","attr","div","radius","Math","min","g","partition","size","PI","root","hierarchy","eachBefore","d","sum","depth","i","eval","repeat","value","arc","startAngle","x0","endAngle","x1","innerRadius","y0","outerRadius","y1","GetTextPath","newArc","replace","exec","angle","newStart","newEnd","selectAll","descendants","enter","on","transition","html","event","pageX","pageY","window","open","eventLinkParam","Object","push","sunburstClickEvent","CustomEvent","bubbles","detail","dispatchEvent","each","Rotate","getDepth","nodes","cur","VerNum","text","title","toString","substring","centroid","maxLetters","CharNum","round","per","goalName","goalId","goalProgressValue","topicId","modalId","Date","getTime","context","progressValue","pro","modal_progress","show","create","types","SAVE_CANCEL","body","render","done","modal","getRoot","save","e","preventDefault","SaveProgress","hide","find","UpdateLearningProgress","legendWidth","legendSvg","offset","getColorForPercentage","legendsvgWrapper","scale","scaleLinear","range","domain","x_axis","axisBottom","ticks","tickFormat","call","percentColors","pct","r","b","lower","upper","rangePct","pctLower","pctUpper","floor","slice","Error","isNaN","updateUserProgress","progress","taxonomy","remove","empty","updateLearningGoalProgressEvent","sender","exception","eventGoalParam","eventGoalProgressParam","eventParams","logEvent","eventparams","eventName","eventParam","eventCourseParam","eventCourseModuleParam","eventInstanceParam","eventUserParam","timestampParam","trunc","progressvalue","progressvaluelabel","innerHTML","learningGoalWidgetElement","closest"],"mappings":"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"}