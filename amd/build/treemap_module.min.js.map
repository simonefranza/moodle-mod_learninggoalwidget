{"version":3,"file":"treemap_module.min.js","sources":["../src/treemap_module.js"],"sourcesContent":["define(function(require, exports) {\n  //const {\n  //  computeContrastRatio,\n  //  computeLuminance,\n  //  convertRGBAtoRGB,\n  //  parseRGB,\n  //  convertRGBArrayToString,\n  //  rectWidth,\n  //  rectHeight,\n  //  detectTouchscreen,\n  //} = require('./utils');\n  let d3 = null;\n  const ELLIPSIS_CODE = 8230;\n  const U_ELLIPSIS = \"&#\" + ELLIPSIS_CODE.toString() + \";\";\n  const HIGHLIGHT_DURATION_SEC = 60;\n  let widgetTitle = '';\n  let data = null;\n  let treemapId = null;\n  let treemapAccessibilityText = null;\n  let taxonomy = null;\n  let updateProgressCallback = null;\n  let highlightedGoals = null;\n  let confirmationBoxesActive = null;\n\n  /**\n   * Creates the treemap svg node and appends it to the #treemapId element.\n   */\n  async function getSvgNode() {\n    let rootElement = document.getElementById(treemapId);\n    let clientWidth = rootElement.clientWidth;\n    //let width = clientWidth < 1200 ? clientWidth : (clientWidth) / 2;\n    let width = clientWidth;\n    if (width === 0) {\n      return;\n    }\n    //    if (width > 1200)\n    //      width = 1200;\n    const stdHeight = window.innerHeight * 0.9;\n    let height = stdHeight;\n    height = 600; //TODO Fix height calculation\n    let isLandscapeMode = width > height;\n    let isSmallScreen = clientWidth < 1100;\n    let fontFactor = 0.57;\n    let circlesViewBox = 32;\n    let learningGoalMinHeight = 26;\n    let hasTouchscreen = detectTouchscreen();\n    const colorschemeStorageName = 'treemapColorscheme';\n\n    let colorSchemesNames = ['Rainbow', 'Plasma', 'Warm', 'Cool', 'Reds', 'Greens',\n      'Blues', 'RdBu', 'RdGy', 'protanopia', 'grayscaleLight',\n      'PuOr', 'deuteranopia', 'grayscaleDark', 'grayscaleMiddle'];\n    let additionalColors = {\n      'protanopia': ['#D1D0DE', '#BDB6AB', '#636D97'],\n      'deuteranopia': ['#C59434', '#6F7498', '#092C48'],\n      'grayscaleLight': ['#ddd', '#eaeaea'],\n      'grayscaleDark': ['#050505', '#030303'],\n      'grayscaleMiddle': ['#ddd', '#030303'],\n    };\n    let colorblindSchemes = ['PuOr', 'deuteranopia', 'grayscaleDark', 'grayscaleMiddle'];\n    let color = d3.scaleOrdinal(d3.quantize(getColorScheme(), data.children.length + 2));\n    // Zoom variables\n    let isZoomedIn = false;\n    let zooming = false;\n    let transitionDuration = 750;\n    // Variable for button with link on top left\n    let linkEnlarged = false;\n    let resizingLink = false;\n    let sliderTextMaxFontSize = 13;\n    let currentTextZoom = 0;\n    let zoomDelta = isSmallScreen ? 0.5 : 2;\n    let isZoomInDisabled = false;\n    let hideTextDuration = 100;\n    let allElementSmallEnough = true;\n\n    let { numberOfTopics, highestNumberChildren } = getNumberOfElements(data);\n    let partition = data => {\n      const root = d3.hierarchy(data)\n        .each(d => {\n          if (d.children && !d.children[0].children) {\n            d.children.forEach((child) => {\n              child.siblingsCount = d.children.length;\n            });\n            //            if (d.children.length + 1 > highestNumberChildren && 'children' in d)\n            //              highestNumberChildren = d.children.length + 1;\n          }\n        })\n        .sum(d => d.children ? (highestNumberChildren - d.children.length) : 1); //all blocks same size\n      root.value = highestNumberChildren * root.children.length; // all blocks same size\n      return d3.partition()\n        .size([height, (root.height + 1) * width / 3])\n        .padding(0.7)(root);\n    };\n    height = numberOfTopics * (highestNumberChildren - 1) * learningGoalMinHeight;\n    if (height < stdHeight) {\n      height = stdHeight;\n    }\n    const root = partition(taxonomy);\n    widgetTitle = root.data.name;\n    const rejectPath = 'M6,6 L26,26 M6,26 L26,6';\n    const acceptPath = 'M2,18 L11,27 L30,5';\n\n    const svg = d3.create(\"svg:svg\")\n      .attr('aria-labelledby', 'vis-title')\n      //      .attr('height', height)\n      //      .attr('width', width)\n      .attr(\"class\", \"mainSvg\")\n      .style('z-index', 0)\n      .attr(\"viewBox\", [0, 0, width, height]);\n    d3.select('#' + treemapId).append(() => svg.node());\n    svg.append('title')\n      .attr('class', 'vis-title');\n    var gradient = svg.append(\"svg:defs\")\n      .append(\"svg:linearGradient\")\n      .attr(\"id\", \"gradient-\" + treemapId)\n      .attr(\"x1\", \"0%\")\n      .attr(\"y1\", \"0%\")\n      .attr(\"x2\", \"100%\")\n      .attr(\"y2\", \"100%\");\n\n    // Gradient colors\n    gradient.append(\"svg:stop\")\n      .attr(\"offset\", \"0%\")\n      .attr(\"stop-color\", \"#eee\");\n\n    gradient.append(\"svg:stop\")\n      .attr(\"offset\", \"100%\")\n      .attr(\"stop-color\", \"#ddd\");\n\n    let tempEl = svg.append('text').text('100%');\n\n    let tempElLen = d3.select(d3.select(tempEl).node()._groups[0]).node()[0].getComputedTextLength();\n    let mainCircleRadius = Math.min(Math.max(rectHeight(root.children[0]) / 6, tempElLen * 2 / 3),\n      Math.min(30, rectHeight(root.children[0]) / 2.5));\n    tempEl.remove();\n    let topicCellPadding = .5 * mainCircleRadius;\n    let mainCircleWidth = 2 * mainCircleRadius;\n    let subCircleRadius = mainCircleRadius * .8;\n    let subCircleWidth = 2 * subCircleRadius;\n    let dropShadowParams = '1px 1px 1px';\n\n    // Resizing columns, first thin, second standard, third larger\n    let rootWidthReduction = 7;\n    root.y1 /= rootWidthReduction;\n    if (root.y1 - root.y0 > 50) {\n      root.y1 = root.y0 + 50;\n    }\n    let lastY = 0;\n    let learningGoalPadding = 0.5;\n    root.each(d => {\n      if (d.depth === 0) {\n        d.x1 += .1;\n        return;\n      }\n      if (d.depth === 1) {\n        let tempY0 = d.y0;\n        d.y0 = root.y1 + 0.7;\n        d.y1 -= tempY0 - d.y0;\n        if (d.y1 - d.y0 > 300) {\n          d.y1 = d.y0 + 300;\n        }\n        d.tabindex = (5 * d.value + 1) * d.parent.children.indexOf(d) + 2;\n      }\n      else {\n        d.y0 = d.parent.y1 + 0.7;\n        d.y1 -= 300;\n        const currentWidth = rectWidth(d);\n        if (currentWidth <= 0) {\n          d.y1 = d.y0 + 1;\n        }\n        //Equal sized rect in middle of screen\n        //        let newX = (highestNumberChildren - d.siblingsCount) * (d.x1 - d.x0) / 2.0;\n        //        d.x0 += newX;\n        //        d.x1 += newX;\n        //Expand learning goal to max\n        const blockSize = (d.parent.x1 - d.parent.x0 - learningGoalPadding * (d.siblingsCount - 1)) / d.siblingsCount;\n\n        let idx = d.parent.children.indexOf(d);\n        d.x0 = d.parent.x0 + idx * blockSize + learningGoalPadding * idx;\n        d.x1 = d.x0 + blockSize;\n        d.proY0 = d.y1 - d.y0;\n        d.proY1 = d.proY0 + (d.parent.x1 - d.parent.x0 - learningGoalPadding * (d.siblingsCount - 1)) / highestNumberChildren;\n        d.proX0 = (d.x1 - d.x0 - (d.proY1 - d.proY0)) / 2;\n        d.proX1 = d.proX0 + (d.proY1 - d.proY0);\n        lastY = d.y1 + d.proY1 - d.proY0;\n      }\n    });\n    let depth1Child = root.children[0];\n    let depth2Child = findDepth2Child(root);\n    // If mobile change layout\n    if (isSmallScreen && depth2Child) {\n      root.each(d => {\n        if (d.depth == 1) {\n          d.y1 = depth2Child.y1;\n        }\n      });\n    }\n    let depth1Width = rectWidth(depth1Child);\n    let depth2Width = rectWidth(depth2Child) ?? 1;\n    let linkContainerSize = Math.min(Math.min(3 * mainCircleRadius / 2, 30), rectHeight(depth1Child) / 3);\n    let linkIconSize = linkContainerSize * 0.75;\n    if (isSmallScreen && isLandscapeMode) {\n      linkContainerSize *= 2;\n      linkIconSize *= 2;\n    }\n    let changingProgress = false;\n    let lastMousePosition = null;\n    let objectToMove = null;\n    let currentProgress = null;\n    let circleEnlargeFactor = depth2Child ? Math.min(4, 86 / sliderSize(depth2Child)) : 0;\n    if (isLandscapeMode && isSmallScreen && hasTouchscreen) {\n      circleEnlargeFactor = 1.5 * circleEnlargeFactor;\n    }\n    let sliderCircleIconSize = depth2Child ? Math.min(sliderSize(depth2Child), 20.13) : 0;\n    let sliderCircleRadius = depth2Child ? Math.min(sliderSize(depth2Child) / 1.5, 16) : 0;\n    lastY = depth2Child ? depth2Child.y1 + sliderSize(depth2Child) : depth1Child.y1;\n    let colorPaletteSize = 25;\n    if (isSmallScreen && !isLandscapeMode) {\n      colorPaletteSize = (width - lastY) / 8;\n    }\n    else if (isSmallScreen) {\n      colorPaletteSize = (width - lastY) / 14;\n      //      sliderCircleIconSize *= 2;\n      //      sliderCircleRadius *= 2;\n    }\n    if (colorPaletteSize < 0) {\n      colorPaletteSize = 0;\n    }\n    let colorPaletteBgRadius = colorPaletteSize;\n    let yShift = colorPaletteSize / 2 + 3;\n    let colorSchemeHolderPadding = 25;\n    if (isSmallScreen) {\n      colorSchemeHolderPadding = 10;\n    }\n    let cornerRadius = colorSchemeHolderPadding / 3;\n    let colorBoxWidth = Math.min(((width - lastY) * 0.7 - 2 * cornerRadius) / (data.children.length + 1),\n      colorPaletteBgRadius * Math.sqrt(2) - 2 * cornerRadius);\n    if (isSmallScreen) {\n      colorBoxWidth = 7;\n    }\n    let colorBoxHeight = colorBoxWidth;\n    let colorSchemeHolderHeight = colorBoxWidth + 2 * cornerRadius;\n    let colorSchemeHolderWidth = colorBoxWidth * (data.children.length + 1) + 2 * cornerRadius;\n    let useDoubleColumnColorScheme = yShift + 2 * colorPaletteBgRadius +\n      (colorSchemeHolderHeight + 10) * (colorSchemesNames.length - 1) +\n      colorSchemeHolderHeight + 5 * colorPaletteSize > height;\n    let colorSchemeTouchRects = true;\n    let colorBoxFactor = 0.7;\n    while (useDoubleColumnColorScheme && colorSchemeTouchRects && colorBoxFactor >= 0.1) {\n      yShift = colorPaletteSize / 2 + 3;\n      colorSchemeHolderPadding = 13;\n      cornerRadius = colorSchemeHolderPadding / 3;\n      colorBoxWidth = Math.max(Math.min(((width - lastY) * colorBoxFactor - 2 * cornerRadius) / (data.children.length + 1),\n        colorPaletteBgRadius * Math.sqrt(2) - 2 * cornerRadius), 1);\n      colorBoxHeight = colorBoxWidth;\n      colorSchemeHolderHeight = colorBoxWidth + 2 * cornerRadius;\n      colorSchemeHolderWidth = colorBoxWidth * (data.children.length + 1) + 2 * cornerRadius;\n      useDoubleColumnColorScheme = yShift + 2 * colorPaletteBgRadius +\n        (colorSchemeHolderHeight + 10) * (colorSchemesNames.length - 1) +\n        colorSchemeHolderHeight + 5 * colorPaletteSize > height;\n      colorSchemeTouchRects = lastY > (width - lastY) / 4 + lastY - colorSchemeHolderWidth / 2;\n      colorBoxFactor -= 0.1;\n    }\n\n    let colorData = [];\n    colorSchemesNames.forEach((color, index) => colorData.push({\n      index: index,\n      colorscheme: color,\n      colorblind: colorblindSchemes.includes(color)\n    }));\n\n    let toolBar = svg.append('g');\n\n    let colorSchemePickerG = toolBar.append('g')\n      .attr('transform', `translate(${0},${5 * colorPaletteSize})`)\n      .attr('class', 'colorSchemePicker')\n      .attr('aria-hidden', true);\n    let colorSchemesContainer = colorSchemePickerG.append('g')\n      .attr('class', 'colorSchemesContainer');\n    let colorSchemeSample = colorSchemesContainer\n      .selectAll(null)\n      .data(colorData)\n      .join('svg')\n      .attr('x', (width - lastY - colorSchemeHolderWidth) / 2 + lastY)\n      .attr('y', yShift + colorPaletteSize / 2 - colorSchemeHolderHeight / 2)\n      .attr('width', colorSchemeHolderWidth)\n      .attr('height', colorSchemeHolderHeight)\n      .attr('viewBox', `0 0 ${colorSchemeHolderWidth} ${colorSchemeHolderHeight} `)\n      .attr('fill', d => d.colorblind ? '#383866' : `url(#gradient-${treemapId})`)\n      .attr('cursor', 'pointer')\n      .attr('filter', `drop-shadow(${dropShadowParams} rgba(0,0,0,0.5))`)\n      .on('click', (_, d) => changeColorScheme(d.colorscheme));\n\n    let colorSchemeSamplePath = colorSchemeSample.append('path')\n      .attr('d', roundedCornersRect(\n        colorSchemeHolderWidth,\n        colorSchemeHolderHeight,\n        colorBoxWidth + 2 * cornerRadius,\n        colorSchemeHolderHeight,\n        cornerRadius\n      ));\n    let colorSchemeBox = colorSchemeSample\n      .selectAll(null)\n      .data(d => ramp(d.colorscheme, d.index))\n      .join('rect')\n      .attr('y', (colorSchemeHolderHeight - colorBoxHeight) / 2)\n      .attr('x', (colorSchemeHolderWidth - colorBoxWidth) / 2)\n      .attr('height', colorBoxHeight)\n      .attr('width', colorBoxWidth)\n      .attr('fill', d => d.color);\n\n\n    let colorPaletteIconG = colorSchemePickerG.append('g')\n      .attr('class', 'colorPaletteIconG');\n    let colorPaletteBg = colorPaletteIconG.append('circle')\n      .attr('filter', `drop-shadow(${dropShadowParams} rgba(0,0,0,0.5))`)\n      .attr('cx', (width - lastY) / 2 + lastY)\n      .attr('cy', yShift + colorPaletteSize / 2)\n      .attr('r', colorPaletteBgRadius)\n      .attr('cursor', 'pointer')\n      .attr('fill', `url(#gradient-${treemapId})`)\n      .on('click', toggleColorSchemes);\n    let colorPaletteSvg = colorPaletteIconG.append('svg')\n      .attr('x', (width - lastY - colorPaletteSize) / 2 + lastY)\n      .attr('y', yShift)\n      .attr('width', colorPaletteSize)\n      .attr('height', colorPaletteSize)\n      .attr('viewBox', '0 0 512 512')\n      .attr('cursor', 'pointer')\n      .attr('fill', 'rgb(40, 40, 40)')\n      .on('click', toggleColorSchemes);\n    colorPaletteSvg.append('path')\n      .attr('d', 'M491.514,148.498c27.293-27.293,27.293-71.701,0-98.994L442.017,0.007l-43.382,43.382' +\n        ' C356.067,14.713,306.619-0.279,254.762,0.004C114.059,0.68-0.22,115.717,0.017,256.44' +\n        'c0.115,68.288,26.794,132.471,75.125,180.724 c48.335,48.26,112.571,74.837,180.875,74.837' +\n        'c13.478,0,27.011-1.059,40.224-3.146c20.168-3.188,37.24-15.365,46.838-33.411 ' +\n        'c9.753-18.337,10.29-39.698,1.471-58.605c-9.644-20.677-14.533-42.827-14.533-65.837' +\n        'c0-29.521,8.28-58.253,23.945-83.089 c11.303-17.92,26.072-33.28,43.344-45.235l8.777,254.863l0.008,0.19' +\n        'c0.906,19.217,16.687,34.27,35.926,34.27 c19.239,0,35.02-15.054,35.926-34.27l8.904-258.531' +\n        'c3.239-4.215,5.17-9.484,5.17-15.199v-40c0-4.636-1.273-8.979-3.482-12.705 ' +\n        'C489.549,150.392,490.547,149.466,491.514,148.498z M392.017,164.001v26.484' +\n        'c-25.685,15.062-47.458,36.102-63.429,61.423 c-18.691,29.634-28.571,63.899-28.571,99.093' +\n        'c0,27.424,5.835,53.841,17.345,78.517c4.8,10.291,4.519,21.896-0.769,31.839 ' +\n        'c-5.133,9.65-14.258,16.162-25.035,17.865c-11.669,1.845-23.627,2.779-35.541,2.779' +\n        'c-60.299,0-117.007-23.463-159.679-66.066 c-42.666-42.599-66.219-99.26-66.321-159.545' +\n        'C29.808,132.156,130.693,30.601,254.906,30.004 c44.89-0.212,87.796,12.497,124.892,36.882' +\n        'c-5.077,9.81-7.781,20.752-7.781,32.115c0,18.698,7.282,36.276,20.503,49.497 ' +\n        'c0.968,0.968,1.966,1.894,2.979,2.798C393.29,155.022,392.017,159.365,392.017,164.001z M447.972,476.381 ' +\n        'c-0.182,3.156-2.786,5.62-5.956,5.62s-5.773-2.464-5.956-5.62l-8.519-247.38h28.949L447.972,476.381z ' +\n        'M462.017,199.001h-40v-30h40 V199.001z M470.3,127.285c-7.555,7.556-17.6,11.716-28.284,11.716' +\n        'c-10.684,0-20.729-4.16-28.284-11.716h-0.001 c-15.596-15.596-15.596-40.973,0-56.568l28.285-28.284l28.285,28.284' +\n        'c7.555,7.555,11.715,17.6,11.715,28.284    C482.016,109.685,477.856,119.73,470.3,127.285z');\n    let radius = 45;\n    let innerRadiusFactor = 2;\n    appendEmptyCirclePath(colorPaletteSvg, 238, 74, radius, innerRadiusFactor);\n    appendEmptyCirclePath(colorPaletteSvg, 124, 263, radius, innerRadiusFactor);\n    appendEmptyCirclePath(colorPaletteSvg, 145, 143, radius, innerRadiusFactor);\n    appendEmptyCirclePath(colorPaletteSvg, 211, 346, radius, innerRadiusFactor);\n\n    let zoomIconG = toolBar.append('g')\n      .attr('class', 'zoomIconG')\n      .attr('transform', `translate(${(width - lastY) / 2 + lastY - colorPaletteSize},${2.5 * colorPaletteSize})`)\n      .on('click', null);\n\n    zoomIconG.append('circle')\n      .attr('filter', `drop-shadow(${dropShadowParams} rgba(0,0,0,0.5))`)\n      .attr('cx', colorPaletteSize)\n      .attr('cy', colorPaletteSize)\n      .attr('r', colorPaletteBgRadius)\n      .attr('fill', `url(#gradient-${treemapId})`);\n\n    let zoomBG = zoomIconG.append('svg')\n      .attr('viewBox', '0 0 100 100')\n      .attr('height', 2 * colorPaletteSize)\n      .attr('width', 2 * colorPaletteSize)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('class', 'zoomHalvesContainer');\n\n\n    let zoomInIconWidth = 20;\n    let zoomLeftHalfSvg = zoomBG.append('svg')\n      .attr('class', 'zoomLeftHalf')\n      .attr('cursor', 'pointer')\n      .on('click', zoomOutText);\n    let zoomLeftHalf = zoomLeftHalfSvg.append('path')\n      .attr('d', `M 50,1 a 49 49 0 0 0 0,98 a 99999 9999  0 0 0 0,-98  z`)\n      .attr('fill', `url(#gradient-${treemapId})`);\n\n    // zoomLeftHalfIcon\n    zoomLeftHalfSvg.append('path')\n      .attr('d', `M ${(50 - zoomInIconWidth) / 2 + 2},50  h ${zoomInIconWidth}`)\n      .attr('stroke', 'black')\n      .attr('stroke-width', 3)\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-opacity', 1);\n\n    let zoomRightHalfSvg = zoomBG.append('svg')\n      .attr('cursor', 'pointer')\n      .attr('class', 'zoomRightHalf')\n      .on('click', zoomInText);\n    let zoomRightHalf = zoomRightHalfSvg.append('path')\n      .attr('d', `M 50,1 a 49 49 0 0 1 0,98 a 99999 9999  0 0 1 0,-98  z`)\n      .attr('fill', `url(#gradient-${treemapId})`);\n    //zoomRightHalfIcon\n    zoomRightHalfSvg.append('path')\n      .attr('d', `M ${48 + (50 - zoomInIconWidth) / 2}, 50 h ${zoomInIconWidth}` +\n        ` M ${50 / 2 + 48},${50 - zoomInIconWidth / 2}  v ${zoomInIconWidth} `)\n      .attr('stroke', 'black')\n      .attr('stroke-width', 3)\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-opacity', 1);\n\n    // zoom separation line\n    zoomBG.append('path')\n      .attr('d', 'M 50,1 v 98')\n      .attr('stroke', 'black')\n      .attr('stroke-opacity', .5);\n\n    let accessibilityIconG = toolBar.append('g')\n      .attr('class', 'accessibilityIcon')\n      .on('click', toggleAccessibilityDialog);\n    let accessibilityDialogPathRadius = 10;\n    let accessibilityWidth = width - lastY - 10;\n\n    let accessibilityBG = accessibilityIconG.append('circle')\n      .attr('filter', `drop-shadow(${dropShadowParams} rgba(0,0,0,0.5))`)\n      .attr('cx', (width - lastY) / 2 + lastY)\n      .attr('cy', yShift + colorPaletteSize / 2)\n      .attr('r', colorPaletteBgRadius)\n      .attr('cursor', 'pointer')\n      .attr('fill', `url(#gradient-${treemapId})`);\n    let accessibilityIcon = accessibilityIconG.append('svg')\n      .attr('x', (width - lastY - colorPaletteSize) / 2 + lastY)\n      .attr('y', yShift)\n      .attr('width', colorPaletteSize)\n      .attr('height', colorPaletteSize)\n      .attr('viewBox', '0 0 100 100')\n      .attr('cursor', 'pointer')\n      .attr('fill', 'none')\n      .attr('stroke', 'black')\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-width', 10);\n    accessibilityIcon.append('path')\n      .attr('d', 'M50,35L50,40A90,90 0 0 1 35,95M50,40A90,90 1 0 0 65,95 M50,35 A 100,100 1 0 0 85,20M50,35 A 100,100 0 0 1 15,20');\n    accessibilityIcon.append('circle')\n      .attr('cx', 50)\n      .attr('cy', 10)\n      .attr('r', 5);\n\n\n    // Create cell rectangles\n    const cell = svg\n      .append('g')\n      .selectAll(\"g\")\n      .data(root.descendants())\n      .join(\"g\")\n      .attr('role', 'listitem')\n      .attr('aria-labelledby', (d, i) => `depth${d.depth}_idx${i}`)\n      .attr(\"transform\", d => {\n        if (d.depth < 2 || !isSmallScreen) {\n          return `translate(${d.y0},${d.x0})`;\n        }\n        else {\n          return `translate(${d.parent.y1},${d.x0})`;\n        }\n      });\n    cell.filter(d => d.depth === 0)\n      .attr('id', 'root-rect' + treemapId);\n\n    const rect = cell.append(\"rect\")\n      .attr(\"width\", d => d.y1 - d.y0)\n      .attr('display', d => d.depth < 2 || !isSmallScreen ? 'initial' : 'none')\n      .attr(\"height\", d => d.x1 - d.x0)\n      .attr('class', 'rect')\n      .attr(\"fill-opacity\", 0.6)\n      .attr(\"fill\", d => {\n        if (!d.depth) { return color(d.data.name); }\n        while (d.depth > 1) { d = d.parent; }\n        return color(d.data.name);\n      });\n\n\n    if (depth2Child) {\n      rect.filter(d => d.depth > 0)\n        .on(\"click\", clicked);\n    }\n    rect.filter(d => d.depth === 0)\n      .attr('tabindex', 0)\n      .attr('aria-label', `Learning goal widget for ${root.data.name}.\n           ${root.children.length} topic${root.children.lenght > 1 ? 's' : ''} present.`);\n    setDepth1AriaLabel();\n    rect.filter(d => d.depth === 1)\n      .on('keydown', (evt, d) => {\n        evt = evt || window.event;\n        if (evt.ctrlKey && evt.keyCode == 13 && d.data.link) {\n          window.open(d.data.link.replaceAll('\\\\\\/', '/'), '');\n        }\n        else if (evt.keyCode == 13) {\n          clicked(null, d);\n        }\n      });\n    rect.filter(d => d.depth === 2)\n      .attr('aria-live', \"polite\")\n      .attr('aria-labelledby', (d, i) => `depth${d.depth}_idx${i}`);\n\n    let learningGoalTitle = rect.filter(d => d.depth === 2)\n      .append('title')\n      .attr('class', (d, i) => `depth${d.depth}_idx${i}`)\n      .text(d => `${d.data.name} - Progress ${parseInt(computeProgress(d) * 100)}%.\n${d.data.link ? 'External link is available, press control and enter to open it.' : ''}`);\n    let isEnteringValue = false;\n    let newProgress = '';\n    rect.filter(d => d.depth === 2)\n      .on('keydown', (evt, d) => {\n        evt = evt || window.event;\n        if (!isEnteringValue && evt.ctrlKey && evt.shiftKey && evt.keyCode == 13) {\n          isEnteringValue = true;\n          learningGoalTitle.filter(d2 => d2.depth === 2 && d2 == d)\n            .text(d => `The current progress for the learning goal ${d.data.name} is ${d.data.pro}%.\n          Please enter now the new value. You can save the changes by pressing ctrl shift enter\n          or reject them by pressing ctrl shift delete.`);\n        }\n        else if (!isEnteringValue && evt.ctrlKey && evt.keyCode == 13 && d.data.link) {\n          window.open(d.data.link.replaceAll('\\\\\\/', '/'), '');\n        }\n        else if (isEnteringValue) {\n          //console.log(evt.keyCode);\n          if (evt.keyCode >= 48 && evt.keyCode <= 57) {\n            newProgress += String.fromCharCode(evt.keyCode);\n            if (parseInt(newProgress) > 100) {\n              learningGoalTitle.filter(d2 => d2.depth === 2 && d2 == d)\n                .text(`The entered value is ${newProgress}, but it should between 0 and 100,\n            please change it. You can press delete to remove the last digit or ctrl shift delete to exit.`);\n            }\n            else {\n              learningGoalTitle.filter(d2 => d2.depth === 2 && d2 == d)\n                .text(`New value ${newProgress}. Press ctrl shift enter to confirm.`);\n            }\n          }\n          else if (evt.ctrlKey && evt.shiftKey && evt.keyCode == 8) {\n            learningGoalTitle.filter(d2 => d2.depth === 2 && d2 === d)\n              .text(`Changes aborted. Progress is set to its previous value ${d.data.pro}%.`);\n            setTimeout(() => {\n              learningGoalTitle.filter(d2 => d2.depth === 2 && d2 === d)\n                .text(d => `Learning goal ${d.data.name}.\n                                      Progress ${parseInt(computeProgress(d) * 100)}%.\n                                      ${d.data.link ? 'External link is available, press control and enter to open it.' : ' '}`);\n            }, 5000);\n            newProgress = '';\n            isEnteringValue = false;\n          }\n          // Save with Shift+Ctrl+Enter\n          else if (evt.ctrlKey && evt.shiftKey && evt.keyCode == 13) {\n            let newProInt = parseInt(newProgress);\n            if (newProInt < 0 || newProInt > 100) {\n              learningGoalTitle.filter(d2 => d2.depth === 2 && d2 == d)\n                .text(`The entered value is ${newProgress}, but it should between 0 and 100,\n                  please change it. You can press delete to remove the last digit or ctrl shift delete to exit.`);\n            }\n            else {\n              let currentProg = Math.round(computeProgress(d.parent) * 100) / 100;\n              d.data.pro = newProInt;\n              learningGoalTitle.filter(d2 => d2.depth === 2 && d2 == d)\n                .text(`Confirmed changes. New progress ${d.data.pro}%.`);\n              setTimeout(() => {\n                learningGoalTitle.filter(d2 => d2.depth === 2 && d2 == d)\n                  .text(d => `Learning goal ${d.data.name}.\n                                      Progress ${parseInt(computeProgress(d) * 100)}%.\n                                      ${d.data.link ? 'External link is available, press control and enter to open it.' : ' '}`);\n              }, 5000);\n              let trans = d3.transition().duration(300).ease(d3.easeExp);\n              resetSlider((d2) => d2.depth === 2 && d2 === d,\n                trans,\n                false);\n              learningGoalProgressBar.filter(d2 => d2.depth === 2 && d2 == d).transition(trans)\n                .attr('width', d => computeLearningGoalProgressBarWidth(d));\n              sliderSvg.filter(d2 => d2.depth === 2 && d2 == d).transition(trans)\n                .attr('x', d => {\n                  let newVal = computeCircleContainerXPosition(d);\n                  return d.data.pro === 100 ? newVal + 1 : newVal;\n                });\n              sliderText.filter(d2 => d2.depth === 2 && d2 == d).transition(trans)\n                .text(newProgress + '%')\n                .attr(\"x\", d => {\n                  let newVal = computeCircleTextXPosition(d);\n                  return d.data.pro === 100 ? newVal + 1 : newVal;\n                });\n              let newProg = Math.round(computeProgress(d.parent) * 100) / 100;\n              let sign = currentProg > newProg ? -.01 : .01;\n              changeProgressDegree(currentProg, sign, currentProg, newProg, d.parent, 300);\n              newProgress = '';\n              isEnteringValue = false;\n            }\n\n          }\n          // Delete one digit with delete\n          else if (evt.keyCode == 8) {\n            newProgress = newProgress.substr(0, newProgress.length - 1);\n            learningGoalTitle.filter(d2 => d2.depth === 2 && d2 == d)\n              .text(`New value ${newProgress}. Press ctrl shift enter to confirm or ctrl shift delete to abort.`);\n          }\n          // Trying to move tab\n          else if (evt.keyCode == 9 || evt.Tab) {\n            newProgress = newProgress.substr(0, newProgress.length - 1);\n            learningGoalTitle.filter(d2 => d2.depth === 2 && d2 == d)\n              .text(`Please confirm or reject the changes before moving to another learning goal.\n            The entered value is ${newProgress}. Press ctrl shift enter to confirm\n            or ctrl shift delete to abort.`);\n            evt.preventDefault();\n          }\n          else if (evt.ctrlKey || evt.shiftKey || evt.keyCode == 13) { }\n          // If some letters or weird keys are entered\n          else {\n            learningGoalTitle.filter(d2 => d2.depth === 2 && d2 == d)\n              .text('You can enter only digits currently. Press control shift delete to exit.' +\n                ` The number entered is ${newProgress !== '' ? newProgress : 'still empty.'}`);\n          }\n        }\n      });\n\n    // Create learning goal progress bar\n    let learningGoalProgressBar = cell.filter(d => d.depth === 2)\n      .append(\"rect\")\n      .attr(\"width\", d => isSmallScreen ? 0 : rectWidth(d) * computeProgress(d))\n      .attr(\"height\", d => rectHeight(d))\n      .attr('y', 0)\n      .attr(\"fill-opacity\", 0.6)\n      .attr(\"fill\", d => color(d.parent.data.name))\n      .on(\"click\", depth2Child ? clicked : null);\n    let textCellClass = 'mainCellText';\n    const text = cell.append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr('aria-hidden', true)\n      .attr('class', textCellClass)\n      .attr(\"width\", d => d.y1 - d.y0);\n\n\n    text.filter(d => d.depth === 0)\n      .style('font-weight', 'bold')\n      .style('letter-spacing', '1em')\n      .style('text-anchor', 'initial')\n      .style('writing-mode', 'vertical-lr')\n      .style('text-orientation', 'upright');\n    text.filter(d => d.depth === 2)\n      .attr('display', isSmallScreen ? 'none' : 'initial');\n\n    const maintspan = text.append(\"tspan\")\n      .text(d => d.data.name)\n      .attr('dx', 0)\n      .attr('x', 4)\n      .attr('y', d => d.depth === 1 ? rectHeight(d) / 2 : rectHeight(d) / 2)\n      .attr('fill', d => contrastCorrectedColor(d, 0.6, d.depth === 2))\n      .style('opacity', 1)\n      .style('fill-opacity', 1)\n      .style(\"font\", d => `${fontSize(d)}px sans-serif`);\n    maintspan.filter(d => d.depth === 1)\n      .style('text-anchor', 'middle')\n      .attr('x', d => (rectWidth(d) - 2.5 * mainCircleRadius) / 2);\n\n    // Vertical text on first column\n    maintspan.filter(d => d.depth === 0)\n      .attr('y', d => rectHeight(d) / 2)\n      .attr('x', d => rectWidth(d) / 2)\n      .style('dominant-baseline', 'central')\n      .style('text-anchor', 'middle')\n      .style('font-weight', 'bold');\n    // Add ... when text too long for cell\n    maintspan.filter(d => d.depth === 1)\n      .call(\n        wrapText,\n        depth1Width - mainCircleWidth - 3 * topicCellPadding,\n        false,\n        (el) => rectHeight(el),\n        topicCellPadding);\n    let rootNode = null;\n    let rootText = null;\n    maintspan.filter(d => d.depth === 0)\n      .each((_, i, n) => {\n        rootText = n[i].parentNode;\n        rootNode = rootText.parentNode;\n      });\n    d3.select(rootText).attr('class', 'rootText');\n    d3.select(rootNode).attr('class', 'rootNode');\n    if (rootText.getBBox().height >= rootNode.querySelector('.rect').getBBox().height) {\n      text.filter(d => d.depth === 0)\n        .style('letter-spacing', '0.3em');\n      if (rootText.getBBox().height >= rootNode.querySelector('.rect').getBBox().height) {\n        truncateTitle(rootText, rootNode, maintspan.filter(d => d.depth === 0));\n      }\n    }\n\n    // Multiline on topics\n    maintspan\n      .filter(d => d.depth === 2)\n      .style('dominant-baseline', 'mathematical')\n      .call(truncateText, depth2Width * 0.95, true);\n    // create slider\n    let sliderG = cell.filter(d => d.depth === 2).append('g')\n      .attr('class', 'sliderG');\n\n    let sliderRejectG = sliderG.append('g').attr('class', 'circleReject');\n    let sliderRejectSvg = setupSliderSvg(sliderRejectG, 'reject', rejectChanges);\n    let sliderRejectCircle = setupSliderCircles(sliderRejectSvg);\n    let sliderRejectIcon = setupSliderCircleIcon(sliderRejectSvg, 'reject');\n\n    let sliderAcceptG = sliderG.append('g').attr('class', 'circleAccept');\n    let sliderAcceptSvg = setupSliderSvg(sliderAcceptG, 'accept', acceptChanges);\n    let sliderAcceptCircle = setupSliderCircles(sliderAcceptSvg);\n    let sliderAcceptIcon = setupSliderCircleIcon(sliderAcceptSvg, 'accept');\n\n    let sliderSvg = sliderG\n      .append('svg')\n      .attr('aria-label', d => `Progress slider, current progress ${d.data.pro}%. ` +\n        `Press enter and then use the arrow keys to adjust. Press enter when you are done.`)\n      .attr('x', d => isSmallScreen ? 0 : d.proY0)\n      .attr('y', d => (rectHeight(d) - sliderSize(d)) / 2)\n      .attr('class', 'slider')\n      .attr('width', d => sliderSize(d))\n      .attr('height', d => sliderSize(d))\n      .attr('viewBox', '0 0 100 100')\n      .attr('fill', d => color(d.parent.data.name));\n    if (!hasTouchscreen) {\n      sliderSvg\n        .on('mouseenter', (e, d) => resizeSlider(e, d))\n        .on('mouseleave', (e, d) => resizeSlider(e, d))\n        .on('mousedown', (e, d) => startChangingProgress(e, d));\n    }\n    else {\n      sliderSvg\n        .on('touchstart', (e, d) => sliderTouchStart(e, d))\n        .on('touchmove', e => sliderTouchMove(e))\n        .on('touchend', () => sliderTouchEnd());\n    }\n    let sliderPath = sliderSvg\n      .append('path')\n      .attr('d', `M 50 50 m 49, 0 a 49,49 0 1,0 -98,0 a 49,49 0 1,0 98,0 `);\n\n    let sliderText = sliderG\n      .append('text')\n      .text('100%')\n      .attr('text-anchor', 'middle')\n      .attr('dominant-baseline', 'central')\n      .attr('x', d => isSmallScreen ? sliderSize(d) / 2 : d.proY0 + sliderSize(d) / 2)\n      .attr('y', d => rectHeight(d) / 2)\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr('fill', d => contrastCorrectedColor(d, 1, false))\n      .style('font', (d) => `${sliderTextSize(d, true)}px sans-serif`);\n    let showSliderPercent = checkSliderPercentFits();\n    sliderText\n      .text(d => d.data.pro + (showSliderPercent ? '%' : ''));\n\n\n    let topicProgressG = cell.filter(d => d.depth === 1)\n      .append('g')\n      .on(\"click\", clicked)\n      .attr('transform', d => `translate(${rectWidth(d) - mainCircleWidth - topicCellPadding},` +\n        ` ${rectHeight(d) / 2 - mainCircleRadius})`);\n\n    let topicProgressContainerBG = topicProgressG\n      .append('svg')\n      .attr('width', mainCircleWidth)\n      .attr('height', mainCircleWidth)\n      .attr('viewBox', '0 0 100 100')\n      .attr('x', 0)\n      .style('filter', d => {\n        let alphaArray = parseRGB(color(d.data.name));\n        alphaArray.push(0.8);\n        return `drop-shadow(${dropShadowParams} ${convertRGBArrayToString(alphaArray)})`;\n      })\n      .attr('stroke', d => convertRGBAtoRGB(color(d.data.name), 'black', 0.8, true))\n      .attr('stroke-width', 1)\n      .attr('stroke-linecap', 'round')\n      .attr('fill-opacity', 1)\n      .attr('fill', d => {\n        let baseColor = color(d.data.name);\n        let bgColor = convertRGBAtoRGB(baseColor, 'white', 0.6);\n        return convertRGBAtoRGB(color(d.data.name), bgColor, 0.4, true);\n      });\n\n    topicProgressContainerBG\n      .append('path')\n      .attr('d', `M 50 50 m 49, 0 a 49,49 0 1,0 -98,0 a 49,49 0 1,0 98,0 `);\n\n    let topicProgressContainer = topicProgressG\n      .append('svg')\n      .attr('width', mainCircleWidth)\n      .attr('height', mainCircleWidth)\n      .attr('x', 0)\n      .attr('viewBox', '0 0 100 100')\n      .attr('fill-opacity', 1)\n      .attr('fill', d => convertRGBAtoRGB(color(d.data.name), 'black', 0.94, true));\n    let topicProgressPie = topicProgressContainer\n      .append('path')\n      .attr('d', d => {\n        let angle = 2 * Math.PI * computeProgress(d);\n        if (angle === 2 * Math.PI) {\n          return `M 50 50 m 49, 0 a 49,49 0 1,0 -98,0 a 49,49 0 1,0 98,0 z`;\n        }\n        let sin = Math.sin(angle);\n        let cos = Math.cos(angle);\n        return `M 50 50 v -49 A 49,49 0 ${angle >= Math.PI ? 1 : 0},1 ${sin * 49 + 50} ${-cos * 49 + 50} z`;\n      });\n\n    let topicProgressTextSvg = topicProgressG\n      .append('svg')\n      .attr('x', (mainCircleRadius - subCircleRadius))\n      .attr('y', (mainCircleRadius - subCircleRadius))\n      .attr('width', subCircleWidth)\n      .attr('height', subCircleWidth)\n      .attr('viewBox', '0 0 100 100')\n      .attr('stroke', d => convertRGBAtoRGB(color(d.data.name), 'black', 0.8, true))\n      .attr('stroke-width', 1)\n      .attr('stroke-linecap', 'round')\n      .attr('fill-opacity', 1)\n      .attr('fill', d => convertRGBAtoRGB(color(d.data.name), 'white', 0.6, true));\n\n    // topic progress text bg\n    topicProgressTextSvg\n      .append('path')\n      .style('transform-origin', `${50}px ${0}px`)\n      .style('transform', `rotate3d(0, 1, 0, 0)`)\n      .attr('d', `M 50 50 m 48, 0 a 48,48 0 1,0 -96,0 a 48,48 0 1,0 96,0 `);\n\n    let topicProgressText = topicProgressG\n      .append('text')\n      .attr('aria-hidden', true)\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .style('transform-origin', `${mainCircleWidth}px ${0}px`)\n      .style('transform', `rotate3d(0, 1, 0, 0)`)\n      .text(d => `${parseInt(computeProgress(d) * 100)}%`)\n      .attr('y', mainCircleRadius)\n      .attr('x', mainCircleRadius)\n      .attr(\"fill-opacity\", 1)\n      .attr('text-anchor', 'middle')\n      .attr('dominant-baseline', 'central')\n      .attr('fill', d => contrastCorrectedColor(d, 0.6, false))\n      .style(\"font\", `${subCircleWidth / 2.7}px sans-serif`);\n\n    let focusLinkFactor = 1.2;\n    // Create top left link icon\n    let linkContainerG = cell.filter(d => d.depth >= 1 && d.data.link)\n      .append('g')\n      .attr('class', 'linkContainerG')\n      .on('mouseenter', (_, p) => changeLinkFocus(p, linkContainerG, true))\n      .on('mouseleave', (_, p) => changeLinkFocus(p, linkContainerG, false))\n      .on(\"click\", (_, d) => window.open(d.data.link ? d.data.link.replaceAll('\\\\\\/', '/') :\n        'https://www.know-center.tugraz.at/en/', '_blank'));\n\n    let linkContainer = createElement(false);\n    linkContainer\n      .attr('aria-label', d => `Open link of ${d.data.name}`)\n      .style('filter', d => {\n        let alphaArray = parseRGB(color(d.depth === 1 ? d.data.name : d.parent.data.name));\n        alphaArray.push(0.8);\n        return `drop-shadow(${dropShadowParams} ${convertRGBArrayToString(alphaArray)})`;\n      });\n\n    linkContainer.append('path')\n      .attr('d', roundedRect(linkContainerSize));\n\n    let linkIconSvg = createElement(true);\n\n    linkIconSvg\n      .append('path')\n      .attr('d', 'M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71');\n    linkIconSvg\n      .append('path')\n      .attr('d', 'M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71');\n\n    let backArrowG = cell.filter(d => d.depth === 1)\n      .append('g')\n      .on('click', clicked)\n      .attr('cursor', 'zoom-out')\n      .attr('class', 'backArrowG');\n    let backArrowSvg = backArrowG.append('svg')\n      .attr(\"width\", 0)\n      .attr(\"height\", 0)\n      .attr('viewBox', `0 0 100 100`)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr(\"stroke-opacity\", 1)\n      .attr(\"fill-opacity\", 0)\n      .attr('stroke', d => contrastCorrectedColor(d, 0.7, true))\n      .attr('stroke-width', 10)\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-linejoin', 'round');\n\n    backArrowSvg\n      .append('path')\n      .attr('d', 'M 90,50 l -80,0 l 20,-20 M 10, 50 l 20, 20');\n\n    if (depth2Child) {\n      toggleZoomCursor();\n    }\n    let confirmationDialogShown = false;\n    let blurDiv = d3.select('#' + treemapId).append('div')\n      .style('height', '100vh')\n      .style('width', '100vw')\n      .style('max-width', `${width}px`)\n      .attr(\"class\", \"mainDiv\")\n      .style('display', 'inline')\n      .style('left', 0)\n      .style('top', `-100%`)\n      .style('z-index', -1)\n      .style('position', 'absolute');\n    const accessibilitySvg = blurDiv.append('svg')\n      .attr('aria-labelledby', 'visualization-title')\n      .attr('aria-describedby', 'visualization-desc')\n      .attr('height', height)\n      .attr('width', width)\n      .style('position', 'absolute')\n      .style('left', 0)\n      .style('top', 0)\n      .style('z-index', 100)\n      .attr(\"viewBox\", [0, 0, width, height]);\n    let accessibilityCloseBG = accessibilitySvg.append('circle')\n      .attr('filter', `drop-shadow(${dropShadowParams} rgba(0,0,0,0.5))`)\n      .attr('cx', (width - lastY) / 2 + lastY)\n      .attr('cy', yShift + colorPaletteSize / 2)\n      .attr('r', colorPaletteBgRadius)\n      .attr('cursor', 'pointer')\n      .attr('fill', `url(#gradient-${treemapId})`)\n      .on('click', toggleAccessibilityDialog);\n    let accessibilityCloseIcon = accessibilitySvg.append('svg')\n      .attr('x', (width - lastY - colorPaletteSize) / 2 + lastY)\n      .attr('y', yShift)\n      .attr('width', colorPaletteSize)\n      .attr('height', colorPaletteSize)\n      .attr('viewBox', '0 0 30 30')\n      .attr('cursor', 'pointer')\n      .attr('fill', 'none')\n      .attr('stroke', 'black')\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-width', 3);\n    accessibilityCloseIcon.append('path')\n      .attr('d', rejectPath)\n      .on('click', toggleAccessibilityDialog);\n\n    let accessibilityData = [{\n      data: treemapAccessibilityText\n    }];\n\n    let accessibilityFontSizeMin = 14;\n    let accessibilityFontSize = Math.max(accessibilityWidth / 19, accessibilityFontSizeMin);\n    let accessibilityFontLineHeight = accessibilityFontSize === accessibilityFontSizeMin ? 17 : accessibilityFontSize + 2;\n    let accessibilityTextDiv = blurDiv.append('div')\n      .style('text-align', 'center')\n      .style('max-width', `${width}px`)\n      .style('height', `${height}px`)\n      .style('top', '0')\n      .style('position', 'absolute');\n    let accessibilityDialogText = accessibilityTextDiv.selectAll(null)\n      .data(accessibilityData)\n      .join('p')\n      .attr('class', 'accessibilityText')\n      .style('background-image', 'linear-gradient(#eee, #ddd)')\n      .style('margin-inline', `${(2 * colorPaletteSize + (width - lastY) / 2) * 100 / width}%`)\n      .style('padding', `1em`)\n      .style('box-sizing', 'box-border')\n      .style('border-radius', `1em`)\n      .style('max-height', '90%')\n      .style('overflow-y', 'scroll')\n      .attr('tabindex', 1)\n      .html(d => d.data)\n      .style(\"font\", `${accessibilityFontSize}px sans-serif`);\n\n    let accessibilityDialogSVGHeight = 2 * accessibilityDialogPathRadius +\n      accessibilityFontLineHeight * (accessibilityDialogText._groups[0][0].children.length);\n\n    blurDiv\n      .attr('height', accessibilityDialogSVGHeight + 2 * colorPaletteBgRadius);\n    accessibilitySvg\n      .attr('height', accessibilityDialogSVGHeight + 2 * colorPaletteBgRadius + 10)\n      .attr(\"viewBox\", `0 0 ${width} ${accessibilityDialogSVGHeight + 2 * colorPaletteBgRadius + 10}`);\n\n    let clickedTopic = null;\n    let savedTopic = null;\n    let addedTopic = null;\n\n\n    /**\n    * Zooms in on a learning goal, zooms out to the main view\n    * @param {object} _ Click event. Unused.\n    * @param {object} p The clicked d3 node.\n    *\n    */\n    function clicked(_, p) {\n      if (zooming) { return; }\n      if (!isZoomedIn && highlightedGoals && highlightedGoals.includes(p)) {\n        unhighlightLearningGoals();\n      }\n      if (p.depth === 2) { p = p.parent; }\n      clickedTopic = p;\n      if (confirmationDialogShown) { return shakeConfirmationDialog(); }\n      svg.attr(\"viewBox\", [0, 0, width, isZoomedIn ? height : stdHeight]);\n      zooming = true;\n      focus = focus === p ? p = p.parent : p;\n      const appliedHeight = isZoomedIn ? height : stdHeight;\n      root.each(d => {\n        if (!isZoomedIn && isSmallScreen && d.depth === 1) {\n          d.target = {\n            x0: (d.x0 - p.x0) / (p.x1 - p.x0) * appliedHeight,\n            x1: (d.x1 - p.x0) / (p.x1 - p.x0) * appliedHeight,\n            y0: d.y0 - p.y0,\n            y1: isZoomedIn ? d.y1 - p.y0 : d.parent.y1,\n          };\n        }\n        else if (!isZoomedIn && isSmallScreen && d.depth === 2) {\n          d.target = {\n            x0: (d.x0 - p.x0) / (p.x1 - p.x0) * appliedHeight,\n            x1: (d.x1 - p.x0) / (p.x1 - p.x0) * appliedHeight,\n            y0: isZoomedIn ? d.y0 - p.y0 : depth1Child.parent.y1,\n            y1: d.y1 - p.y0,\n          };\n        }\n        else {\n          d.target = {\n            x0: (d.x0 - p.x0) / (p.x1 - p.x0) * appliedHeight,\n            x1: (d.x1 - p.x0) / (p.x1 - p.x0) * appliedHeight,\n            y0: d.y0 - p.y0,\n            y1: d.y1 - p.y0,\n          };\n        }\n      });\n      if (isZoomedIn && isSmallScreen) {\n        root.each(d => {\n          if (d.depth === 2) {\n            d.target.y0 = depth2Child ? depth2Child.y1 : d.target.y0;\n            d.target.y1 = d.target.y0;\n          }\n        });\n      }\n\n\n\n      let t = cell.transition().duration(transitionDuration)\n        .attr(\"transform\", d => `translate(${d.target.y0},${d.target.x0})`);\n\n\n      if (isSmallScreen && isZoomedIn) {\n        addedTopic.transition(t)\n          .attr('opacity', 0)\n          .attr('fill-opacity', 0);\n        text.filter(d => d === clickedTopic)\n          .text('')\n          .append(() => savedTopic.node());\n        text.filter(d => d === clickedTopic).transition().duration(transitionDuration)\n          .style('letter-spacing', 'initial')\n          .style('writing-mode', 'lr')\n          .style('text-orientation', 'initial')\n          .attr('y', d => rectHeight(d) / 2)\n          .attr('x', 4)\n          .style('dominant-baseline', 'initial')\n          .style('text-anchor', 'start')\n          .style(\"font\", d => `${fontSize(d)}px sans-serif`)\n          .end().then(() => maintspan.filter(d => d === clickedTopic)\n            .attr('opacity', 1)\n            .attr('fill-opacity', 1));\n        savedTopic = null;\n        addedTopic = null;\n      }\n      else if (isSmallScreen && !isZoomedIn) {\n        rect.filter(d => d.depth === 2)\n          .attr('display', 'initial');\n        savedTopic = maintspan.filter(d => d === clickedTopic).transition(t)\n          .attr('opacity', 0)\n          .attr('fill-opacity', 0);\n        maintspan.filter(d => d === clickedTopic).remove();\n        addedTopic = text.filter(d => d === clickedTopic).append(\"tspan\")\n          .text(d => d.data.name)\n          .attr('opacity', 0)\n          .attr('fill-opacity', 0)\n          .attr('y', 0)\n          .attr('x', 0)\n          .attr('fill', d => contrastCorrectedColor(d, 0.6, d.depth === 2))\n          .style(\"font\", d => `${rectWidth(d.target) / 2}px sans-serif`)\n          .style('dominant-baseline', 'central')\n          .style('text-anchor', 'middle');\n        text.filter(d => d === clickedTopic)\n          .style('letter-spacing', '.3em')\n          .style('writing-mode', 'vertical-lr')\n          .style('text-orientation', 'upright');\n        setTimeout(() => {\n          fitVerticalTopic();\n          addedTopic.filter(d => d === clickedTopic)\n            .attr('x', d => rectWidth(d.target) / 2)\n            .attr('y', (d, i, n) => rectHeight(d.target) / 2 - n[i].getBBox().width / 2 + 30);\n          addedTopic.transition().duration(300)\n            .attr('opacity', 1)\n            .attr('fill-opacity', 1);\n        }, transitionDuration);\n      }\n      if (isSmallScreen) {\n        toggleLinkButton(linkContainer.filter(d => d === clickedTopic), t, false, !isZoomedIn);\n        toggleLinkButton(linkIconSvg.filter(d => d === clickedTopic), t, true, !isZoomedIn);\n        backArrowSvg.filter(d => d === clickedTopic).transition(t)\n          .attr(\"width\", d => isZoomedIn ? 0 : rectWidth(d.target) * 0.8)\n          .attr(\"height\", d => isZoomedIn ? 0 : rectWidth(d.target) * 0.8)\n          .attr('x', d => isZoomedIn ? 0 : rectWidth(d.target) * 0.1);\n      }\n\n      if (isZoomedIn) {\n        rect.filter(d => d.depth === 0).attr('tabindex', 0);\n        rect.filter(d => d.depth === 2).attr('tabindex', null);\n        setDepth1AriaLabel();\n      }\n      else {\n        rect.filter(d => d.depth === 2 && d.parent === p).attr('tabindex', 0);\n        rect.filter(d => d.depth === 0).attr('tabindex', null);\n        rect.filter(d => d.depth === 1 && d !== p).attr('tabindex', null);\n        rect.filter(d => d.depth === 1 && d === p)\n          .attr('aria-label', d => {\n            let content = `Topic ${d.data.name}. Progress ${parseInt(computeProgress(d) * 100)}%.`;\n            if ('children' in d) {\n              content += `${d.children.length} learning goal${d.children.length > 1 ? 's' : ''}, ` +\n                `press enter to go back to the topic view. Use tab to navigate through it.`;\n            }\n            content += `${d.data.link ? 'External link is available, press control and enter to open it.' : ' '}`;\n            return content;\n          });\n      }\n      rect.transition(t)\n        .attr(\"height\", d => !isZoomedIn ? rectHeight(d.target) : d.x1 - d.x0)\n        .attr(\"width\", d => {\n          if (!isZoomedIn) { return rectWidth(d.target); }\n          if (d.depth < 2 || !isSmallScreen) { return d.y1 - d.y0; }\n          return 0;\n        });\n\n      toggleLinkButton(linkContainer.filter(d => d.depth === 2), t, false, isZoomedIn);\n      toggleLinkButton(linkIconSvg.filter(d => d.depth === 2), t, true, isZoomedIn);\n\n      learningGoalProgressBar.transition(t)\n        .attr('y', d => isZoomedIn ? 0 : rectHeight(d.target) - learningGoalProgressBarHeight(d))\n        .attr('height', d => learningGoalProgressBarHeight(d))\n        .attr(\"width\", d => {\n          if (isZoomedIn && isSmallScreen) { return 0; }\n\n          let progress = computeProgress(d);\n          if (isZoomedIn) { return rectWidth(d) * progress; }\n          if (!isZoomedIn && isSmallScreen) {\n            return computeLearningGoalProgressBarWidth(d, progress);\n          }\n          return computeLearningGoalProgressBarWidth(d);\n        });\n      moveTopicProgress(t);\n\n      let timeDiff = 100;\n      const currentZoomState = isZoomedIn;\n      for (let i = 0; i < highestNumberChildren; i++) {\n        let newDuration = transitionDuration + timeDiff * i;\n        let newT = d3.transition().duration(newDuration);\n        resetSlider((d) => d.parent.children.indexOf(d) === i, newT, isZoomedIn);\n\n        // In order to silence grunt, and to improve performance,\n        // these functions are defined outside the following loop, instead of using anonymous functions.\n\n        const\n          xAttrSvg = d => {\n            if (currentZoomState && !isSmallScreen) { return d.proY0; }\n            if (currentZoomState && isSmallScreen) { return 0; }\n            let newVal = computeCircleContainerXPosition(d);\n            return d.data.pro === 100 ? newVal + 1 : newVal;\n          },\n        yAttrSvg = d => currentZoomState ? (rectHeight(d) - sliderSize(d)) / 2 : computeCircleContainerYPosition(d, true),\n        widthHeightAttr = d => currentZoomState ? sliderSize(d) : circleEnlargeFactor * sliderSize(d);\n\n        const\n          xAttrText = d => {\n            if (currentZoomState && !isSmallScreen) {\n              return d.proY0 + sliderSize(d) / 2;\n            }\n            if (currentZoomState && isSmallScreen) {\n              return sliderSize(d) / 2;\n            }\n            let newVal = computeCircleTextXPosition(d);\n            return d.data.pro === 100 ? newVal + 1 : newVal;\n          },\n          yAttrText = d => currentZoomState ? rectHeight(d) / 2 : rectHeight(d.target) - 4.5,\n          content = d => d.data.pro + (!currentZoomState || sliderTextShowPercent(d) ? '%' : ''),\n          font = (d) => `${sliderTextSize(d, currentZoomState)}px sans-serif`;\n        sliderSvg.filter(d => d.parent.children.indexOf(d) === i).transition(newT)\n          .attr('x', xAttrSvg)\n          .attr('y', yAttrSvg)\n          .attr('width', widthHeightAttr)\n          .attr('height', widthHeightAttr)\n          .attr('cursor', isZoomedIn ? '' : 'pointer');\n        sliderText.filter(d => d.parent.children.indexOf(d) === i).transition(newT)\n          .attr('dominant-baseline', isZoomedIn ? 'central' : 'auto')\n          .attr(\"x\", xAttrText)\n          .attr('y', yAttrText)\n          .text(content)\n          .style('font', font);\n      }\n      sliderPath.transition(t).attr('d', isZoomedIn ? `M 50 50 m 49, 0 a 49,49 0 1,0 -98,0 a 49,49 0 1,0 98,0` :\n        `M 50 100 m 49, 0 a 49,49 0 1,0 -98,0 a 49,49 0 1,0 98,0`);\n\n\n      isZoomedIn = !isZoomedIn;\n      maintspan.filter(d => d.depth > 0).transition('hideText').duration(hideTextDuration)\n        .style('fill-opacity', 0)\n        .style('opacity', 0).end().then(() => {\n          maintspan.filter(d => d.depth > 0)\n            .style(\"font\", d => `${fontSize(d)}px sans-serif`);\n        });\n      maintspan.filter(d => d.depth > 0).transition(\"reduceWidth\").duration(transitionDuration)\n        .attr(\"width\", d => d.target.y1 - d.target.y0).end().then(() => {\n          text.filter(d => d.depth === 2)\n            .attr('display', 'initial');\n          toggleZoomCursor();\n          if (!isZoomedIn) {\n            // Zooming out\n            maintspan.filter(d => d.depth === 2)\n              .call(truncateText, depth2Width * 0.95, true);\n            maintspan.filter(d => d.depth === 1)\n              .call(\n                wrapText,\n                (depth1Width - mainCircleWidth - 3 * topicCellPadding),\n                false,\n                (el) => rectHeight(el.target),\n                topicCellPadding);\n          }\n          else if (isSmallScreen) {\n            // Zooming in\n            maintspan.filter(d => d.depth === 2)\n              .style(\"opacity\", 1)\n              .style(\"fill-opacity\", 1);\n            maintspan.filter(d => d.depth === 2)\n              .call(\n                wrapText,\n                (rectWidth(depth2Child.target) - 2 * topicCellPadding),\n                false,\n                (el) => {\n                  return computeCircleContainerYPosition(el, true) -\n                    circleEnlargeFactor * sliderSize(el) / 4;\n                },\n                topicCellPadding);\n\n            maintspan.filter(d => d.depth === 1)\n              .call(\n                wrapText,\n                (depth1Width - 2 * topicCellPadding),\n                false,\n                (el) => {\n                  return rectHeight(el.target) -\n                    4 * topicProgressSizeFactor() * mainCircleRadius;\n                },\n                topicCellPadding);\n          }\n          else {\n            // Zooming in\n            maintspan.filter(d => d.depth === 2)\n              .call(\n                wrapText,\n                (depth2Width - 2 * topicCellPadding),\n                false,\n                (el) => {\n                  return computeCircleContainerYPosition(el, true) +\n                    circleEnlargeFactor * sliderSize(el) / 4;\n                },\n                topicCellPadding);\n\n            maintspan.filter(d => d.depth === 1)\n              .call(\n                wrapText,\n                (depth1Width - 2 * topicCellPadding),\n                false,\n                (el) => {\n                  return rectHeight(el.target) -\n                    4 * topicProgressSizeFactor() * mainCircleRadius;\n                },\n                topicCellPadding);\n          }\n          if (!isSmallScreen) {\n            maintspan.filter(d => d.depth > 0).transition().duration(hideTextDuration)\n              .style('fill-opacity', 1)\n              .style('opacity', 1).end().then(() => { zooming = false; });\n          } else {\n            maintspan.filter(d => d.depth === 1).transition().duration(hideTextDuration)\n              .style('fill-opacity', 1)\n              .style('opacity', 1).end().then(() => { zooming = false; });\n            if (isZoomedIn) {\n              maintspan.filter(d => d.depth === 2).transition().duration(hideTextDuration)\n                .style('fill-opacity', 1)\n                .style('opacity', 1).end().then(() => { zooming = false; });\n            }\n          }\n        });\n      if (!isZoomedIn) {\n        maintspan.filter(d => d.depth === 2).transition('resetChild2Align').duration(transitionDuration)\n          .attr('y', d => rectHeight(d.target) / 2);\n      }\n      maintspan.filter(d => d.depth === 0).transition('resetTitlePos').duration(transitionDuration)\n        .attr('y', d => rectHeight(d.target) / 2);\n    }\n    /**\n    * Creates a color ramp, given its name and index\n    * @param {string} name Name of the colorscheme\n    * @param {int} colorschemeIndex Index of the colorscheme\n    * @returns {Array} list with d3 colors\n    */\n    function ramp(name, colorschemeIndex) {\n      let colors;\n      let n = data.children.length + 2;\n      let interpolate = null;\n      if (name in additionalColors) {\n        interpolate = d3.interpolateRgbBasis(additionalColors[name]);\n      } else {\n        interpolate = d3[`interpolate${name}`];\n      }\n      colors = [];\n      for (let i = 0; i < n - 1; ++i) {\n        let colorArray = parseRGB(interpolate(i / (n - 1)));\n        let correctedColor = convertRGBAtoRGB(colorArray, 'white', 0.6, true);\n        colors.push({ index: i, parentIndex: colorschemeIndex, colorscheme: name, color: d3.rgb(correctedColor).hex() });\n      }\n      return colors;\n    }\n    /**\n    * Computes which color a text should have given the background\n    * @param {Object} element Element where the text should be, used to derive the bg color\n    * @param {float} alpha Alpha of the background color\n    * @param {bool} isDoubled Whether the element is on top of another element with the same bg color\n    * @returns {string} Color that the text should have\n    */\n    function contrastCorrectedColor(element, alpha, isDoubled) {\n      let bgColor = color(element.depth === 2 ? element.parent.data.name : element.data.name);\n      let rgba = parseRGB(bgColor);\n      let rgb = convertRGBAtoRGB(rgba, 'white', alpha);\n      let doubledRgb = convertRGBAtoRGB(rgba, rgb, alpha);\n      let L1 = computeLuminance(rgb);\n      let L2 = computeLuminance(doubledRgb);\n      let black = [0, 0, 0];\n      let white = [240, 240, 240];\n\n      let blackLuminance = computeLuminance(black);\n      let whiteLuminance = computeLuminance(white);\n      let contrastWhite = computeContrastRatio(whiteLuminance, L1);\n      let contrastBlack = computeContrastRatio(L1, blackLuminance);\n      let contrastWhiteDoubled = computeContrastRatio(whiteLuminance, L2);\n      let contrastBlackDoubled = computeContrastRatio(L2, blackLuminance);\n      if (!isDoubled) {\n        return contrastWhite > contrastBlack ? 'rgb(240, 240, 240)' : 'black';\n      }\n      return contrastWhiteDoubled > contrastBlackDoubled ? 'rgb(240, 240, 240)' : 'black';\n    }\n    /**\n    * Changes the focus of a link element\n    * @param {object} p Element where the link element lies\n    * @param {object} el Link element to resize\n    * @param {bool} isFocused Whether the size should be increased or decreased\n    */\n    function changeLinkFocus(p, el, isFocused) {\n      if (zooming || !el || (isFocused && linkEnlarged) || (!isFocused && !linkEnlarged) || resizingLink) {\n        return;\n      }\n      if (isFocused) { linkEnlarged = true; }\n\n      resizingLink = true;\n      let t = cell.transition().duration(300);\n      resizeLinkElement(linkContainer.filter(d => d === p),\n        isFocused ? linkContainerSize * focusLinkFactor : linkContainerSize, t);\n      resizeLinkElement(linkIconSvg.filter(d => d === p),\n        isFocused ? linkIconSize * focusLinkFactor : linkIconSize, t)\n        .end()\n        .then(() => {\n          resizingLink = false;\n          if (!isFocused) { linkEnlarged = false; }\n        });\n    }\n    /**\n    * Resizes an svg element\n    * @param {object} element Element to resize\n    * @param {float} size Size the element should have\n    * @param {object} trans Transition to apply\n    * @returns {object} Returns the element for chaining\n    */\n    function resizeLinkElement(element, size, trans) {\n      return element.transition(trans)\n        .attr('width', size)\n        .attr('height', size);\n    }\n    /**\n    * Computes the progress of a topic\n    * @param {object} d Topic\n    * @returns {float} Average progress of the topic\n    */\n    function computeProgress(d) {\n      if ('pro' in d.data) { return d.data.pro / 100; }\n      let percent = 0;\n      d.data.children.forEach((child) => { percent += child.pro; });\n      if (!d.data.children.length) { return 0; }\n      return percent / d.data.children.length / 100;\n    }\n\n    /**\n    * Shows or hides an element\n    * @param {object} el Element to toggle\n    * @param {object} trans Transition to use\n    * @param {bool} isIcon Whether it is the icon or the svg container\n    * @param {bool} hide Whether the icon should be shown or not\n    */\n    function toggleLinkButton(el, trans, isIcon, hide) {\n      let size = isIcon ? linkIconSize : linkContainerSize;\n      let viewBox = isIcon ? 23 : linkContainerSize;\n      el.transition(trans)\n        .attr(\"width\", hide ? 0 : size)\n        .attr(\"height\", hide ? 0 : size)\n        .attr('viewBox', `0 0 ${viewBox} ${viewBox}`);\n    }\n\n    /**\n    * Truncates the text of an element so that it fits into the parent\n    * @param {object} text List of texts to truncate\n    * @param {float} width Max width the text can have\n    * @param {bool} begin Whether it is the initial state\n    */\n    function truncateText(text, width, begin = false) {\n      text.each(function() {\n        var text = d3.select(this),\n          line = text.data()[0].data.name.split(/\\s+/),\n          x = text.attr(\"x\"),\n          tspan = text.text(null)\n            .append(\"tspan\")\n            .attr(\"x\", x)\n            .attr(\"dy\", \"0em\"),\n          depth = text.data()[0].depth;\n        tspan.text(line.join(\" \"));\n        let currentWidth = depth < 2 ? width * 2.3 : width * 1.35;\n        if (begin) { currentWidth = width; }\n\n        if (tspan.node().getComputedTextLength() > currentWidth) {\n          line.pop();\n          line.push(' ...');\n          tspan.text(line.join(\" \"));\n        }\n        while (tspan.node().getComputedTextLength() > currentWidth) {\n          line.pop();\n          line.pop();\n          line.push(' ...');\n          tspan.text(line.join(\" \"));\n        }\n      });\n    }\n\n    /**\n    * Truncates the title if it is too big\n    * @param {object} rootText Element where the text is\n    * @param {object} rootNode Parent of the rootText\n    * @param {object} rootTspan Tspan of title element\n    * @param {float} padding Padding the text should have\n    */\n    function truncateTitle(rootText, rootNode, rootTspan, padding = 0) {\n      let originalText = widgetTitle;\n      while (rootText.getBBox().height + 2 * padding >= rootNode.querySelector('.rect').getBBox().height) {\n        originalText = originalText.substring(0, originalText.length - 1);\n        rootTspan.html(originalText + U_ELLIPSIS);\n        if (originalText.length < 1) {\n          break;\n        }\n      }\n    }\n\n    /**\n    * Wraps the text to a newline if it doesn't fit inside its parent\n    * @param {object} element List of elements where the text should be wrapped\n    * @param {float} width Max width of the text\n    * @param {bool} dynamicResizing Whether to use dynamicResizing of the text\n    * @param {func} computeMaxHeight Function to compute the max height\n    * @param {float} padding Padding the text should have\n    * @param {int} retryN Counter to avoid unlimited recursion\n    */\n    function wrapText(element, width, dynamicResizing, computeMaxHeight, padding = 0, retryN = 0) {\n      let retry = false;\n      let elDepth = 0;\n      element.each(function() {\n        var text = d3.select(this),\n          nodeData = text.data()[0],\n          words = nodeData.data.name.split(/\\s+/).reverse().filter(el => el), // filter to remove empty strings\n          word,\n          line = [],\n          lineHeight = fontSize(nodeData), // ems\n          tspan = text.text(null)\n            .append(\"tspan\")\n            .attr('text-anchor', 'middle')\n            .attr('x', 0)\n            .attr('dx', 0),\n          depth = nodeData.depth,\n          added = [],\n          textNode = text._groups[0][0],\n          currentWidth = width;\n        let maxHeight = computeMaxHeight(nodeData);\n        elDepth = nodeData.depth;\n        if (dynamicResizing) {\n          lineHeight /= (nodeData.depth === 1 ? 25 : 8) + 4;\n          if (depth === 0) {\n            currentWidth = 1;\n            words = nodeData.data.name.split('').reverse();\n          }\n          else if (depth === 1) { currentWidth *= 0.4; }\n          else { currentWidth *= 0.8; }\n        }\n\n        while ((word = words.pop())) {\n          line.push(word);\n          added.push(word);\n          tspan.html(line.join(\" \"));\n          if (!isZoomedIn && nodeData.depth === 1 &&\n            tspan.node().getComputedTextLength() > depth1Width - mainCircleWidth - 1.5 * topicCellPadding &&\n            line.length === 1) {\n            retry = true;\n          }\n          else if (tspan.node().getComputedTextLength() > currentWidth && line.length > 1) {\n            line.pop();\n            //If text too long add ... and break\n            if (textNode.getBoundingClientRect().height + 2 * lineHeight > maxHeight) {\n              line.pop();\n              line.push(U_ELLIPSIS); // unicode for ellipsis ...\n              tspan.html(line.join(\" \"));\n              break;\n            }\n            tspan.text(line.join(\" \"));\n            line = [word];\n            tspan = text.append(\"tspan\")\n              .attr(\"dy\", lineHeight + \"px\")\n              .attr('text-anchor', 'middle')\n              .attr('x', 0)\n              .html(word);\n          }\n        }\n        text.attr('y', (maxHeight - lineHeight * (text.node().childNodes.length - 1.5)) / 2);\n\n        let someLineNonEmpty = false;\n        for (let child of text.node().childNodes) {\n          d3.select(child).attr('x', padding + width / 2);\n          if ((nodeData.depth === 1 && child.getComputedTextLength() > width + 1.5 * topicCellPadding ||\n            child.getBBox().height > rect.filter(d => d === nodeData).node().getBBox().height)\n            && !isZoomInDisabled) {\n            allElementSmallEnough = false;\n            disableZoomIn();\n          } else if (nodeData.depth === 1 && child.getComputedTextLength() > width + 1.5 * topicCellPadding) {\n            allElementSmallEnough = false;\n          } else if (d3.select(child).html() !== String.fromCharCode(ELLIPSIS_CODE)) {\n            someLineNonEmpty = true;\n          }\n        }\n        if (nodeData.depth === 1 && !someLineNonEmpty && !isZoomInDisabled) {\n          zoomOutText().then(() => {\n            allElementSmallEnough = false;\n            disableZoomIn();\n          });\n        }\n      });\n      // Avoid unlimited recursion\n      if (elDepth === 1 && retry && retryN < 50) {\n        currentTextZoom -= zoomDelta;\n        maintspan.style(\"font\", d => `${fontSize(d)}px sans-serif`);\n        return wrapText(element,\n          width,\n          dynamicResizing,\n          computeMaxHeight,\n          padding,\n          retryN + 1);\n      }\n      if (allElementSmallEnough && isZoomInDisabled) {\n        enableZoomIn();\n      }\n    }\n\n\n    /**\n    * Toggles the zoom in button\n    * @param {bool} new_val New value of isZoomInDisabled\n    */\n    function toggleZoomIn(new_val) {\n      zoomRightHalfSvg.attr('cursor', !isZoomInDisabled ? 'default' : 'pointer')\n        .on('click', !isZoomInDisabled ? null : zoomInText);\n      zoomRightHalf.attr('fill', !isZoomInDisabled ? '#ababab' : `url(#gradient-${treemapId})`);\n      isZoomInDisabled = new_val;\n    }\n\n    /**\n    * Wrapper for toggleZoomIn, disables the zoom in button\n    */\n    function disableZoomIn() {\n      toggleZoomIn(true);\n    }\n    /**\n    * Wrapper for toggleZoomIn, enables the zoom in button\n    */\n    function enableZoomIn() {\n      toggleZoomIn(false);\n    }\n\n    /**\n    * Creates an svg element, that is used on the top left corner of each rect, where the link icon is\n    * @param {bool} isIcon Whether it is the icon or the container element\n    * @returns {object} The created element\n    */\n    function createElement(isIcon) {\n      // This function creates an svg element, that is used on the top left corner of each rect, where the link icon is\n      let size = isIcon ? linkIconSize : linkContainerSize;\n      let viewBox = isIcon ? 23 : linkContainerSize;\n      let element = linkContainerG\n        .append(\"svg\")\n        .attr(\"width\", d => d.depth === 1 ? size : 0)\n        .attr(\"height\", d => d.depth === 1 ? size : 0) // On purpose same size\n        .attr('viewBox', `0 0 ${viewBox} ${viewBox}`)\n        .attr('x', isIcon ? 1 : 0)\n        .attr('y', isIcon ? 1 : 0)\n        .attr('class', isIcon ? 'linkIconSvg' : '')\n        .attr(\"fill-opacity\", isIcon ? 0 : 0.6)\n        .attr(\"stroke-opacity\", d => contrastCorrectedColor(d, 0.7, true) === 'white' ? 1 : 0.5)\n        .attr('stroke', d => isIcon ? contrastCorrectedColor(d, 0.7, true) : 'none')\n        .attr('stroke-width', 2)\n        .attr('stroke-linecap', 'round')\n        .attr('stroke-linejoin', 'round')\n        .attr('transform', '')\n        .attr('cursor', 'pointer')\n        .attr(\"fill\", d => {\n          if (isIcon) { return 'none'; }\n          return color(d.depth > 1 ? d.parent.data.name : d.data.name);\n        });\n      return element;\n    }\n\n    /**\n    * Returns an svg string for a drop shape, with a rounded bottom right corner\n    * @param {float} radius Radius of the rounded corner\n    * @returns {string} The svg string\n    */\n    function roundedRect(radius) {\n      return \"M0,0\"\n        + \"h\" + (radius)\n        + \"a\" + radius + \",\" + radius + \" 0 0 1 \" + -radius + \",\" + radius\n        + \"z\";\n    }\n\n    let colorschemesOpened = false;\n    /**\n    * Open and closes the colorscheme list\n    */\n    function toggleColorSchemes() {\n      if (!isSmallScreen) {\n        colorPaletteBg.transition().duration(100).attr('fill', '#fefefe')\n          .end().then(() => colorPaletteBg.transition().duration(100).attr('fill', `url(#gradient-${treemapId})`));\n      }\n      let tempWidth = 0;\n      let delay = 100;\n      let hTransDuration = 500;\n      let vTransDuration = 1000;\n      if (colorschemesOpened) {\n        tempWidth = colorSchemeHolderHeight;\n        colorSchemeSamplePath.transition().ease(d3.easeExp).duration(d => hTransDuration + d.index * delay)\n          .attr(\n            'd',\n            roundedCornersRect(colorSchemeHolderWidth,\n              colorSchemeHolderHeight,\n              tempWidth,\n              colorSchemeHolderHeight,\n              cornerRadius\n            )\n          );\n        colorSchemeBox.transition().ease(d3.easeExp).duration(d => hTransDuration + d.parentIndex * delay)\n          .attr('x', (colorSchemeHolderWidth - colorBoxWidth) / 2)\n          .end()\n          .then(() => {\n            colorSchemeSample.transition().ease(d3.easeExp).duration(d => vTransDuration / 2 + d.index * delay)\n              .attr('y', yShift + colorPaletteSize / 2 - colorSchemeHolderHeight / 2)\n              .attr('x', (width - lastY - colorSchemeHolderWidth) / 2 + lastY);\n          });\n      }\n      else {\n        tempWidth = colorSchemeHolderWidth;\n        colorSchemeSample.transition().ease(d3.easeBack).duration(d => vTransDuration + d.index * delay)\n          .attr('y', d => {\n            if (useDoubleColumnColorScheme) {\n              return yShift + 2 * colorPaletteBgRadius +\n                (colorSchemeHolderHeight + 10) * (d.index % Math.ceil(colorSchemesNames.length / 2));\n            }\n            return yShift + 2 * colorPaletteBgRadius + (colorSchemeHolderHeight + 10) * d.index;\n          })\n          .attr('x', d => {\n            if (useDoubleColumnColorScheme) {\n              return d.index < Math.ceil(colorSchemesNames.length / 2) ? (width - lastY) / 4 + lastY - colorSchemeHolderWidth / 2 :\n                (width - lastY) * 3 / 4 + lastY - colorSchemeHolderWidth / 2;\n            }\n            return (width - lastY - colorSchemeHolderWidth) / 2 + lastY;\n          })\n          .end()\n          .then(() => {\n            colorSchemeSamplePath.transition().ease(d3.easeExp).duration(d => hTransDuration + d.index * delay)\n              .attr(\n                'd',\n                roundedCornersRect(colorSchemeHolderWidth,\n                  colorSchemeHolderHeight,\n                  tempWidth,\n                  colorSchemeHolderHeight,\n                  cornerRadius\n                )\n              );\n            colorSchemeBox.transition().ease(d3.easeExp).duration(d => hTransDuration + d.parentIndex * delay)\n              .attr('x', d => cornerRadius + d.index * colorBoxWidth);\n          });\n      }\n      colorschemesOpened = !colorschemesOpened;\n\n    }\n    /**\n    * Gets the colorscheme to use. If one is saved in localStorage, that is used\n    * otherwise the default 'Rainbow'\n    */\n    function getColorScheme() {\n      let savedColorschemes = localStorage.getItem(colorschemeStorageName);\n      let name = '';\n      if (!savedColorschemes) {\n        name = 'Rainbow';\n        let newObj = {};\n        newObj[treemapId] = name;\n        localStorage.setItem(colorschemeStorageName, JSON.stringify(newObj));\n      }\n      else {\n        try {\n          savedColorschemes = JSON.parse(savedColorschemes);\n          if (!(treemapId in savedColorschemes) || !colorSchemesNames.includes(savedColorschemes[treemapId])) {\n            savedColorschemes[treemapId] = \"Rainbow\";\n            localStorage.setItem(colorschemeStorageName, JSON.stringify(savedColorschemes));\n          }\n          name = savedColorschemes[treemapId];\n        } catch (e) {\n          name = \"Rainbow\";\n        }\n      }\n\n      let interpolate = null;\n      if (name in additionalColors) {\n        interpolate = d3.interpolateRgbBasis(additionalColors[name]);\n      } else { interpolate = d3[`interpolate${name}`]; }\n\n      return interpolate;\n    }\n\n    /**\n    * Changes the chosen colorscheme\n    * @param {string} name Name of the chosen colorscheme\n    */\n    function changeColorScheme(name) {\n      let savedColorschemes;\n\n      try {\n        savedColorschemes = localStorage.getItem(colorschemeStorageName);\n        if (!savedColorschemes) { savedColorschemes = {}; }\n        else { savedColorschemes = JSON.parse(savedColorschemes); }\n      } catch (e) {\n        savedColorschemes = {};\n      }\n      savedColorschemes[treemapId] = name;\n      localStorage.setItem(colorschemeStorageName, JSON.stringify(savedColorschemes));\n      let interpolate = null;\n      if (name in additionalColors) {\n        interpolate = d3.interpolateRgbBasis(additionalColors[name]);\n      } else { interpolate = d3[`interpolate${name}`]; }\n\n      color = d3.scaleOrdinal(d3.quantize(interpolate, data.children.length + 2));\n      let t = d3.transition().duration(300);\n      rect.transition(t).attr(\"fill\", d => {\n        if (!d.depth) { return color(d.data.name); }\n        while (d.depth > 1) { d = d.parent; }\n        return color(d.data.name);\n      });\n      learningGoalProgressBar.transition(t).attr(\"fill\", d => color(d.parent.data.name));\n      linkContainer.transition(t).attr(\"fill\", d => {\n        return color(d.depth > 1 ? d.parent.data.name : d.data.name);\n      });\n      linkContainer.style('filter', d => {\n        let alphaArray = parseRGB(color(d.depth === 1 ? d.data.name : d.parent.data.name));\n        alphaArray.push(0.8);\n        return `drop-shadow(${dropShadowParams} ${convertRGBArrayToString(alphaArray)})`;\n      });\n      linkIconSvg.transition(t)\n        .attr('stroke', d => contrastCorrectedColor(d, 0.7, true))\n        .attr('stroke-opacity', d => contrastCorrectedColor(d, 0.7, true) === 'white' ? 1 : 0.5);\n      sliderSvg.transition(t).attr('fill', d => color(d.parent.data.name));\n      sliderText.transition(t).attr('fill', d => contrastCorrectedColor(d, 1, false));\n      sliderAcceptSvg.transition(t).attr('fill', d => color(d.parent.data.name, 1, false));\n      sliderRejectSvg.transition(t).attr('fill', d => color(d.parent.data.name, 1, false));\n      sliderRejectIcon.transition(t).attr('stroke', d => contrastCorrectedColor(d, 1, false));\n      sliderAcceptIcon.transition(t).attr('stroke', d => contrastCorrectedColor(d, 1, false));\n      topicProgressContainerBG\n        .style('filter', d => {\n          let alphaArray = parseRGB(color(d.data.name));\n          alphaArray.push(0.8);\n          return `drop-shadow(${dropShadowParams} ${convertRGBArrayToString(alphaArray)})`;\n        });\n      topicProgressContainerBG.transition(t)\n        .attr('stroke', d => convertRGBAtoRGB(color(d.data.name), 'black', 0.8, true))\n        .attr('fill', d => {\n          let baseColor = color(d.data.name);\n          let bgColor = convertRGBAtoRGB(baseColor, 'white', 0.6);\n          return convertRGBAtoRGB(color(d.data.name), bgColor, 0.4, true);\n        });\n      topicProgressContainer.transition(t)\n        .attr('fill', d => convertRGBAtoRGB(color(d.data.name), 'black', 0.94, true));\n      topicProgressTextSvg.transition(t)\n        .attr('stroke', d => convertRGBAtoRGB(color(d.data.name), 'black', 0.8, true))\n        .attr('fill', d => convertRGBAtoRGB(color(d.data.name), 'white', 0.6, true));\n      topicProgressText.transition(t)\n        .attr('fill', d => contrastCorrectedColor(d, 0.6, false));\n\n      maintspan.transition(t)\n        .attr('fill', d => {\n          return contrastCorrectedColor(d, 0.6, d.depth === 2);\n        });\n\n\n    }\n    /**\n    * Returns an svg string for a rectangle with rounded corners\n    * @param {float} viewBoxWidth viewBoxWidth\n    * @param {float} viewBoxHeight viewBoxHeight\n    * @param {float} width Width of the rectangle\n    * @param {float} height Height of the rectangle\n    * @param {float} radius Radius of the rounded corners\n    * @returns {string} The svg string\n    */\n    function roundedCornersRect(viewBoxWidth, viewBoxHeight, width, height, radius) {\n      return `M ${viewBoxWidth / 2},${(viewBoxHeight - height) / 2}\n             h ${width / 2 - radius}\n             a ${radius} ${radius} 0 0 1 ${radius} ${radius}\n             v ${height - 2 * radius}\n             a ${radius} ${radius} 0 0 1 ${-radius} ${radius}\n             h ${-(width - 2 * radius)}\n             a ${radius} ${radius} 0 0 1 ${-radius} ${-radius}\n             v ${-(height - 2 * radius)}\n             a ${radius} ${radius} 0 0 1 ${radius} ${-radius} z`;\n    }\n\n    /**\n    * Appends a circle path with a whole\n    * @param {object} element Element to append the path to\n    * @param {float} cx Center x of the circle\n    * @param {float} cy Center y of the circle\n    * @param {float} radius Radius of the circle\n    * @param {float} innerRadiusFactor Ratio of the inner circle\n    * @returns {object} The element for chaining\n    */\n    function appendEmptyCirclePath(element, cx, cy, radius, innerRadiusFactor) {\n      return element.append('path')\n        .attr('d', `M ${cx},${cy} A ${radius} ${radius} 0 1 0 ${cx} ${cy + 2 * radius} ` +\n          `A ${radius} ${radius} 0 1 0 ${cx} ${cy} Z M ${cx} ${cy + radius / innerRadiusFactor} ` +\n          `A ${radius / innerRadiusFactor} ${radius / innerRadiusFactor} 0 1 1 ${cx} ${cy + 3 * radius / innerRadiusFactor} ` +\n          `A ${radius / innerRadiusFactor} ${radius / innerRadiusFactor} 0 1 1 ${cx} ${cy + radius / innerRadiusFactor} Z`);\n    }\n\n    let magnifyIncrease = depth2Child ? sliderSize(depth2Child) / 3.6 : 1;\n    /**\n    * Perform changes when slider is moved\n    * @param {event} e Mouse move event\n    */\n    function performChanges(e) {\n      if (!isZoomedIn || !changingProgress || !objectToMove) { return; }\n\n      let svgP = null;\n      let xValue = null;\n      sliderSvg.filter(d => d === objectToMove).attr('x', (d, idx, nodes) => {\n        let parent = nodes[idx].parentElement.parentElement;\n        let parentRightBorder = parent.childNodes[0].getBoundingClientRect().right;\n        let parentLeftBorder = parent.childNodes[0].getBoundingClientRect().left;\n        let currentAttribute = parseFloat(d3.select(nodes[idx]).attr('x'));\n        if (e.clientX > parentRightBorder || e.clientX < parentLeftBorder) {\n          currentProgress = e.clientX > parentRightBorder ? 100 : 0;\n          if (e.clientX < parentLeftBorder) { currentAttribute = 0; }\n          else {\n            currentAttribute = circleContainerBarWidth(d, -magnifyIncrease) + 1;\n          }\n          xValue = currentAttribute;\n          return currentAttribute;\n        }\n        const pt = d3.select('#' + treemapId).select('svg').node().createSVGPoint();\n        pt.x = e.clientX;\n        svgP = pt.matrixTransform(d3.select('#' + treemapId).select('svg').node().getScreenCTM().inverse());\n        let val = currentAttribute - lastMousePosition + svgP.x;\n\n        lastMousePosition = svgP.x;\n        let barWidth = circleContainerBarWidth(d, -magnifyIncrease);\n        if (val < 0) { val = 0; }\n        if (val > barWidth) { val = barWidth + 1; }\n        currentProgress = parseInt(val * 100 / barWidth);\n        xValue = val;\n        return val;\n      });\n      learningGoalProgressBar.filter(d => d === objectToMove)\n        .attr(\"width\", d => computeLearningGoalProgressBarWidth(d, currentProgress / 100));\n      sliderText.filter(d => d === objectToMove)\n        .text(currentProgress + '%')\n        .attr(\"x\", d => {\n          return xValue + circleEnlargeFactor * sliderSize(d) / 2 + magnifyIncrease / 2;\n        });\n      sliderAcceptSvg.filter(d => d === objectToMove).attr('x', d => xValue - circleEnlargeFactor * sliderSize(d));\n      sliderRejectSvg.filter(d => d === objectToMove).attr('x', d => xValue - circleEnlargeFactor * sliderSize(d));\n      topicProgressText.filter(d => d === objectToMove.parent)\n        .text(d => {\n          let oldPro = objectToMove.data.pro;\n          objectToMove.data.pro = currentProgress;\n          let newVal = `${parseInt(computeProgress(d) * 100)}%`;\n          objectToMove.data.pro = oldPro;\n          return newVal;\n        });\n      topicProgressPie.filter(d => d === objectToMove.parent)\n        .attr('d', d => {\n          let oldPro = objectToMove.data.pro;\n          objectToMove.data.pro = currentProgress;\n          let angle = 2 * Math.PI * computeProgress(d);\n          objectToMove.data.pro = oldPro;\n          if (angle === 2 * Math.PI) { return `M 50 50 m 49, 0 a 49,49 0 1,0 -98,0 a 49,49 0 1,0 98,0 `; }\n          let sin = Math.sin(angle);\n          let cos = Math.cos(angle);\n          return `M 50 50 v -49 A 49,49 0 ${angle >= Math.PI ? 1 : 0},1 ${sin * 49 + 50} ${-cos * 49 + 50} L 50 50 z`;\n        });\n\n    }\n    /**\n    * Starts moving the slider with the mouse\n    * @param {event} e Mouse down event\n    * @param {object} d Clicked element\n    */\n    function startChangingProgress(e, d) {\n      if (!isZoomedIn) { return; }\n      if (highlightedGoals && highlightedGoals.includes(d)) { unhighlightLearningGoals(); }\n      if (confirmationBoxesActive && confirmationDialogShown && d !== objectToMove) {\n        return shakeConfirmationDialog();\n      }\n      const pt = d3.select('#' + treemapId).select('svg').node().createSVGPoint();\n      pt.x = e.clientX;\n      const svgP = pt.matrixTransform(d3.select('#' + treemapId).select('svg').node().getScreenCTM().inverse());\n      objectToMove = d;\n      currentProgress = d.data.pro;\n      changingProgress = true;\n      lastMousePosition = svgP.x;\n      svg.on('mousemove', e => performChanges(e))\n        .on('mouseup', stopChangingProgress);\n    }\n    /**\n    * Stops moving the slider with the mouse, toggles the confirmation dialogs\n    */\n    function stopChangingProgress() {\n      if (!isZoomedIn || !changingProgress) { return; }\n      changingProgress = false;\n      if (Math.abs(currentProgress - objectToMove.data.pro) < 0.01) {\n        return;\n      }\n      svg.on('mousemove', null)\n        .on('mouseup', null);\n      if (confirmationBoxesActive) {\n        confirmationDialogShown = true;\n        toggleConfirmationDialog();\n      } else {\n        acceptChanges();\n      }\n    }\n\n    let finalizingChanges = false;\n    /**\n    * Toggles the confimation dialogs\n    */\n    function toggleConfirmationDialog() {\n      finalizingChanges = true;\n      let t = d3.transition().duration(400).ease(d3.easeBack);\n\n      sliderRejectCircle.filter(d => d === objectToMove).transition(t)\n        .attr('visibility', 'display')\n        .attr('cy', d => (circleEnlargeFactor * sliderSize(d)) / 2)\n        .attr('cx', d => (circleEnlargeFactor) * sliderSize(d));\n      sliderRejectIcon.filter(d => d === objectToMove).transition(t)\n        .attr('visibility', 'display')\n        .attr('y', d => (circleEnlargeFactor * sliderSize(d)) / 2 - sliderCircleIconSize / 2)\n        .attr('x', d => (circleEnlargeFactor) * sliderSize(d) - sliderCircleIconSize / 2);\n      sliderAcceptCircle.filter(d => d === objectToMove).transition(t)\n        .attr('visibility', 'display')\n        .attr('cy', d => (circleEnlargeFactor * sliderSize(d)) / 2)\n        .attr('cx', d => (2 * circleEnlargeFactor) * sliderSize(d) + magnifyIncrease);\n      sliderAcceptIcon.filter(d => d === objectToMove).transition(t)\n        .attr('visibility', 'display')\n        .attr('x', d => (2 * circleEnlargeFactor) * sliderSize(d) + magnifyIncrease - sliderCircleIconSize / 2)\n        .attr('y', d => (circleEnlargeFactor * sliderSize(d)) / 2 - sliderCircleIconSize / 2);\n    }\n\n    /**\n    * Saves the progress changes\n    */\n    function acceptChanges() {\n      objectToMove.data.pro = currentProgress;\n      if (updateProgressCallback !== null) {\n        updateProgressCallback(this, objectToMove, currentProgress);\n      }\n\n      let t = d3.transition().duration(200).ease(d3.easeBack);\n      t.end()\n        .then(() => {\n          sliderAcceptCircle.attr('visibility', 'hidden');\n          sliderAcceptIcon.attr('visibility', 'hidden');\n          sliderRejectCircle.attr('visibility', 'hidden');\n          sliderRejectIcon.attr('visibility', 'hidden');\n        });\n      resetSlider((d) => d === objectToMove, t, false);\n      confirmationDialogShown = false;\n      reduceSlider(objectToMove);\n      setTimeout(() => {\n        xTouchStart = -1;\n        currentProgress = null;\n        finalizingChanges = false;\n      }, 500);\n    }\n    /**\n    * Rejects the progress changes and restore previous state\n    */\n    function rejectChanges() {\n      let t = d3.transition().duration(200).ease(d3.easeLinear);\n      t.end().then(() => {\n        sliderAcceptCircle.attr('visibility', 'hidden');\n        sliderAcceptIcon.attr('visibility', 'hidden');\n        sliderRejectCircle.attr('visibility', 'hidden');\n        sliderRejectIcon.attr('visibility', 'hidden');\n      });\n      sliderSvg.filter(d => d === objectToMove).transition(t)\n        .attr(\"x\", d => computeCircleContainerXPosition(d));\n      learningGoalProgressBar.filter(d => d === objectToMove).transition(t)\n        .attr('width', d => computeLearningGoalProgressBarWidth(d));\n      sliderText.filter(d => d === objectToMove).transition(t)\n        .text(objectToMove.data.pro + '%')\n        .attr(\"x\", d => computeCircleTextXPosition(d));\n      resetSlider((d) => d === objectToMove, t, false);\n      let oldPro = objectToMove.data.pro;\n      objectToMove.data.pro = currentProgress;\n      let currentProg = Math.round(computeProgress(objectToMove.parent) * 100) / 100;\n      objectToMove.data.pro = oldPro;\n      let newProg = Math.round(computeProgress(objectToMove.parent) * 100) / 100;\n      let sign = currentProg > newProg ? -.01 : .01;\n      changeProgressDegree(currentProg, sign, currentProg, newProg, objectToMove.parent, 200);\n      confirmationDialogShown = false;\n      reduceSlider(objectToMove);\n      setTimeout(() => {\n        xTouchStart = -1;\n        finalizingChanges = false;\n      }, 200);\n    }\n\n    /**\n    * Changes the progress of a topic\n    * @param {float} prog Progress to set\n    * @param {float} sign Change in positive or negative\n    * @param {float} startValue Start value of the change (used for animation)\n    * @param {float} finishValue End value of the change (used for animation)\n    * @param {object} el Element to apply the change to\n    * @param {float} duration Duration of the animation\n    */\n    function changeProgressDegree(prog, sign, startValue, finishValue, el, duration) {\n      let actualProg = Math.round(prog * 100) / 100;\n      topicProgressText.filter(d => d === el).transition().duration(duration / (Math.abs(finishValue - startValue) * 100))\n        .text(`${parseInt(actualProg * 100)}%`);\n      topicProgressPie.filter(d => d === el).transition().duration(duration / (Math.abs(finishValue - startValue) * 100))\n        .attr('d', () => {\n          let newAngle = 2 * Math.PI * actualProg;\n          if (newAngle === 2 * Math.PI) {\n            return `M 50 50 m 49, 0 a 49,49 0 1,0 -98,0 a 49,49 0 1,0 98,0 z`;\n          }\n          let sin = Math.sin(newAngle);\n          let cos = Math.cos(newAngle);\n          return `M 50 50 v -49 A 49,49 0 ${newAngle >= Math.PI ? 1 : 0},1 ${sin * 49 + 50} ${-cos * 49 + 50} z`;\n        })\n        .end()\n        .then(() => {\n          if (Math.round(Math.abs(actualProg - finishValue) * 100) / 100 !== 0) {\n            return changeProgressDegree(prog === null ? null : prog + sign, sign, startValue, finishValue, el, duration);\n          }\n          currentProgress = null;\n          lastMousePosition = null;\n          confirmationDialogShown = false;\n          return;\n        });\n    }\n\n    let isShaking = false;\n    /**\n    *  Shakes the confirmation dialog\n    */\n    function shakeConfirmationDialog() {\n      if (isShaking) { return; }\n      isShaking = true;\n      if (!confirmationDialogShown) {\n        throw 'No dialog is open, what is going on';\n      }\n      shake(sliderAcceptG.filter(d => d === objectToMove), 1, 4);\n      shake(sliderRejectG.filter(d => d === objectToMove), -1, 4, true);\n    }\n    /**\n    *  Shakes the confirmation dialog\n    *  @param {object} element Element to shake\n    *  @param {int} startValue Start value\n    *  @param {int} recursion Number of times to repeat shaking\n    *  @param {bool} stopShaking Whether to stop shaking at the end\n    */\n    function shake(element, startValue, recursion, stopShaking = false) {\n      let t = d3.transition().duration(50);\n\n      if (!recursion && stopShaking) {\n        return element.transition(t)\n          .attr('transform', '').end().then(() => { isShaking = false; });\n      }\n      if (!recursion) {\n        return element.transition(t).attr('transform', '');\n      }\n      return element.transition(t)\n        .attr('transform', `translate(${startValue * 1},0)`)\n        .end().then(() => shake(element, startValue * -1, recursion - 1, stopShaking));\n    }\n\n    /**\n    *  Resizes the slider on hover\n    *  @param {event} e Mouseenter or mouseleave event\n    *  @param {object} p Element to resize\n    */\n    function resizeSlider(e, p) {\n      if (!isZoomedIn || confirmationDialogShown || changingProgress || finalizingChanges || zooming) {\n        return;\n      }\n      let increasing = e.type === 'mouseenter';\n      let posDiff = 0;\n      sliderSvg.filter(d => d === p).transition().duration(300)\n        .attr('x', d => {\n          let rectWidthVal = rectWidth(d.target);\n          if (increasing) {\n            let newVal = computeCircleContainerXPosition(d) - magnifyIncrease / 2;\n            let endVal = newVal + circleEnlargeFactor * sliderSize(d) + magnifyIncrease;\n            if (newVal < 0) {\n              posDiff = newVal;\n              newVal = 0;\n            }\n            else if (endVal > rectWidthVal) {\n              posDiff = endVal - rectWidthVal - 1;\n              newVal -= posDiff;\n            }\n            return newVal;\n          }\n          let position = computeCircleContainerXPosition(d);\n          return d.data.pro === 100 ? position + 1 : position;\n        })\n        .attr('y', d => increasing ? computeCircleContainerYPosition(d, true, magnifyIncrease) :\n          computeCircleContainerYPosition(d, true))\n        .attr('width', d => increasing ? circleEnlargeFactor * sliderSize(d) + magnifyIncrease :\n          circleEnlargeFactor * sliderSize(d))\n        .attr('height', d => increasing ? circleEnlargeFactor * sliderSize(d) + magnifyIncrease :\n          circleEnlargeFactor * sliderSize(d));\n      sliderText.filter(d => d === p).transition().duration(300)\n        .attr('x', (d, idx, nodes) => increasing ?\n          parseFloat(d3.select(nodes[idx]).attr('x')) - posDiff :\n          computeCircleTextXPosition(d));\n    }\n    /**\n    *  Reduces size of slider after changes are accepted/rejected\n    *  @param {object} p Element to resize\n    */\n    function reduceSlider(p) {\n      if (!isZoomedIn) { return; }\n      if (confirmationDialogShown) { return shakeConfirmationDialog(); }\n      sliderSvg.filter(d => d === p).transition().duration(300)\n        .attr('x', d => computeCircleContainerXPosition(d))\n        .attr('y', d => computeCircleContainerYPosition(d, true))\n        .attr('width', d => circleEnlargeFactor * sliderSize(d))\n        .attr('height', d => circleEnlargeFactor * sliderSize(d));\n      sliderText.filter(d => d === p).transition().duration(300)\n        .attr(\"x\", d => computeCircleTextXPosition(d));\n\n    }\n\n    /**\n    *  Moves the svg of the progress of the topic\n    *  @param {object} t Transition to apply\n    */\n    function moveTopicProgress(t) {\n      topicProgressG.transition(t)\n        .attr('transform', d => {\n          let tempWidth = rectWidth(d.target);\n          let tempHeight = rectHeight(d.target);\n          if (isZoomedIn && !isSmallScreen) {\n            return `translate(${tempWidth - mainCircleWidth - topicCellPadding}, ${tempHeight / 2 - mainCircleRadius})`;\n          }\n          if (isZoomedIn && isSmallScreen) {\n            return `translate(${rectWidth(d) - mainCircleWidth - topicCellPadding}, ${rectHeight(d) / 2 - mainCircleRadius})`;\n          }\n          if (!isZoomedIn && isSmallScreen) {\n            return `translate(${(width - lastY) / 2 + lastY - topicProgressSizeFactor() * mainCircleWidth / 2},\n              ${(height) / 2 - topicProgressSizeFactor() * mainCircleRadius})`;\n          }\n          return `translate(${tempWidth / 2 - (topicProgressSizeFactor() + 1) * mainCircleRadius},\n        ${tempHeight - topicProgressSizeFactor() * 4 * mainCircleRadius})`;\n        });\n      topicProgressContainerBG.transition(t)\n        .attr('x', isSmallScreen || isZoomedIn ? 0 : mainCircleRadius)\n        .attr('width', isZoomedIn ? mainCircleWidth : topicProgressSizeFactor() * mainCircleWidth)\n        .attr('height', isZoomedIn ? mainCircleWidth : topicProgressSizeFactor() * mainCircleWidth);\n      topicProgressContainer.transition(t)\n        .attr('x', isSmallScreen || isZoomedIn ? 0 : mainCircleRadius)\n        .attr('width', isZoomedIn ? mainCircleWidth : topicProgressSizeFactor() * mainCircleWidth)\n        .attr('height', isZoomedIn ? mainCircleWidth : topicProgressSizeFactor() * mainCircleWidth);\n      topicProgressTextSvg.transition(t)\n        .attr('width', isZoomedIn ? subCircleWidth : topicProgressSizeFactor() * subCircleWidth)\n        .attr('height', isZoomedIn ? subCircleWidth : topicProgressSizeFactor() * subCircleWidth)\n        .attr('x', () => {\n          if (isZoomedIn) { return (mainCircleRadius - subCircleRadius); }\n          if (!isZoomedIn && isSmallScreen) {\n            return topicProgressSizeFactor() * (mainCircleRadius - subCircleRadius);\n          }\n          return topicProgressSizeFactor() * (mainCircleRadius - subCircleRadius) + mainCircleRadius;\n        })\n        .attr('y', isZoomedIn ?\n          (mainCircleRadius - subCircleRadius) :\n          topicProgressSizeFactor() * (mainCircleRadius - subCircleRadius));\n      topicProgressText.transition(t)\n        .style(\"font\", `${(!isZoomedIn ? topicProgressSizeFactor() : 1) * subCircleWidth / 2.7}px sans-serif`)\n        .attr('y', isZoomedIn ? mainCircleRadius : topicProgressSizeFactor() * mainCircleRadius)\n        .attr('x', () => {\n          if (isZoomedIn) { return mainCircleRadius; }\n          if (!isZoomedIn && isSmallScreen) { return topicProgressSizeFactor() * mainCircleRadius; }\n          return (1 + topicProgressSizeFactor()) * mainCircleRadius;\n        });\n    }\n    /**\n    *  Computes the x position of the text containing the progress on the slider\n    *  @param {object} d Element to use\n    *  @returns {float} X position\n    */\n    function computeCircleTextXPosition(d) {\n      return computeCircleContainerXPosition(d) + circleEnlargeFactor * sliderSize(d) / 2;\n    }\n    /**\n    *  Computes the width of the progress slider container\n    *  @param {object} d Element to use\n    *  @param {float} extraFactor Additional factor to add to size of element\n    *  @returns {float} Width\n    */\n    function circleContainerBarWidth(d, extraFactor = 0) {\n      if (isSmallScreen && !hasTouchscreen) {\n        return (rectWidth(d.target) - circleEnlargeFactor * sliderSize(d) + extraFactor);\n      }\n      if (isSmallScreen) {\n        return (rectWidth(d.target) - circleEnlargeFactor * sliderSize(d) + extraFactor);\n      }\n      return (rectWidth(d) - circleEnlargeFactor * sliderSize(d) + extraFactor);\n\n    }\n    /**\n    *  Computes the y position of the circle of the slider that holds the progress\n    *  @param {object} d Element to use\n    *  @param {float} extraFactor Additional factor to add to size of element\n    *  @returns {float} Y position\n    */\n    function computeCircleContainerXPosition(d, extraFactor = 1) {\n      return circleContainerBarWidth(d, extraFactor) * d.data.pro / 100;\n    }\n    /**\n    *  Computes the x position of the circle of the slider that holds the progress\n    *  @param {object} d Element to use\n    *  @param {bool} useTarget Whether to use the target property or not\n    *  @param {float} extraValue Additional factor to subtract from the position\n    *  @returns {float} y position\n    */\n    function computeCircleContainerYPosition(d, useTarget = false, extraValue = 0) {\n      return rectHeight(useTarget ? d.target : d) - circleEnlargeFactor * sliderSize(d) - extraValue;\n    }\n    /**\n    *  Computes the width of the progress bar of a learning goal\n    *  @param {object} d Element to use\n    *  @param {float} progress Current progress\n    *  @returns {float} Width\n    */\n    function computeLearningGoalProgressBarWidth(d, progress = null) {\n      if (progress === null) { progress = d.data.pro / 100; }\n      if (progress >= .9) {\n        return rectWidth(hasTouchscreen && xTouchStart === -1 ? d : d.target) * (progress - 0.05);\n      }\n      if (progress < 0.05 && progress > 0) {\n        return rectWidth(hasTouchscreen && xTouchStart === -1 ? d : d.target) * (progress + 0.05);\n      }\n      return rectWidth(hasTouchscreen && xTouchStart === -1 ? d : d.target) * progress;\n    }\n\n    /**\n    *  Computes the size of the slider\n    *  @param {object} d Element to use\n    *  @returns {float} Size\n    */\n    function sliderSize(d) {\n      if (isSmallScreen) {\n        return Math.min(d.proY1 - d.proY0, 40);\n      }\n      return Math.min(d.proY1 - d.proY0, 56);\n    }\n\n    /**\n    *  Computes the size factor of the topic progress\n    *  @returns {float} Size\n    */\n    function topicProgressSizeFactor() {\n      if (!isZoomedIn && isSmallScreen) {\n        return (width - lastY) * 1.5 / ((2 * mainCircleWidth > 100 ? 100 / (mainCircleWidth) : 2) * mainCircleWidth);\n      }\n      return 2 * mainCircleWidth > 100 ? 100 / (mainCircleWidth) : 2;\n    }\n\n    /**\n    *  Changes the size of the slider svg\n    *  @param {object} element Element to change\n    *  @param {bool} smallVersion Whether to use the small version or not\n    *  @returns {object} For chaining\n    */\n    function changeSliderSvg(element, smallVersion) {\n      return element\n        .attr('width', d => smallVersion ? sliderSize(d) : 3 * circleEnlargeFactor * sliderSize(d))\n        .attr('height', d => smallVersion ? sliderSize(d) : circleEnlargeFactor * sliderSize(d))\n        .attr('x', d => {\n          if (smallVersion) { return d.proY0; }\n          return computeCircleContainerXPosition(d) - circleEnlargeFactor * sliderSize(d);\n        })\n        .attr('y', d => smallVersion ?\n          (rectHeight(d) - sliderSize(d)) / 2 :\n          rectHeight(d.target) - circleEnlargeFactor * sliderSize(d));\n    }\n\n    /**\n    *  Changes the position of the slider circles\n    *  @param {object} element Element to change\n    *  @param {bool} smallVersion Whether to use the small version or not\n    *  @returns {object} For chaining\n    */\n    function changeSliderCircles(element, smallVersion) {\n      return element\n        .attr('cx', d => smallVersion ? sliderCircleIconSize / 2 : 3 * circleEnlargeFactor * sliderSize(d) / 2)\n        .attr('cy', d => smallVersion ? sliderCircleIconSize / 2 : (circleEnlargeFactor - .5) * sliderSize(d));\n    }\n\n    /**\n    *  Changes the position of the slider circle icons\n    *  @param {object} element Element to change\n    *  @param {bool} smallVersion Whether to use the small version or not\n    *  @returns {object} For chaining\n    */\n    function changeSliderCircleIcon(element, smallVersion) {\n      return element\n        .attr('x', d => smallVersion ? 0 : (3 * circleEnlargeFactor * sliderSize(d) - sliderCircleIconSize) / 2)\n        .attr('y', d => smallVersion ? 0 : (circleEnlargeFactor - .5) * sliderSize(d) - sliderCircleIconSize / 2);\n    }\n\n    /**\n    *  Reset the slider to its initial position and size\n    *  @param {function} compFunc Filter function\n    *  @param {object} trans Transition to apply\n    *  @param {bool} smallVersion Whether to use the small version or not\n    */\n    function resetSlider(compFunc, trans, smallVersion) {\n      changeSliderSvg(sliderAcceptSvg.filter(d => compFunc(d)).transition(trans), smallVersion);\n      changeSliderSvg(sliderRejectSvg.filter(d => compFunc(d)).transition(trans), smallVersion);\n      changeSliderCircles(sliderAcceptCircle.filter(d => compFunc(d)).transition(trans), smallVersion);\n      changeSliderCircles(sliderRejectCircle.filter(d => compFunc(d)).transition(trans), smallVersion);\n      changeSliderCircleIcon(sliderAcceptIcon.filter(d => compFunc(d)).transition(trans), smallVersion);\n      changeSliderCircleIcon(sliderRejectIcon.filter(d => compFunc(d)).transition(trans), smallVersion);\n    }\n\n    /**\n    *  Setup of slider svg\n    *  @param {object} parentElement Parent element\n    *  @param {string} label Aria label\n    *  @param {function} func Function to apply on click\n    *  @returns {object} For chaining\n    */\n    function setupSliderSvg(parentElement, label, func) {\n      return changeSliderSvg(parentElement.append('svg'), true)\n        .attr('aria-label', label)\n        .attr('cursor', 'pointer')\n        .attr('fill', d => color(d.parent.data.name))\n        .on('click', func);\n    }\n\n    /**\n    *  Setup of slider circle\n    *  @param {object} parentElement Parent element\n    *  @returns {object} For chaining\n    */\n    function setupSliderCircles(parentElement) {\n      return changeSliderCircles(parentElement.append('circle'), true)\n        .attr('r', sliderCircleRadius)\n        .attr('visibility', 'hidden');\n    }\n\n    /**\n    *  Setup of slider circle icon\n    *  @param {object} parentElement Parent element\n    *  @param {string} path of the icon\n    *  @returns {object} For chaining\n    */\n    function setupSliderCircleIcon(parentElement, path) {\n      let el = changeSliderCircleIcon(parentElement.append('svg'), true)\n        .attr('viewBox', `0 0 ${circlesViewBox} ${circlesViewBox}`)\n        .attr('width', sliderCircleIconSize)\n        .attr('height', sliderCircleIconSize)\n        .attr('fill', 'none')\n        .attr('stroke', d => contrastCorrectedColor(d, 1, false))\n        .attr('stroke-linecap', 'round')\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-width', 4)\n        .attr('visibility', 'hidden');\n      el.append('path')\n        .attr('d', path === 'reject' ? rejectPath : acceptPath);\n      return el;\n    }\n\n    let isAccessibilityDialogShown = false;\n\n    /**\n    *  Toggles the accessibility dialog\n    */\n    function toggleAccessibilityDialog() {\n      if (!isSmallScreen && !isAccessibilityDialogShown) {\n        accessibilityBG.transition('blur-' + treemapId).duration(100).attr('fill', '#fefefe')\n          .end().then(() => accessibilityBG.transition().duration(100).attr('fill', `url(#gradient-${treemapId})`));\n      }\n      else if (!isSmallScreen) {\n        accessibilityCloseBG.transition('blur2-' + treemapId).duration(100).attr('fill', '#fefefe')\n          .end().then(() => accessibilityCloseBG.transition().duration(100).attr('fill', `url(#gradient-${treemapId})`));\n      }\n      accessibilityIconG.transition('transform-' + treemapId).duration(700).ease(d3.easePolyInOut.exponent(4))\n        .style('transform', isAccessibilityDialogShown ? 'translate(0,0)' : `translate(0, -200px)`);\n\n      if (!isAccessibilityDialogShown) {\n        blurDiv.style('z-index', 50);\n      }\n      blurDiv.transition('changeTop-' + treemapId).duration(700).ease(d3.easePolyInOut.exponent(4))\n        .style('top', `${isAccessibilityDialogShown ? -accessibilityDialogSVGHeight - 2 * colorPaletteBgRadius : 0}%`)\n        .end().then(() => {\n          if (!isAccessibilityDialogShown) {\n            blurDiv.style('z-index', -1);\n          }\n        });\n      isAccessibilityDialogShown = !isAccessibilityDialogShown;\n    }\n\n    /**\n    *  Computes the size of the text of the slider\n    *  @param {object} el Element where the text lies\n    *  @param {bool} smallVersion Whether to use the small version or not\n    *  @returns {float} Size\n    */\n    function sliderTextSize(el, smallVersion) {\n      if (!smallVersion) {\n        return circleEnlargeFactor * sliderSize(el) / 3.5;\n      }\n      let val = sliderTextShowPercent(el) ? sliderTextMaxFontSize : (el.proX1 - el.proX0) * fontFactor;\n      let elSize = sliderSize(el);\n      if (val > elSize) { val = elSize / 2; }\n      return val;\n    }\n    /**\n    *  Returns whether to show the percent symbol\n    *  @param {object} el Element\n    *  @returns {bool} Show % or not\n    */\n    function sliderTextShowPercent(el) {\n      return !isSmallScreen && sliderTextMaxFontSize < (el.proX1 - el.proX0) * fontFactor;\n    }\n    /**\n    *  Checks if the percent fits inside slider\n    *  @returns {bool} Show or not\n    */\n    function checkSliderPercentFits() {\n      let textFits = true;\n      sliderText.each((_, i, n) => {\n        if (n[i].getBoundingClientRect().width >=\n          n[i].parentNode.getElementsByClassName('slider')[0].getBoundingClientRect().width) {\n          textFits = false;\n        }\n      });\n      return textFits;\n    }\n    /**\n    *  Computes the height of the learning goal progress bar\n    *  @param {object} d Element\n    *  @returns {float} Height\n    */\n    function learningGoalProgressBarHeight(d) {\n      if (isZoomedIn) { return rectHeight(d.target); }\n      if (isSmallScreen && isLandscapeMode) {\n        return Math.min(rectHeight(d.target), 12) * 0.8;\n      }\n      if (isSmallScreen) {\n        return Math.min(rectHeight(d.target), 12);\n      }\n      return Math.min(rectHeight(d), 14);\n    }\n    /**\n    *  Computes the font size for an element\n    *  @param {object} el Element\n    *  @returns {float} Size\n    */\n    function fontSize(el) {\n      if (isSmallScreen) {\n        if (isZoomedIn && el.depth === 0) {\n          return Math.min(rectHeight(el.children[0].target) / 6, 17.0185) + currentTextZoom;\n        }\n        if (isZoomedIn && el.depth === 1) {\n          return Math.min(rectHeight(el.target) / 6, 17.0185) + currentTextZoom + 5;\n        }\n        if (isZoomedIn) {\n          return Math.min(rectHeight(el.target) - .5, 12.6302) + currentTextZoom + 3;\n        }\n        if (el.depth === 0) {\n          return rectWidth(el.target ?? el) / 2 + currentTextZoom + 5;\n        }\n        if (el.depth === 1) {\n          return Math.min(rectHeight(el.target ?? el) / 6, 17.0185) + currentTextZoom + 5;\n        }\n        return Math.min(rectHeight(el.target ?? el) - .5, 12.6302) + currentTextZoom + 3;\n      }\n\n      if (isZoomedIn && el.depth === 0) {\n        return Math.min(rectHeight(el.children[0].target) / 6, 20.0185) + currentTextZoom;\n      }\n      if (isZoomedIn && el.depth === 1) {\n        return Math.min(rectHeight(el.target) / 6, 25.0185) + currentTextZoom;\n      }\n      if (isZoomedIn) {\n        return Math.min(rectHeight(el.target) - .5, 20.6302) + currentTextZoom + 5;\n      }\n      if (el.depth === 0) {\n        return rectWidth(el) / 2 + currentTextZoom;\n      }\n      if (el.depth === 1) {\n        return Math.min(rectHeight(el) / 6, 20.0185) + currentTextZoom;\n      }\n      return Math.min(rectHeight(el) - .5, 11.6302) + currentTextZoom + 5;\n    }\n    /**\n    *  Toggles the zoom cursor between zoom out and in\n    */\n    function toggleZoomCursor() {\n      let newCursor = isZoomedIn ? 'zoom-out' : 'zoom-in';\n      topicProgressG.attr('cursor', newCursor);\n      learningGoalProgressBar.attr('cursor', newCursor);\n      rect.filter(d => d.depth > 0).attr('cursor', newCursor);\n    }\n\n    /**\n    *  Updates the text formatting (wraps or truncate text)\n    */\n    function updateTextFormatting() {\n      maintspan.style(\"font\", d => `${fontSize(d)}px sans-serif`);\n      if (isZoomedIn && isSmallScreen) {\n        maintspan.filter(d => d.depth === 2)\n          .call(wrapText,\n            (rectWidth(depth2Child.target) - 2 * topicCellPadding),\n            false,\n            (el) => {\n              return computeCircleContainerYPosition(el, true) +\n                circleEnlargeFactor * sliderSize(el) / 4;\n            },\n            topicCellPadding);\n\n        maintspan.filter(d => d.depth === 1)\n          .call(\n            wrapText,\n            (depth1Width - 2 * topicCellPadding),\n            false,\n            (el) => {\n              return rectHeight(el.target) -\n                4 * topicProgressSizeFactor() * mainCircleRadius;\n            },\n            topicCellPadding);\n\n      }\n      else if (isZoomedIn) {\n        maintspan.filter(d => d.depth === 2)\n          .call(\n            wrapText,\n            (depth2Width - 2 * topicCellPadding),\n            false,\n            () => {\n              return computeCircleContainerYPosition(depth2Child, true) + circleEnlargeFactor * sliderSize(depth2Child) / 4;\n            },\n            topicCellPadding);\n        maintspan.filter(d => d.depth === 1)\n          .call(\n            wrapText,\n            (depth1Width - 2 * topicCellPadding),\n            false,\n            (el) => {\n              return rectHeight(el.target) -\n                4 * topicProgressSizeFactor() * mainCircleRadius;\n            },\n            topicCellPadding);\n      }\n      else {\n        maintspan.filter(d => d.depth === 1)\n          .call(\n            wrapText,\n            depth1Width - mainCircleWidth - 3 * topicCellPadding,\n            false,\n            (el) => rectHeight(el),\n            topicCellPadding);\n        maintspan.filter(d => d.depth === 2)\n          .call(truncateText, depth2Width * 0.95, true);\n      }\n      maintspan.filter(d => d.depth === 0).text(widgetTitle);\n      text.filter(d => d.depth === 0)\n        .style('letter-spacing', '1em');\n      if (rootText.getBBox().height >= rootNode.querySelector('.rect').getBBox().height) {\n        text.filter(d => d.depth === 0)\n          .style('letter-spacing', '0.3em');\n        if (rootText.getBBox().height >= rootNode.querySelector('.rect').getBBox().height) {\n          truncateTitle(rootText, rootNode, maintspan.filter(d => d.depth === 0));\n        }\n\n      }\n    }\n\n    /**\n    *  Zooms in the text\n    */\n    function zoomInText() {\n      currentTextZoom += zoomDelta;\n      if (!isSmallScreen) {\n        zoomRightHalf.transition().duration(100).attr('fill', '#fefefe')\n          .end().then(() => zoomRightHalf.transition().duration(100).attr('fill', `url(#gradient-${treemapId})`)\n            .end().then(() => updateTextFormatting()));\n      } else { updateTextFormatting(); }\n    }\n\n    /**\n    *  Zooms out the text\n    */\n    async function zoomOutText() {\n      currentTextZoom -= zoomDelta;\n      if (!isSmallScreen) {\n        zoomLeftHalf.transition().duration(100).attr('fill', '#fefefe').end()\n          .then(() => zoomLeftHalf.transition().duration(100).attr('fill', `url(#gradient-${treemapId})`));\n      }\n      updateTextFormatting();\n      if (isZoomInDisabled) { enableZoomIn(); }\n    }\n    /**\n    *  Sets the aria label property of the title\n    */\n    function setDepth1AriaLabel() {\n      rect.filter(d => d.depth === 1)\n        .attr('tabindex', 0)\n        .attr('aria-label', d => {\n          let content = `Topic ${d.data.name}. Progress ${parseInt(computeProgress(d) * 100)}%.`;\n          if ('children' in d) {\n            content += `${d.children.length} learning goal${d.children.length > 1 ? 's' : ''}, press enter to expand the list.\n                     Use tab to navigate through it.`;\n          }\n          content += `${d.data.link ? 'External link is available, press control and enter to open it.' : ' '}`;\n          return content;\n        });\n    }\n\n    /**\n    *  Fits the vertical topic\n    */\n    function fitVerticalTopic() {\n      let topicNode = null;\n      let topicText = null;\n      addedTopic\n        .each((_, i, n) => {\n          topicText = n[i];\n          topicNode = topicText.parentNode.parentNode;\n        });\n      let padding = 30;\n      const currentClickedTopic = clickedTopic;\n      for (let em = 0.2; em > 0; em -= 0.1) {\n        if (!(topicText.getBBox().height + 2 * padding >= topicNode.querySelector('.rect').getBBox().height)) {\n          return;\n        }\n        text.filter(d => d === currentClickedTopic)\n          .style('letter-spacing', `${em}em`);\n      }\n      let currentSize = parseFloat(text.filter(d => d === clickedTopic)\n        .style(\"font\").split(\"p\")[0]);\n      let minWidth = 17;\n\n      const lastCurrentSize = currentSize;\n      while (currentSize > minWidth &&\n        topicText.getBBox().height + 2 * padding >=\n        topicNode.querySelector('.rect').getBBox().height) {\n        currentSize = parseFloat(d3.select(topicText)\n          .style(\"font\").split(\"p\")[0]);\n        d3.select(topicText)\n          .style(\"font\", `${lastCurrentSize - zoomDelta}px sans-serif`);\n      }\n      if (topicText.getBBox().height + 2 * padding < topicNode.querySelector('.rect').getBBox().height) { return; }\n\n      let originalText = addedTopic.html();\n      while (topicText.getBBox().height + 2 * padding >= topicNode.querySelector('.rect').getBBox().height) {\n        originalText = originalText.substring(0, originalText.length - 1);\n        addedTopic.html(originalText + U_ELLIPSIS);\n        if (originalText.length < 1) {\n          return;\n        }\n      }\n    }\n\n    let xTouchStart = -1;\n    /**\n    * Starts moving the slider with the touch\n    * @param {event} event Touch start event\n    * @param {object} d Clicked element\n    */\n    function sliderTouchStart(event, d) {\n      if (!isZoomedIn) { return; }\n      if (confirmationBoxesActive && confirmationDialogShown && d !== objectToMove) {\n        return shakeConfirmationDialog();\n      }\n      const pt = d3.select('#' + treemapId).select('svg').node().createSVGPoint();\n      pt.x = event.touches.item(0).clientX;\n      const svgP = pt.matrixTransform(d3.select('#' + treemapId).select('svg').node().getScreenCTM().inverse());\n      xTouchStart = svgP.x;\n      objectToMove = d;\n      changingProgress = true;\n    }\n\n    /**\n    * Moves the slider with the touch\n    * @param {event} e Touch move event\n    */\n    function sliderTouchMove(e) {\n      if (!isZoomedIn || !changingProgress) { return; }\n      e.preventDefault();\n      let svgP = null;\n      let xValue = null;\n      sliderSvg.filter(d => d === objectToMove).attr('x', (d, idx, nodes) => {\n        let parent = nodes[idx].parentElement.parentElement;\n        let parentRightBorder = parent.childNodes[0].getBoundingClientRect().right;\n        let parentLeftBorder = parent.childNodes[0].getBoundingClientRect().left;\n        let currentAttribute = parseFloat(d3.select(nodes[idx]).attr('x'));\n        if (e.touches.item(0).clientX > parentRightBorder || e.touches.item(0).clientX < parentLeftBorder) {\n          currentProgress = e.touches.item(0).clientX > parentRightBorder ? 100 : 0;\n          if (e.touches.item(0).clientX < parentLeftBorder) {\n            currentAttribute = 0;\n          } else {\n            currentAttribute = circleContainerBarWidth(d, -magnifyIncrease) + 1;\n          }\n          xValue = currentAttribute;\n          return currentAttribute;\n        }\n        const pt = d3.select('#' + treemapId).select('svg').node().createSVGPoint();\n        pt.x = e.touches.item(0).clientX;\n        svgP = pt.matrixTransform(d3.select('#' + treemapId).select('svg').node().getScreenCTM().inverse());\n        let val = currentAttribute - xTouchStart + svgP.x;\n\n        xTouchStart = svgP.x;\n        let barWidth = circleContainerBarWidth(d, -magnifyIncrease);\n        if (val < 0) { val = 0; }\n        if (val > barWidth) { val = barWidth + 1; }\n        currentProgress = parseInt(val * 100 / barWidth);\n        xValue = val;\n        return val;\n      });\n      learningGoalProgressBar.filter(d => d === objectToMove)\n        .attr(\"width\", d => computeLearningGoalProgressBarWidth(d, currentProgress / 100));\n      sliderText.filter(d => d === objectToMove)\n        .text(currentProgress + '%')\n        .attr(\"x\", d => {\n          return xValue + circleEnlargeFactor * sliderSize(d) / 2 + magnifyIncrease / 2;\n        });\n      sliderAcceptSvg.filter(d => d === objectToMove)\n        .attr('x', d => xValue - circleEnlargeFactor * sliderSize(d));\n      sliderRejectSvg.filter(d => d === objectToMove)\n        .attr('x', d => xValue - circleEnlargeFactor * sliderSize(d));\n\n      topicProgressText.filter(d => d === objectToMove.parent)\n        .text(d => {\n          let oldPro = objectToMove.data.pro;\n          objectToMove.data.pro = currentProgress;\n          let newVal = `${parseInt(computeProgress(d) * 100)}%`;\n          objectToMove.data.pro = oldPro;\n          return newVal;\n        });\n\n      topicProgressPie.filter(d => d === objectToMove.parent)\n        .attr('d', d => {\n          let oldPro = objectToMove.data.pro;\n          objectToMove.data.pro = currentProgress;\n          let angle = 2 * Math.PI * computeProgress(d);\n          objectToMove.data.pro = oldPro;\n          if (angle === 2 * Math.PI) {\n            return `M 50 50 m 49, 0 a 49,49 0 1,0 -98,0 a 49,49 0 1,0 98,0 `;\n          }\n          let sin = Math.sin(angle);\n          let cos = Math.cos(angle);\n          return `M 50 50 v -49 A 49,49 0 ${angle >= Math.PI ? 1 : 0},1 ${sin * 49 + 50} ${-cos * 49 + 50} L 50 50 z`;\n        });\n    }\n    /**\n    * Stops moving the slider with the touch\n    */\n    function sliderTouchEnd() {\n      if (!isZoomedIn || !changingProgress) { return; }\n      changingProgress = false;\n      if (Math.abs(currentProgress - objectToMove.data.pro) < 0.01) {\n        return;\n      }\n      if (confirmationBoxesActive) {\n        confirmationDialogShown = true;\n        toggleConfirmationDialog();\n      } else {\n        acceptChanges();\n      }\n    }\n    /**\n    * Searches for a depth 2 child\n    * @param {object} root Root element\n    * @returns {object} depth 2 child or null\n    */\n    function findDepth2Child(root) {\n      if (!root.children || !root.children.length) { return null; }\n      for (let i = 0; i < root.children.length; i++) {\n        if (!root.children[i].children || !root.children[i].children.length) {\n          continue;\n        }\n        return root.children[i].children[0];\n      }\n      return null;\n    }\n    /**\n    * Computes the number of elements in the treemap\n    * @param {object} data Data\n    * @returns {object} number of topics and the highest number of children a topic has\n    */\n    function getNumberOfElements(data) {\n      const numberOfTopics = data.children.length ?? 0;\n      let highestNumberChildren = 0;\n      if (numberOfTopics === 0) {\n        return { numberOfTopics, highestNumberChildren };\n      }\n      data.children.forEach((child) => {\n        if (child.children.length > highestNumberChildren) {\n          highestNumberChildren = child.children.length;\n        }\n      });\n      highestNumberChildren += 1;\n      return { numberOfTopics, highestNumberChildren };\n    }\n  }\n  /**\n  * Extracts the goals to highlight\n  * @param {object} rawGoals Raw goals\n  * @returns {object} Goals to highlight\n  */\n  function extractToHighlightGoals(rawGoals) {\n    let root = d3.select('#root-rect' + treemapId).data()[0];\n    let goals = [];\n    rawGoals.forEach(element => {\n      for (let i = 0; i < root.children.length; i++) {\n        if (root.children[i].data.name !== element.topic) { continue; }\n        for (let j = 0; j < root.children[i].children.length; j++) {\n          if (root.children[i].children[j].data.name !== element.goal) { continue; }\n          goals.push(root.children[i].children[j]);\n          return;\n        }\n      }\n    });\n    return goals;\n  }\n  /**\n  * Highlights the goals\n  * @param {object} goals Goals\n  */\n  /* eslint-disable-next-line no-unused-vars */\n  const highlightLearningGoals = (goals) => {\n    // Change border\n    highlightedGoals = extractToHighlightGoals(goals);\n    d3.select('#' + treemapId).selectAll('.rect').filter(d => highlightedGoals.includes(d))\n      .attr('class', 'rect highlight-rect');\n    d3.select('#' + treemapId).selectAll('.prog-bar').filter(d => highlightedGoals.includes(d))\n      .attr('class', 'prog-bar highlight-bar');\n    setTimeout(() => {\n      if (highlightedGoals) {\n        unhighlightLearningGoals();\n      }\n    }, 1000 * HIGHLIGHT_DURATION_SEC);\n  };\n  /**\n  * Remove highlight from the goals\n  */\n  function unhighlightLearningGoals() {\n    d3.select('#' + treemapId).selectAll('.rect').filter(d => highlightedGoals.includes(d))\n      .attr('class', 'rect');\n    d3.select('#' + treemapId).selectAll('.prog-bar').filter(d => highlightedGoals.includes(d))\n      .attr('class', 'prog-bar');\n    highlightedGoals = null;\n  }\n\n  /**\n  * Setup the svg\n  */\n  async function setupSvg() {\n    await getSvgNode();\n    let addedSvgs = d3.select('#' + treemapId).selectAll('.mainSvg');\n    for (let i = 0; i < addedSvgs._groups[0].length - 1; i++) {\n      d3.select('#' + treemapId).select('.mainSvg').remove();\n    }\n    let addedDivs = d3.select('#' + treemapId).selectAll('.mainDiv');\n    for (let i = 0; i < addedDivs._groups[0].length - 1; i++) {\n      d3.select('#' + treemapId).select('.mainDiv').remove();\n    }\n  }\n\n  //\n  /**\n  * Setup the treemap.\n  * @param {obj} taxonomyObj Taxonomy\n  * @param {obj} d3v7 d3v7\n  * @param {string} id Id of the treemap\n  * @param {string} accessibilityText Accessibility Text\n  * @param {bool} showConfirmation If true the user will be asked to accept\n  * or decline each progress change. If false then moving the slider will automatically set the progress\n  * @param {function} callback Callback\n  */\n  const setupTreemap = (taxonomyObj,\n    d3v7,\n    id = 'treemap-1',\n    accessibilityText = 'No text found',\n    showConfirmation,\n    callback) => {\n    // Test highlight\n    //    document.addEventListener('keydown', e => {\n    //      if(e.key !== 'C')\n    //      return;\n    //      let goals = [\n    //        {\n    //          \"topic\": \"Overview - Data Science and Artificial intelligence\",\n    //          \"goal\": \"Understand what artificial intelligence is\"\n    //        },\n    //        {\n    //          \"topic\": \"Rules\",\n    //          \"goal\": \"Apply forward chaining\"\n    //        }\n    //      ];\n    //      !highlightedGoals? highlightLearningGoals(goals) : unhighlightLearningGoals();\n    //    });\n    d3 = d3v7;\n    data = taxonomyObj;\n    taxonomy = taxonomyObj;\n    treemapId = id;\n    treemapAccessibilityText = accessibilityText;\n    confirmationBoxesActive = showConfirmation;\n    updateProgressCallback = callback;\n    window.onresize = setupSvg;\n  };\n  //Utils\n  /**\n   * Computes the contrast ration between two luminances\n  * @param {float} lum1 Luminance 1\n  * @param {float} lum2 Luminance 2\n  * @returns {float} contrast ratio\n   */\n  function computeContrastRatio(lum1, lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n  }\n  /**\n   * Computes the luminance of a color\n  * @param {array} rgb list [R, G, B]\n  * @returns {float} luminance\n   */\n  function computeLuminance(rgb) {\n      let sRGB = [0, 0, 0];\n      rgb.forEach((color, index) => {\n          let temp = color / 255;\n          sRGB[index] = temp <= 0.03928 ? temp / 12.92 : ((temp + 0.055) / 1.055) ** 2.4;\n      });\n      return 0.2126 * sRGB[0] + 0.7152 * sRGB[1] + 0.0722 * sRGB[2];\n  }\n  /**\n   * Converts a rgba color to rgb, meaning how it looks on the screen\n  * @param {array} rgba list [R, G, B]\n  * @param {*} bg background color\n  * @param {float} alpha Alpha of the color\n  * @param {bool} returnString whether to return color as array or string\n  * @returns {*} array or string in rgb\n   */\n  function convertRGBAtoRGB(rgba, bg, alpha, returnString = false) {\n      let savedRGBA = rgba;\n      if (typeof bg === 'string' && (bg.includes('rgb') || bg.includes('#'))) {\n          bg = parseRGB(bg);\n      }\n      else if (typeof bg === 'string' && bg.localeCompare('black') === 0) {\n          bg = [0, 0, 0];\n      }\n      else if (typeof bg === 'string' && bg.localeCompare('white') === 0) {\n          bg = [255, 255, 255];\n      }\n\n      if (rgba.includes('rgb') || rgba.includes('#')) {\n          let rgbaArray = parseRGB(rgba);\n          rgba = rgbaArray.slice(0, 3);\n          if (rgbaArray.length === 4) { alpha = rgbaArray[3]; }\n      }\n\n      if (alpha === undefined) {\n          throw \"Alpha is undefined for color \" + savedRGBA;\n      }\n\n      let rgb = [0, 0, 0];\n      rgba.forEach((color, index) => { rgb[index] = (1 - alpha) * bg[index] + alpha * color; });\n      return returnString ? convertRGBArrayToString(rgb) : rgb;\n  }\n  /**\n   * Converts a rgb string to array\n  * @param {*} element Color\n  * @returns {array} array rgb\n   */\n  function parseRGB(element) {\n      let rgb = [0, 0, 0];\n      if (element.indexOf('#') !== -1) {\n          //If it has 6 characters then each channel has 2 chars, if length is 3 then\n          //char need to be repeated\n          let channelLength = (element.length - 1) / 3;\n          let channelFactor = channelLength === 2 ? 1 : 2;\n          rgb[0] = parseInt(element.slice(1, channelLength + 1).repeat(channelFactor), 16);\n          rgb[1] = parseInt(element.slice(channelLength + 1, 2 * channelLength + 1).repeat(channelFactor), 16);\n          rgb[2] = parseInt(element.slice(2 * channelLength + 1, 3 * channelLength + 1).repeat(channelFactor), 16);\n          return rgb;\n      }\n      return element.replace(/^(rgb|rgba)\\(/, '').replace(/\\)$/, '').replace(/\\s/g, '').split(',');\n  }\n  /**\n   * Converts a rgb array to string\n  * @param {array} colorArray Color array\n  * @returns {string} rgb string\n   */\n  function convertRGBArrayToString(colorArray) {\n      let str = colorArray.length === 3 ? 'rgb(' : 'rgba(';\n      colorArray.forEach((color, index) => {\n          str += index === 3 ? parseFloat(color) : parseInt(color);\n          if (index !== colorArray.length - 1) {\n              str += \", \";\n          }\n      });\n      return str + ')';\n  }\n\n  /**\n   * Computes the width of a rect element\n  * @param {object} d Element\n  * @returns {float} Width\n   */\n  function rectWidth(d) {\n    return d ? d.y1 - d.y0 - Math.min(1, (d.y1 - d.y0) / 2) : null;\n  }\n  /**\n   * Computes the height of a rect element\n  * @param {object} d Element\n  * @returns {float} Height\n   */\n  function rectHeight(d) {\n    return d ? d.x1 - d.x0 - Math.min(1, (d.x1 - d.x0) / 2) : null;\n  }\n\n  /**\n   * Checks if the current device has a touchscreen\n  * @returns {bool} whether it has touchscreen or not\n   */\n  function detectTouchscreen() {\n      let hasTouchScreen = false;\n      if (\"maxTouchPoints\" in navigator) {\n          hasTouchScreen = navigator.maxTouchPoints > 0;\n      } else if (\"msMaxTouchPoints\" in navigator) {\n          hasTouchScreen = navigator['msMaxTouchPoints'] > 0;\n      } else {\n          let mQ = window.matchMedia && matchMedia(\"(pointer:coarse)\");\n          if (mQ && mQ.media === \"(pointer:coarse)\") {\n              hasTouchScreen = !!mQ.matches;\n          } else if ('orientation' in window) {\n              hasTouchScreen = true; // deprecated, but good fallback\n          }\n      }\n      return hasTouchScreen;\n  }\n  //Node\n  //  module.exports = {\n  //    setupTreemap : setupTreemap,\n  //    setupSvg : setupSvg,\n  //  }\n  // Moodle\n  exports.setupTreemap = setupTreemap;\n  exports.setupSvg = setupSvg;\n});\n"],"names":["define","require","exports","d3","U_ELLIPSIS","toString","widgetTitle","data","treemapId","treemapAccessibilityText","taxonomy","updateProgressCallback","highlightedGoals","confirmationBoxesActive","getSvgNode","clicked","ramp","contrastCorrectedColor","changeLinkFocus","resizeLinkElement","computeProgress","toggleLinkButton","truncateText","truncateTitle","wrapText","toggleZoomIn","disableZoomIn","enableZoomIn","createElement","roundedRect","toggleColorSchemes","getColorScheme","changeColorScheme","roundedCornersRect","appendEmptyCirclePath","performChanges","startChangingProgress","stopChangingProgress","toggleConfirmationDialog","acceptChanges","rejectChanges","changeProgressDegree","shakeConfirmationDialog","shake","resizeSlider","reduceSlider","moveTopicProgress","computeCircleTextXPosition","circleContainerBarWidth","computeCircleContainerXPosition","computeCircleContainerYPosition","computeLearningGoalProgressBarWidth","sliderSize","topicProgressSizeFactor","changeSliderSvg","changeSliderCircles","changeSliderCircleIcon","resetSlider","setupSliderSvg","setupSliderCircles","setupSliderCircleIcon","toggleAccessibilityDialog","sliderTextSize","sliderTextShowPercent","checkSliderPercentFits","learningGoalProgressBarHeight","fontSize","toggleZoomCursor","updateTextFormatting","zoomInText","zoomOutText","setDepth1AriaLabel","fitVerticalTopic","sliderTouchStart","sliderTouchMove","sliderTouchEnd","findDepth2Child","getNumberOfElements","numberOfTopics","children","length","highestNumberChildren","forEach","child","root","i","isZoomedIn","changingProgress","Math","abs","currentProgress","objectToMove","pro","confirmationDialogShown","e","preventDefault","svgP","xValue","sliderSvg","filter","d","attr","idx","nodes","parent","parentElement","parentRightBorder","childNodes","getBoundingClientRect","right","parentLeftBorder","left","currentAttribute","parseFloat","select","touches","item","clientX","magnifyIncrease","pt","node","createSVGPoint","x","matrixTransform","getScreenCTM","inverse","val","xTouchStart","barWidth","parseInt","learningGoalProgressBar","sliderText","text","circleEnlargeFactor","sliderAcceptSvg","sliderRejectSvg","topicProgressText","oldPro","newVal","topicProgressPie","angle","PI","sin","cos","event","topicNode","topicText","addedTopic","each","_","n","parentNode","currentClickedTopic","clickedTopic","em","getBBox","height","querySelector","style","currentSize","split","lastCurrentSize","zoomDelta","originalText","html","substring","rect","depth","content","name","link","currentTextZoom","isSmallScreen","zoomLeftHalf","transition","duration","end","then","isZoomInDisabled","zoomRightHalf","maintspan","call","rectWidth","depth2Child","target","topicCellPadding","el","depth1Width","rectHeight","mainCircleRadius","depth2Width","mainCircleWidth","rootText","rootNode","newCursor","topicProgressG","min","isLandscapeMode","textFits","width","getElementsByClassName","sliderTextMaxFontSize","proX1","proX0","fontFactor","smallVersion","elSize","isAccessibilityDialogShown","accessibilityCloseBG","accessibilityBG","accessibilityIconG","ease","easePolyInOut","exponent","blurDiv","accessibilityDialogSVGHeight","colorPaletteBgRadius","path","append","circlesViewBox","sliderCircleIconSize","rejectPath","acceptPath","sliderCircleRadius","label","func","color","on","compFunc","trans","sliderAcceptCircle","sliderRejectCircle","sliderAcceptIcon","sliderRejectIcon","element","proY0","lastY","proY1","progress","hasTouchscreen","useTarget","extraValue","extraFactor","t","tempWidth","tempHeight","topicProgressContainerBG","topicProgressContainer","topicProgressTextSvg","subCircleWidth","subCircleRadius","p","finalizingChanges","zooming","increasing","type","posDiff","rectWidthVal","endVal","position","startValue","recursion","stopShaking","isShaking","sliderAcceptG","sliderRejectG","prog","sign","finishValue","actualProg","round","newAngle","lastMousePosition","easeLinear","currentProg","newProg","setTimeout","this","easeBack","svg","includes","unhighlightLearningGoals","cx","cy","radius","innerRadiusFactor","viewBoxWidth","viewBoxHeight","savedColorschemes","localStorage","getItem","colorschemeStorageName","JSON","parse","setItem","stringify","interpolate","additionalColors","interpolateRgbBasis","scaleOrdinal","quantize","linkContainer","alphaArray","parseRGB","push","dropShadowParams","convertRGBArrayToString","linkIconSvg","convertRGBAtoRGB","bgColor","colorSchemesNames","newObj","colorPaletteBg","colorschemesOpened","colorSchemeHolderHeight","colorSchemeSamplePath","easeExp","index","colorSchemeHolderWidth","cornerRadius","colorSchemeBox","parentIndex","colorBoxWidth","colorSchemeSample","vTransDuration","yShift","colorPaletteSize","useDoubleColumnColorScheme","ceil","isIcon","size","linkIconSize","linkContainerSize","viewBox","linkContainerG","new_val","zoomRightHalfSvg","dynamicResizing","computeMaxHeight","padding","retryN","retry","elDepth","word","nodeData","words","reverse","line","lineHeight","tspan","added","textNode","_groups","currentWidth","maxHeight","pop","join","getComputedTextLength","someLineNonEmpty","allElementSmallEnough","String","fromCharCode","rootTspan","begin","hide","percent","isFocused","linkEnlarged","resizingLink","cell","focusLinkFactor","alpha","isDoubled","rgba","rgb","doubledRgb","L1","computeLuminance","L2","blackLuminance","whiteLuminance","contrastWhite","computeContrastRatio","contrastBlack","contrastWhiteDoubled","contrastBlackDoubled","colorschemeIndex","colors","correctedColor","colorscheme","hex","stdHeight","focus","appliedHeight","x0","x1","y0","y1","depth1Child","transitionDuration","savedTopic","remove","backArrowSvg","currentZoomState","newDuration","newT","indexOf","widthHeightAttr","sliderPath","hideTextDuration","rootElement","document","getElementById","clientWidth","window","innerHeight","detectTouchscreen","colorblindSchemes","partition","hierarchy","siblingsCount","sum","value","create","gradient","tempEl","tempElLen","max","tempY0","tabindex","blockSize","colorSchemeHolderPadding","sqrt","colorBoxHeight","colorSchemeTouchRects","colorBoxFactor","colorData","colorblind","toolBar","colorSchemePickerG","colorSchemesContainer","selectAll","colorPaletteIconG","colorPaletteSvg","zoomIconG","zoomBG","zoomLeftHalfSvg","accessibilityWidth","accessibilityIcon","descendants","lenght","evt","ctrlKey","keyCode","open","replaceAll","learningGoalTitle","isEnteringValue","newProgress","shiftKey","d2","newProInt","substr","Tab","sliderG","showSliderPercent","backArrowG","accessibilitySvg","accessibilityData","accessibilityFontSize","accessibilityFontLineHeight","accessibilityTextDiv","accessibilityDialogText","setupSvg","addedSvgs","addedDivs","lum1","lum2","sRGB","temp","bg","returnString","savedRGBA","localeCompare","rgbaArray","slice","undefined","channelLength","channelFactor","repeat","replace","colorArray","str","hasTouchScreen","navigator","maxTouchPoints","mQ","matchMedia","media","matches","setupTreemap","taxonomyObj","d3v7","id","accessibilityText","showConfirmation","callback","onresize"],"mappings":"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"}